"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Thu Oct 02 20:41:04 UTC 2025","Thu Oct 02 20:43:58 UTC 2025","173964","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Install PostgreSQL app via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Select the Preset `cpu-medium`
- Set PGbouncer.replicas to `1`
- Set Postgres Configuration.Instance replicas to `1`
- Click on Database Users `Add Entry`
- Enter Database `user name`
- Enter Database `name`
- Select PG Bouncer.Resource Preset `cpu-medium`

### Verify that:

- User can install `PostgreSQL` app via **UI**.
"
"passed","Thu Oct 02 20:50:18 UTC 2025","Thu Oct 02 20:50:59 UTC 2025","40511","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify User can uninstall app via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Click `Installed Apps` button.
- Click `Details` button on installed app container.
- Click `Uninstall` button.

### Verify that:

- PostgreSQL app uninstalled.
"
"passed","Thu Oct 02 21:01:45 UTC 2025","Thu Oct 02 21:02:35 UTC 2025","50671","E2E Tests","Shell App","TestE2EShellApp","","","Verify User can uninstall app via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click `Installed Apps` button.
- Click `Details` button on installed app container.
- Click `Uninstall` button.

### Verify that:

- Shell app uninstalled.
"
"failed","Thu Oct 02 20:47:08 UTC 2025","Thu Oct 02 20:49:49 UTC 2025","161393","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify PostgreSQL client installation in Shell app via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Install Shell app.
- Open Shell app.
- Install `postgresql-client` in Shell app.

### Verify that:

- `postgresql-client` packet is installed successfully.
"
"passed","Thu Oct 02 20:38:33 UTC 2025","Thu Oct 02 20:38:47 UTC 2025","13985","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Export DeepSeek app config via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Create Secret with token for HuggingFace token via API.
- Select Secret.
- Select HuggingFace model.
- Enter app Display name.
- Click `Export config` button.

### Verify that:

- Config downloaded as `yaml` file matches expected schema.
- Exported config contains valid data.
"
"passed","Thu Oct 02 20:36:36 UTC 2025","Thu Oct 02 20:36:41 UTC 2025","5436","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verfiy GET external Chat API returns 404","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- GET `external` OpenAI Compatible Chat API `hostname` link.

### Verify that:

- API response status is 404.
"
"passed","Thu Oct 02 21:03:39 UTC 2025","Thu Oct 02 21:04:32 UTC 2025","53472","E2E Tests","Shell App","TestE2EShellApp","","","Import Shell app config via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Import Shell app config via UI.

### Verify that:

- Install required data is the same as in imported config.
"
"passed","Thu Oct 02 20:38:50 UTC 2025","Thu Oct 02 20:39:02 UTC 2025","12318","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Import DeepSeek app config via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Import DeepSeek app config via UI.

### Verify that:

- Install required data is the same as in imported config.
"
"passed","Thu Oct 02 20:44:03 UTC 2025","Thu Oct 02 20:44:10 UTC 2025","6215","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify installed PostgreSQL app listed in Installed apps via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.

### Verify that:

- PostgreSQL app displayed in Installed Apps.
"
"passed","Thu Oct 02 20:36:08 UTC 2025","Thu Oct 02 20:36:17 UTC 2025","9352","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify app output API schemas is valid via UI","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.
- Scroll to `Output` section.

### Verify that:
- API sections data matching expected data format.
"
"passed","Thu Oct 02 20:54:48 UTC 2025","Thu Oct 02 20:57:56 UTC 2025","188590","E2E Tests","Shell App","TestE2EShellApp","","","Install Shell app via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.

### Verify that:

- User can install `Shell` app via **UI**.
"
"passed","Thu Oct 02 20:37:39 UTC 2025","Thu Oct 02 20:38:30 UTC 2025","51475","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify User can uninstall app via UI","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Click `Installed Apps` button.
- Click `Details` button on installed app container.
- Click `Uninstall` button.

### Verify that:

- DeepSeek app uninstalled.
"
"skipped","Thu Oct 02 20:43:58 UTC 2025","Thu Oct 02 20:43:58 UTC 2025","0","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify event list of installed PostgreSQL app via API","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- GET '/events' endpoint.

### Verify that:

- App events list contains states queued, progressing and healthy.
"
"passed","Thu Oct 02 20:58:16 UTC 2025","Thu Oct 02 20:58:24 UTC 2025","8169","E2E Tests","Shell App","TestE2EShellApp","","","Verify User can reach Shell app Details page from Installed Apps page","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.

### Verify that:

- `Shell app Details` page displayed.
"
"passed","Thu Oct 02 20:59:17 UTC 2025","Thu Oct 02 21:00:11 UTC 2025","53752","E2E Tests","Shell App","TestE2EShellApp","","","Verify User can reach Installed apps page from app container via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click `Show All` button on Shell App container.

### Verify that:

- Shell app displayed in Installed Apps.
"
"passed","Thu Oct 02 21:00:54 UTC 2025","Thu Oct 02 21:00:59 UTC 2025","5392","E2E Tests","Shell App","TestE2EShellApp","","","Verify app output contains required endpoints via API","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.

### Verify that `output` API response contains required endpoints:

- Http internal API
- Https external API
"
"passed","Thu Oct 02 20:36:20 UTC 2025","Thu Oct 02 20:36:25 UTC 2025","5353","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify app output contains required endpoints via API","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.

### Verify that `output` API response contains required endpoints:

- Http OpenAI Compatible Chat API
- Https OpenAI Compatible Chat API
- Http OpenAI Compatible Embeddings API
- Https OpenAI Compatible Embeddings API
"
"passed","Thu Oct 02 21:01:10 UTC 2025","Thu Oct 02 21:01:20 UTC 2025","10531","E2E Tests","Shell App","TestE2EShellApp","","","Open Shell application via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.
- Get `external https` endpoint.

### Verify that:

- Shell app can be launched via UI.
"
"passed","Thu Oct 02 20:58:07 UTC 2025","Thu Oct 02 20:58:14 UTC 2025","6428","E2E Tests","Shell App","TestE2EShellApp","","","Verify installed Shell app listed in Installed apps via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.

### Verify that:

- Shell app displayed in Installed Apps.
"
"passed","Thu Oct 02 20:36:28 UTC 2025","Thu Oct 02 20:36:33 UTC 2025","5127","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify app output endpoints schema via API","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.

### Verify that:

- API endpoints data matching expected json schema.
"
"passed","Thu Oct 02 20:46:11 UTC 2025","Thu Oct 02 20:46:18 UTC 2025","7562","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify PostgreSQL app details info via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Click `Installed Apps` button.
- Click `Details` button on installed app container.

### Verify that:

- PostgreSQL app Details info is valid.
"
"passed","Thu Oct 02 20:23:03 UTC 2025","Thu Oct 02 20:34:42 UTC 2025","698396","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Install DeepSeek app via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.

### Verify that:

- User can install `DeepSeek` app via **UI**.
"
"passed","Thu Oct 02 20:36:52 UTC 2025","Thu Oct 02 20:36:57 UTC 2025","5270","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verfiy GET external Chat API /v1/models returns valid data","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- GET `external` OpenAI Compatible Chat API `{hostname}/v1/models`.

### Verify that:

- API response contains valid data.
"
"passed","Thu Oct 02 21:00:23 UTC 2025","Thu Oct 02 21:00:29 UTC 2025","5748","E2E Tests","Shell App","TestE2EShellApp","","","Verify Installed apps details info via API","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Call `instances` API.

### Verify that:

- API response contains valid data.
"
"passed","Thu Oct 02 21:02:38 UTC 2025","Thu Oct 02 21:03:36 UTC 2025","57828","E2E Tests","Shell App","TestE2EShellApp","","","Export Shell app config via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Select `cpu-medium` Resource Preset.
- Set app Display name.
- Click `Export config` button.

### Verify that:

- Config downloaded as `yaml` file matches expected schema.
- Exported config contains valid data.
"
"passed","Thu Oct 02 21:00:13 UTC 2025","Thu Oct 02 21:00:21 UTC 2025","7516","E2E Tests","Shell App","TestE2EShellApp","","","Verify Installed apps details info via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click `Installed Apps` button.
- Click `Details` button on installed app container.

### Verify that:

- Shell app Details info is valid.
"
"passed","Thu Oct 02 20:52:09 UTC 2025","Thu Oct 02 20:53:04 UTC 2025","54513","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Import PostgreSQL app config via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Import PostgreSQL app config via UI.

### Verify that:

- Install required data is the same as in imported config.
"
"passed","Thu Oct 02 20:47:00 UTC 2025","Thu Oct 02 20:47:05 UTC 2025","5374","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify app output endpoints schema via API","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.

### Verify that:

- API endpoints data matching expected json schema.
"
"passed","Thu Oct 02 21:01:23 UTC 2025","Thu Oct 02 21:01:42 UTC 2025","19140","E2E Tests","Shell App","TestE2EShellApp","","","Enter command in Shell app via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.
- Get `external https` endpoint.
- Launch Shell app.
- Execute `apolo config show` command.

### Verify that Shell app output contains:

- executed command `apolo config show`.
- `User configuration` section.
- `Resource Preset` section.
"
"passed","Thu Oct 02 20:46:21 UTC 2025","Thu Oct 02 20:46:26 UTC 2025","5162","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify Installed apps details info via API","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Call `instances` API.

### Verify that:

- API response contains valid data.
"
"passed","Thu Oct 02 20:35:56 UTC 2025","Thu Oct 02 20:36:05 UTC 2025","9198","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify app output contains required endpoints via UI","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.
- Scroll to `Output` section.

### Verify that `Output` section contains:
- Http OpenAI Compatible Chat API
- Https OpenAI Compatible Chat API
- Http OpenAI Compatible Embeddings API
- Https OpenAI Compatible Embeddings API
"
"passed","Thu Oct 02 20:35:03 UTC 2025","Thu Oct 02 20:35:11 UTC 2025","8588","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify User can reach DeepSeek app Details page from Installed Apps page","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.

### Verify that:

- `DeepSeek app Details` page displayed.
"
"passed","Thu Oct 02 20:44:12 UTC 2025","Thu Oct 02 20:44:21 UTC 2025","8739","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify User can reach PostgreSQL app Details page from Installed Apps page","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.

### Verify that:

- `PostgreSQL app Details` page displayed.
"
"passed","Thu Oct 02 20:44:24 UTC 2025","Thu Oct 02 20:45:11 UTC 2025","47256","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify installed PostgreSQL app info displayed on the app container via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.

### Verify that:

- Label `Installed` is displayed on the PostgreSQL app container.
- `Show All` button displayed on the PostgreSQL app container.
"
"passed","Thu Oct 02 21:01:02 UTC 2025","Thu Oct 02 21:01:07 UTC 2025","5340","E2E Tests","Shell App","TestE2EShellApp","","","Verify app output endpoints schema via API","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.

### Verify that:

- API endpoints data matching expected json schema.
"
"passed","Thu Oct 02 20:35:38 UTC 2025","Thu Oct 02 20:35:45 UTC 2025","7497","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify Installed apps details info via UI","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Click `Installed Apps` button.
- Click `Details` button on installed app container.

### Verify that:

- DeepSeek app Details info is valid.
"
"passed","Thu Oct 02 20:35:23 UTC 2025","Thu Oct 02 20:35:35 UTC 2025","12309","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify User can reach Installed apps page from app container via UI","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Click `Show All` button on Shell App container.

### Verify that:

- DeepSeek app displayed in Installed Apps.
"
"passed","Thu Oct 02 21:00:42 UTC 2025","Thu Oct 02 21:00:51 UTC 2025","8803","E2E Tests","Shell App","TestE2EShellApp","","","Verify app output API schemas is valid via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.
- Scroll to `Output` section.

### Verify that:
- API sections data matching expected data format.
"
"passed","Thu Oct 02 20:35:14 UTC 2025","Thu Oct 02 20:35:20 UTC 2025","6079","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify installed DeepSeek app info displayed on the app container via UI","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.

### Verify that:

- Label `Installed` is displayed on the DeepSeek app container.
- `Show All` button displayed on the DeepSeek app container.
"
"passed","Thu Oct 02 20:46:40 UTC 2025","Thu Oct 02 20:46:50 UTC 2025","9234","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify app output user data schemas is valid via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.
- Scroll to `Output` section.

### Verify that:
- User data sections data matching expected data format.
"
"passed","Thu Oct 02 20:57:59 UTC 2025","Thu Oct 02 20:58:05 UTC 2025","5776","E2E Tests","Shell App","TestE2EShellApp","","","Verify event list of installed Shell app via API","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- GET '/events' endpoint.

### Verify that:

- App events list contains states queued, progressing and healthy.
"
"passed","Thu Oct 02 21:00:32 UTC 2025","Thu Oct 02 21:00:39 UTC 2025","7596","E2E Tests","Shell App","TestE2EShellApp","","","Verify app output contains required endpoints via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.
- Scroll to `Output` section.

### Verify that `Output` section contains:
- Http internal API
- Https external API
"
"passed","Thu Oct 02 20:36:44 UTC 2025","Thu Oct 02 20:36:49 UTC 2025","5392","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verfiy GET external Chat API /docs returns Swagger page","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- GET `external` OpenAI Compatible Chat API `{hostname}/docs link`.

### Verify that:

- Swagger page is returned.
"
"passed","Thu Oct 02 20:49:52 UTC 2025","Thu Oct 02 20:50:16 UTC 2025","23959","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify PostgreSQL client connection in Shell app via UI","
### Pre-conditions:
- PostgreSQL app installed.
- Shell app installed.

### Steps:
- Login with valid credentials.
- Get Postgres Users.Postgres User Credentials[0].Uri from `output` API.
- Open Shell app.
- Run `psql {URI}` command in Shell app.

### Verify that:

- psql connection is successful.
"
"passed","Thu Oct 02 20:35:48 UTC 2025","Thu Oct 02 20:35:53 UTC 2025","5099","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify Installed apps details info via API","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Call `instances` API.

### Verify that:

- API response contains valid data.
"
"passed","Thu Oct 02 20:37:00 UTC 2025","Thu Oct 02 20:37:36 UTC 2025","36284","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verfiy POST external Chat API /v1/chat/completions returns valid data","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- POST `external` OpenAI Compatible Chat API `{hostname}/v1/chat/completions`.

### Verify that:

- API response matching expected json schema.
"
"passed","Thu Oct 02 20:46:52 UTC 2025","Thu Oct 02 20:46:57 UTC 2025","4939","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify app output contains required endpoints via API","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.

### Verify that `output` API response contains required endpoints:

- Postgres User data
- Postgres Admin data
"
"passed","Thu Oct 02 20:34:44 UTC 2025","Thu Oct 02 20:34:50 UTC 2025","5814","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify event list of installed DeepSeek app via API","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- GET '/events' endpoint.

### Verify that:

- App events list contains states queued, progressing and healthy.
"
"passed","Thu Oct 02 20:58:27 UTC 2025","Thu Oct 02 20:59:14 UTC 2025","47049","E2E Tests","Shell App","TestE2EShellApp","","","Verify installed Shell app info displayed on the app container via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.

### Verify that:

- Label `Installed` is displayed on the Shell app container.
- `Show All` button displayed on the Shell app container.
"
"passed","Thu Oct 02 20:45:14 UTC 2025","Thu Oct 02 20:46:08 UTC 2025","54057","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify User can reach Installed apps page from app container via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Click `Show All` button on PostgreSQL App container.

### Verify that:

- PostgreSQL app displayed in Installed Apps.
"
"passed","Thu Oct 02 20:51:02 UTC 2025","Thu Oct 02 20:52:07 UTC 2025","65183","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Export PostgreSQL app config via UI","
 Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Select the Preset `cpu-medium`
- Set PGbouncer.replicas to `1`
- Set Postgres Configuration.Instance replicas to `1`
- Click on Database Users `Add Entry`
- Enter Database `user name`
- Enter Database `name`
- Select PG Bouncer.Resource Preset `cpu-medium`
- Click `Export config` button.

### Verify that:

- Config downloaded as `yaml` file matches expected schema.
- Exported config contains valid data.
"
"passed","Thu Oct 02 20:34:53 UTC 2025","Thu Oct 02 20:35:00 UTC 2025","6794","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify installed DeepSeek app listed in Installed apps via UI","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.

### Verify that:

- DeepSeek app displayed in Installed Apps.
"
"passed","Thu Oct 02 20:46:28 UTC 2025","Thu Oct 02 20:46:38 UTC 2025","9280","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify app output contains required users data via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.
- Scroll to `Output` section.

### Verify that `Output` section contains:
- Postgres User data
- Postgres Admin data
"
