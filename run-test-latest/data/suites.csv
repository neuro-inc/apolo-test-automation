"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sat Aug 16 02:42:55 UTC 2025","Sat Aug 16 02:45:02 UTC 2025","126743","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager cannot invite Admin to a project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
Verify that:
    - Manager cannot invite third user as Admin to a project.
"
"passed","Sat Aug 16 02:30:06 UTC 2025","Sat Aug 16 02:31:09 UTC 2025","62258","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Admin cannot remove himself from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that:
    - Admin cannot remove himself from organization.
"
"passed","Sat Aug 16 02:05:56 UTC 2025","Sat Aug 16 02:07:11 UTC 2025","75661","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Writer removes Reader from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add third user to organization via CLI.
-Add second user to project with Writer role via CLI.
-Add third user to project with Reader role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Writer cannot remove members from project via CLI.
"
"passed","Sat Aug 16 02:28:42 UTC 2025","Sat Aug 16 02:30:50 UTC 2025","127796","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Writer cannot remove members from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Writer cannot remove members from project
"
"passed","Sat Aug 16 01:35:44 UTC 2025","Sat Aug 16 01:36:21 UTC 2025","36940","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Writer to Reader in project via CLI",""
"passed","Sat Aug 16 02:19:39 UTC 2025","Sat Aug 16 02:20:18 UTC 2025","38670","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User creates a second organization via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
Verify that:
    - User can create second organization via CLI.
"
"passed","Sat Aug 16 02:40:13 UTC 2025","Sat Aug 16 02:40:41 UTC 2025","27537","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","User creates a second project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create first project via CLI.
Verify that:
    - User can create second project via CLI.
"
"passed","Sat Aug 16 01:58:33 UTC 2025","Sat Aug 16 02:00:56 UTC 2025","142510","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can demote Writer to Reader","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Writer role.
Verify that:
    - Manager can demote Writer to Reader
"
"passed","Sat Aug 16 02:55:37 UTC 2025","Sat Aug 16 02:55:51 UTC 2025","13447","UI Tests","UI Login","TestUILogin","","","New user successful login","
Verify that:
    User can login with valid credentials.
"
"passed","Sat Aug 16 02:00:28 UTC 2025","Sat Aug 16 02:01:31 UTC 2025","63287","UI Tests","UI Files","TestUIFiles","","","Verify Admin can create new folder","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Admin role.
Verify that:
    - Admin can create new folder
"
"passed","Sat Aug 16 02:03:23 UTC 2025","Sat Aug 16 02:04:04 UTC 2025","40567","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager removes Manager from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add third user to organization via CLI.
-Add second user to project with Manager role via CLI.
-Add third user to project with Manager role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager can remove another Manager from project via CLI.
"
"passed","Sat Aug 16 02:25:13 UTC 2025","Sat Aug 16 02:25:53 UTC 2025","39813","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","Invite user to organization with default project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
-Create first project with 'default' option via CLI.
Verify that:
    - User can invite registered user to organization via CLI.
    - Newly invited user is member of default project.
"
"passed","Sat Aug 16 01:54:34 UTC 2025","Sat Aug 16 01:55:16 UTC 2025","42764","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Admin to Reader in project via CLI",""
"passed","Sat Aug 16 02:50:54 UTC 2025","Sat Aug 16 02:51:00 UTC 2025","6178","CLI Tests","CLI Login","TestCLILogin","","","User without organization logs in with auth token via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
Verify that:
    - User can login with Bearer auth token via CLI.
    - Login output in CLI doesn't contain organization and project.
"
"passed","Sat Aug 16 02:50:47 UTC 2025","Sat Aug 16 02:51:20 UTC 2025","32978","UI Tests","UI Credits Purchase","TestUICreditsPurchase","","","Verify User cannot purchase credits via top pane","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with User role.
Verify that:
    - User cannot purchase credits via top pane.
"
"skipped","Sat Aug 16 02:05:08 UTC 2025","Sat Aug 16 02:05:49 UTC 2025","40836","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager removes himself from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add second user to project with Manager role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager cannot remove himself from project via CLI.
"
"passed","Sat Aug 16 01:32:58 UTC 2025","Sat Aug 16 01:33:54 UTC 2025","56780","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Reader to Writer in project via CLI",""
"passed","Sat Aug 16 02:47:20 UTC 2025","Sat Aug 16 02:47:50 UTC 2025","30198","UI Tests","UI Organization Roles Access","TestUIOrganizationRolesAccess","","","Verify invited Admin can access organization settings","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that Admin:
    - Can access organization Settings.
"
"passed","Sat Aug 16 01:38:16 UTC 2025","Sat Aug 16 01:39:40 UTC 2025","83915","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Writer to Manager","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Writer role.
Verify that:
    - Admin can promote Writer to Manager
"
"passed","Sat Aug 16 02:53:24 UTC 2025","Sat Aug 16 02:54:30 UTC 2025","66199","UI Tests","UI Signup","TestUISignup","","","Invite not registered user as user to organization","
-Login with valid credentials.
-Create new organization.
Verify that:
    User can invite not registered user to organization.
"
"passed","Sat Aug 16 01:40:40 UTC 2025","Sat Aug 16 01:41:17 UTC 2025","37001","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Admin to Reader in project via CLI",""
"passed","Sat Aug 16 02:01:47 UTC 2025","Sat Aug 16 02:02:34 UTC 2025","47600","UI Tests","UI Files","TestUIFiles","","","User make single click on Folder","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new folder.
Verify that after single click on folder following elements appear:
    - Folder info section
    - Folder action bar
"
"passed","Sat Aug 16 01:57:36 UTC 2025","Sat Aug 16 01:58:04 UTC 2025","28239","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin removes Reader from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add second user to project with Reader role via CLI.
Verify that:
    - Admin can remove Reader from project via CLI.
"
"passed","Sat Aug 16 02:27:41 UTC 2025","Sat Aug 16 02:28:18 UTC 2025","37484","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Create First Organization via UI","
-Login with valid credentials.
Verify that:
    User can create first organization during onboarding.
"
"passed","Sat Aug 16 01:44:15 UTC 2025","Sat Aug 16 01:44:45 UTC 2025","30087","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin demote himself to Manager in project via CLI",""
"passed","Sat Aug 16 02:08:41 UTC 2025","Sat Aug 16 02:09:21 UTC 2025","39193","UI Tests","UI Files","TestUIFiles","","","User download txt file","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Upload txt file.
Verify that:
    - user can download txt file via UI.
    - downloaded bin file md5 hash matches expected file.
"
"passed","Sat Aug 16 02:51:27 UTC 2025","Sat Aug 16 02:53:45 UTC 2025","137952","UI Tests","UI Credits Purchase","TestUICreditsPurchase","","","Verify Manager can purchase organization credits with predefined value","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role.
Verify that:
    - Manager can purchase credits using predefined value(10, 100, 1000).
"
"passed","Sat Aug 16 02:03:37 UTC 2025","Sat Aug 16 02:05:42 UTC 2025","124824","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can promote Writer to Manager","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Writer role.
Verify that:
    - Manager can promote Writer to Manager
"
"passed","Sat Aug 16 02:20:25 UTC 2025","Sat Aug 16 02:21:07 UTC 2025","41613","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User removes organization via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
-Create second organization via CLI.
Verify that:
    - User can remove organization via CLI.
"
"passed","Sat Aug 16 02:07:27 UTC 2025","Sat Aug 16 02:08:19 UTC 2025","51949","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Reader removes Reader from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add third user to organization via CLI.
-Add second user to project with Reader role via CLI.
-Add third user to project with Reader role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Reader cannot remove members from project via CLI.
"
"passed","Sat Aug 16 02:38:51 UTC 2025","Sat Aug 16 02:39:40 UTC 2025","48981","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Manager cannot remove himself from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
Verify that:
    - Manager cannot remove himself from organization
"
"passed","Sat Aug 16 02:49:45 UTC 2025","Sat Aug 16 02:50:04 UTC 2025","19628","CLI Tests","CLI Secrets","TestCLISecrets","","","Admin create second secret via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Create first secret via CLI.
Verify that:
    - User can create second secret via CLI.
"
"passed","Sat Aug 16 02:15:29 UTC 2025","Sat Aug 16 02:15:54 UTC 2025","24884","CLI Tests","CLI Storage","TestCLIStorage","","","Admin download text file via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Upload text file via CLI.
Verify that:
    - User can download txt file via CLI.
    - downloaded txt file md5 hash matches expected file.
"
"passed","Sat Aug 16 01:39:15 UTC 2025","Sat Aug 16 01:39:50 UTC 2025","35478","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Manager to Writer in project via CLI",""
"passed","Sat Aug 16 02:22:06 UTC 2025","Sat Aug 16 02:22:59 UTC 2025","53610","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Manager removes Admin from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with Manager role via CLI.
-Add third user to organization with Admin role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager cannot remove Admin from organization via CLI.
"
"passed","Sat Aug 16 02:50:20 UTC 2025","Sat Aug 16 02:52:00 UTC 2025","100123","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Invite member that NOT in organization to project via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup new user.
-DO NOT invite second user to organization.
Verify that:
    User cannot invite to project another user which is not member of organization.
"
"passed","Sat Aug 16 02:44:18 UTC 2025","Sat Aug 16 02:44:39 UTC 2025","21261","CLI Tests","CLI Disks","TestCLIDisks","","","Admin create second disk via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Create new project via API.
-Login with Bearer auth token via CLI.
-Create first disk via CLI.
Verify that:
    - User can create second disk via CLI.
"
"passed","Sat Aug 16 01:45:22 UTC 2025","Sat Aug 16 01:46:36 UTC 2025","73599","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Admin to Reader","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Admin role.
Verify that:
    - Admin can demote Admin to Reader
"
"passed","Sat Aug 16 01:34:02 UTC 2025","Sat Aug 16 01:34:52 UTC 2025","50056","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Reader to Manager in project via CLI",""
"passed","Sat Aug 16 01:48:16 UTC 2025","Sat Aug 16 01:50:35 UTC 2025","138597","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager can change Manager role to User","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with Manager role via API.
Verify that:
    - Manager can change user role from Manager to User
    - User after changing role from Manager to User:
        - Cannot access organization Settings
        - Cannot access organization Billing
"
"passed","Sat Aug 16 02:13:14 UTC 2025","Sat Aug 16 02:13:49 UTC 2025","34928","CLI Tests","CLI Storage","TestCLIStorage","","","Admin remove folder via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Create new folder via CLI.
Verify that:
    - User can remove folder via CLI.
"
"passed","Sat Aug 16 01:51:27 UTC 2025","Sat Aug 16 01:52:38 UTC 2025","71420","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Manager to Reader in project via CLI",""
"passed","Sat Aug 16 02:44:17 UTC 2025","Sat Aug 16 02:45:21 UTC 2025","63402","UI Tests","UI Organization Roles Access","TestUIOrganizationRolesAccess","","","Verify invited User access","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with User role via API.
Verify that User:
    - Cannot access organization Settings
    - Cannot access organization Billing
    - Cannot invite member to organization
    - Cannot edit organization members
    - Cannot delete members from organization
"
"passed","Sat Aug 16 02:40:39 UTC 2025","Sat Aug 16 02:42:48 UTC 2025","128448","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can invite Manager to a project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
Verify that:
    - Manager can invite third user as Manager to a project
"
"passed","Sat Aug 16 02:16:12 UTC 2025","Sat Aug 16 02:16:41 UTC 2025","28805","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Admin removes Admin from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with Admin role via CLI.
Verify that:
    - Admin can remove Admin from organization via CLI.
"
"passed","Sat Aug 16 02:20:28 UTC 2025","Sat Aug 16 02:22:53 UTC 2025","145029","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager can remove Writer from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Writer role.
Verify that:
    - Manager can remove Writer from project
"
"passed","Sat Aug 16 02:53:00 UTC 2025","Sat Aug 16 02:53:17 UTC 2025","17286","UI Tests","UI Signup","TestUISignup","","","New user successful signup","
Verify that:
    New user can signup via UI.
"
"passed","Sat Aug 16 02:43:31 UTC 2025","Sat Aug 16 02:44:11 UTC 2025","40718","UI Tests","UI Disks","TestUIDisks","","","Delete Disk via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new Disk.
Verify that:
    - User can delete Disk.
"
"passed","Sat Aug 16 02:30:57 UTC 2025","Sat Aug 16 02:33:14 UTC 2025","136771","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Reader cannot remove members from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Reader cannot remove members from project
"
"passed","Sat Aug 16 01:38:29 UTC 2025","Sat Aug 16 01:39:55 UTC 2025","85840","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change Admin role to User","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that:
    - Admin can change user role from Admin to User
    - User after changing role from Admin to User:
        - Cannot access organization Settings
        - Cannot access organization Billing
"
"passed","Sat Aug 16 01:53:36 UTC 2025","Sat Aug 16 01:54:24 UTC 2025","48430","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Manager to Admin in project via CLI",""
"passed","Sat Aug 16 02:39:08 UTC 2025","Sat Aug 16 02:39:36 UTC 2025","27643","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","User creates a first project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
Verify that:
    - User can create first project via CLI.
"
"passed","Sat Aug 16 02:40:55 UTC 2025","Sat Aug 16 02:41:29 UTC 2025","33822","UI Tests","UI Disks","TestUIDisks","","","Create Second Disk via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new Disk.
Verify that:
    - User can create second Disk.
"
"passed","Sat Aug 16 02:03:29 UTC 2025","Sat Aug 16 02:04:19 UTC 2025","49785","UI Tests","UI Files","TestUIFiles","","","User rename Folder","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new folder.
Verify that:
    - User can rename a folder with Rename button from File action bar.
"
"passed","Sat Aug 16 02:45:45 UTC 2025","Sat Aug 16 02:46:14 UTC 2025","28573","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Create First Project from top pane of main via UI","
-Login with valid credentials.
-Create new organization via API.
Verify that:
    User can create first project in organization from project menu in the top pane of the main page.
"
"passed","Sat Aug 16 02:17:37 UTC 2025","Sat Aug 16 02:18:34 UTC 2025","56944","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User creates a first organization via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Login with Bearer auth token via CLI.
Verify that:
    - User can create first organization via CLI.
"
"passed","Sat Aug 16 02:54:36 UTC 2025","Sat Aug 16 02:55:33 UTC 2025","57426","UI Tests","UI Signup","TestUISignup","","","Invite not registered user to organization with default project via UI","
-Login with valid credentials.
-Create new organization.
-Create project with 'default' option.
-Invite not registered user to organization.
Verify that:
    Newly invited user automatically is member of default project.
"
"passed","Sat Aug 16 01:50:44 UTC 2025","Sat Aug 16 01:52:24 UTC 2025","100184","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager cannot change Manager role to Admin","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with Manager role via API.
Verify that:
    - Manager cannot change user role from Manager to Admin.
"
"passed","Sat Aug 16 01:44:17 UTC 2025","Sat Aug 16 01:45:14 UTC 2025","57236","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Manager to Admin","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
Verify that:
    - Admin can promote Manager to Admin
"
"passed","Sat Aug 16 02:14:58 UTC 2025","Sat Aug 16 02:15:30 UTC 2025","31878","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Admin removes User from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with User role via CLI.
Verify that:
    - Admin can remove User from organization via CLI.
"
"passed","Sat Aug 16 02:07:17 UTC 2025","Sat Aug 16 02:07:56 UTC 2025","38611","UI Tests","UI Files","TestUIFiles","","","User make single click on File","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Upload txt file.
Verify that after single click on file following elements appear:
    - File info section
    - File action bar
"
"passed","Sat Aug 16 01:59:00 UTC 2025","Sat Aug 16 01:59:34 UTC 2025","34583","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin removes Manager from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add second user to project with Manager role via CLI.
Verify that:
    - Admin can remove Manager from project via CLI.
"
"passed","Sat Aug 16 01:45:45 UTC 2025","Sat Aug 16 01:48:09 UTC 2025","143814","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager cannot change User role to Admin","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with User role via API.
Verify that:
    - Manager cannot change user role from User to Admin.
"
"passed","Sat Aug 16 02:45:17 UTC 2025","Sat Aug 16 02:45:46 UTC 2025","28964","CLI Tests","CLI Disks","TestCLIDisks","","","Admin remove disk via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Create new project via API.
-Login with Bearer auth token via CLI.
-Create first disk via CLI.
Verify that:
    - User can delete disk via CLI.
"
"passed","Sat Aug 16 02:24:58 UTC 2025","Sat Aug 16 02:27:23 UTC 2025","144818","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager cannot remove Admin from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Admin role.
Verify that:
    - Manager cannot remove Admin from project
"
"passed","Sat Aug 16 02:42:44 UTC 2025","Sat Aug 16 02:43:20 UTC 2025","35606","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","Add user not in organization to project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
Verify that:
    - User cannot add registered user not from organization to project via CLI.
"
"passed","Sat Aug 16 02:25:07 UTC 2025","Sat Aug 16 02:26:10 UTC 2025","63271","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Admin can remove User from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with User role via API.
Verify that:
    - Admin can remove User from organization.
"
"passed","Sat Aug 16 01:42:50 UTC 2025","Sat Aug 16 01:43:58 UTC 2025","67859","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin cannot demote himself to Manager","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that:
    - Admin cannot demote himself to Manager
"
"passed","Sat Aug 16 02:45:08 UTC 2025","Sat Aug 16 02:45:39 UTC 2025","30609","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Create First Project from main page via UI","
-Login with valid credentials.
-Create new organization via API.
Verify that:
    User can create first project in organization from the main page.
"
"passed","Sat Aug 16 02:00:57 UTC 2025","Sat Aug 16 02:02:11 UTC 2025","74182","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager removes Reader from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add third user to organization via CLI.
-Add second user to project with Manager role via CLI.
-Add third user to project with Reader role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager can remove Reader from project via CLI.
"
"passed","Sat Aug 16 02:00:29 UTC 2025","Sat Aug 16 02:00:49 UTC 2025","20236","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin removes himself from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
Verify that:
    - Admin cannot remove himself from project via CLI.
"
"passed","Sat Aug 16 01:37:02 UTC 2025","Sat Aug 16 01:38:23 UTC 2025","80307","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change Manager role to Admin","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
Verify that:
    - Admin can change user role from Manager to Admin
    - User after changing role from Manager to Admin:
        - Can access organization Settings
        - Can access organization Billing
"
"passed","Sat Aug 16 02:24:20 UTC 2025","Sat Aug 16 02:25:01 UTC 2025","40740","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","User removes User from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with User role via CLI.
-Add third user to organization with User role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - User cannot remove members from organization via CLI.
"
"passed","Sat Aug 16 02:23:45 UTC 2025","Sat Aug 16 02:24:13 UTC 2025","27791","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Manager removes himself from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with Manager role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager cannot remove himself from organization via CLI.
"
"passed","Sat Aug 16 02:22:13 UTC 2025","Sat Aug 16 02:22:46 UTC 2025","33275","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User switch organization via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
-Create second organization via CLI.
Verify that:
    - User can switch between organizations via CLI.
"
"passed","Sat Aug 16 02:16:01 UTC 2025","Sat Aug 16 02:16:29 UTC 2025","28473","CLI Tests","CLI Storage","TestCLIStorage","","","Admin download bin file via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Upload bin file via CLI.
Verify that:
    - User can download bin file via CLI.
    - downloaded bin file md5 hash matches expected file.
"
"passed","Sat Aug 16 02:26:16 UTC 2025","Sat Aug 16 02:27:54 UTC 2025","97941","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Admin can remove Manager from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
Verify that:
    - Admin can remove Manager from organization.
"
"passed","Sat Aug 16 02:18:16 UTC 2025","Sat Aug 16 02:19:16 UTC 2025","59870","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Manager removes User from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with Manager role via CLI.
-Add third user to organization with User role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager can remove User from organization via CLI.
"
"passed","Sat Aug 16 02:31:10 UTC 2025","Sat Aug 16 02:33:54 UTC 2025","163459","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Search Member of organization via UI","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization via API.
-Signup third user.
-Invite third user to organization via API.
Verify that:
    User can search organization members using Search field.
"
"passed","Sat Aug 16 01:56:26 UTC 2025","Sat Aug 16 01:58:26 UTC 2025","120134","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager cannot promote Reader to Admin","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Manager cannot promote Reader to Admin
"
"passed","Sat Aug 16 01:41:05 UTC 2025","Sat Aug 16 01:42:42 UTC 2025","97729","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin cannot demote himself to User","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that:
    - Admin cannot demote himself to User
"
"passed","Sat Aug 16 01:52:30 UTC 2025","Sat Aug 16 01:54:21 UTC 2025","110954","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager cannot change Admin role to User","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with Admin role via API.
Verify that:
    - Manager cannot change user role from Admin to User
"
"passed","Sat Aug 16 01:55:25 UTC 2025","Sat Aug 16 01:56:12 UTC 2025","47584","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Writer change member role from Reader to Writer in project via CLI",""
"passed","Sat Aug 16 01:35:32 UTC 2025","Sat Aug 16 01:36:29 UTC 2025","56701","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Reader to Admin","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
Verify that:
    - Admin can promote Reader to Admin
"
"passed","Sat Aug 16 01:49:29 UTC 2025","Sat Aug 16 01:50:27 UTC 2025","57946","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Writer to Manager in project via CLI",""
"passed","Sat Aug 16 02:52:15 UTC 2025","Sat Aug 16 02:52:54 UTC 2025","38645","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Invite not registered user to project via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
Verify that:
    User cannot invite to project another user which is not registered.
"
"passed","Sat Aug 16 02:22:54 UTC 2025","Sat Aug 16 02:23:28 UTC 2025","34140","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","Invite user to org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
Verify that:
    - User can invite registered user to organization via CLI.
"
"passed","Sat Aug 16 02:05:49 UTC 2025","Sat Aug 16 02:08:13 UTC 2025","143924","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager cannot promote Writer to Admin","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Writer role.
Verify that:
    - Manager cannot promote Writer to Admin
"
"passed","Sat Aug 16 02:46:28 UTC 2025","Sat Aug 16 02:47:32 UTC 2025","64314","UI Tests","UI Secrets","TestUISecrets","","","Create First Secret via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
Verify that:
    - User can create first Secret after project created
"
"passed","Sat Aug 16 01:56:11 UTC 2025","Sat Aug 16 01:57:40 UTC 2025","88557","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager cannot demote himself to User","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
Verify that:
    - Manager cannot demote himself to User.
"
"passed","Sat Aug 16 01:48:25 UTC 2025","Sat Aug 16 01:49:35 UTC 2025","70806","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Admin to Manager","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Admin role.
Verify that:
    - Admin can demote Admin to Manager.
"
"passed","Sat Aug 16 02:35:04 UTC 2025","Sat Aug 16 02:36:08 UTC 2025","64377","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Invite registered user without organization to organization with default project via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project with 'default' option.
-Signup second user.
Verify that:
    - User can invite to organization another user that is registered but doesn't have organization.
    - Newly invited user is member of the default project.
"
"passed","Sat Aug 16 01:58:11 UTC 2025","Sat Aug 16 01:58:53 UTC 2025","41889","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin removes Writer from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add second user to project with Writer role via CLI.
Verify that:
    - Admin can remove Writer from project via CLI.
"
"passed","Sat Aug 16 02:50:12 UTC 2025","Sat Aug 16 02:50:40 UTC 2025","28888","CLI Tests","CLI Secrets","TestCLISecrets","","","Admin remove secret via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Create first secret via CLI.
-Create second secret via CLI.
Verify that:
    - User can remove second secret via CLI.
"
"passed","Sat Aug 16 02:14:53 UTC 2025","Sat Aug 16 02:15:22 UTC 2025","29370","CLI Tests","CLI Storage","TestCLIStorage","","","Admin upload bin file via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
Verify that:
    - User can upload bin file via CLI.
"
"passed","Sat Aug 16 02:13:56 UTC 2025","Sat Aug 16 02:14:12 UTC 2025","15803","CLI Tests","CLI Storage","TestCLIStorage","","","Admin upload file without project created via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
Verify that:
    - User cannot upload file if there is no project created yet via CLI.
"
"passed","Sat Aug 16 02:29:47 UTC 2025","Sat Aug 16 02:31:04 UTC 2025","76521","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Set default organization credits via UI","
-Login with valid credentials.
-Create new organization via API.
Verify that:
    User can set default organization credits.
"
"passed","Sat Aug 16 01:35:26 UTC 2025","Sat Aug 16 01:36:48 UTC 2025","82856","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change Manager role to User","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
Verify that:
    - Admin can change user role from Manager to User
    - User after changing role from Manager to User:
        - Cannot access organization Settings
        - Cannot access organization Billing
"
"passed","Sat Aug 16 02:10:25 UTC 2025","Sat Aug 16 02:11:16 UTC 2025","51107","UI Tests","UI Files","TestUIFiles","","","User delete File","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Upload txt file.
Verify that:
    - User can delete a file with Delete button from File action bar.
"
"passed","Sat Aug 16 01:39:48 UTC 2025","Sat Aug 16 01:40:58 UTC 2025","70275","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Writer to Admin","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Writer role.
Verify that:
    - Admin can promote Writer to Admin
"
"passed","Sat Aug 16 02:40:49 UTC 2025","Sat Aug 16 02:41:25 UTC 2025","35637","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","Switch between projects via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create first project via CLI.
-Create second project via CLI.
Verify that:
    - User can switch between projects via CLI.
"
"passed","Sat Aug 16 02:37:29 UTC 2025","Sat Aug 16 02:38:58 UTC 2025","89423","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Invite user with organization to organization via UI","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Pass onboarding for second user and create organization via UI.
Verify that:
    - User can invite to organization another user that already has organization.'
"
"passed","Sat Aug 16 02:46:07 UTC 2025","Sat Aug 16 02:47:06 UTC 2025","58565","UI Tests","UI Organization Roles Access","TestUIOrganizationRolesAccess","","","Verify invited Manager can access organization billing","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
Verify that Manager:
    - Can access organization Billing.
"
"passed","Sat Aug 16 02:35:40 UTC 2025","Sat Aug 16 02:36:50 UTC 2025","69774","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can modify files","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
Verify that:
    - Manager has access to modify Files
"
"passed","Sat Aug 16 02:45:54 UTC 2025","Sat Aug 16 02:46:21 UTC 2025","26652","UI Tests","UI Secrets","TestUISecrets","","","Create First Secret without project via UI","
-Login with valid credentials.
-Create new organization via API.
Verify that:
    - User cannot create first Secret if no project created yet
"
"passed","Sat Aug 16 01:32:41 UTC 2025","Sat Aug 16 01:34:10 UTC 2025","88987","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change User role to Manager","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with User role via API.
Verify that:
    - Admin can change user role from User to Manager
    - User after changing role from User to Manager:
        - Can access organization Settings
        - Can access organization Billing
"
"passed","Sat Aug 16 01:54:38 UTC 2025","Sat Aug 16 01:56:18 UTC 2025","100806","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can promote Reader to Manager","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Manager can promote Reader to Manager
"
"passed","Sat Aug 16 02:33:21 UTC 2025","Sat Aug 16 02:34:19 UTC 2025","57873","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Reader cannot modify files","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
Verify that:
    - Reader doesn't have access to modify Files
"
"passed","Sat Aug 16 02:27:32 UTC 2025","Sat Aug 16 02:28:35 UTC 2025","63647","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager cannot remove himself from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
Verify that:
    - Manager cannot remove himself from project
"
"passed","Sat Aug 16 02:26:00 UTC 2025","Sat Aug 16 02:26:29 UTC 2025","28852","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User verifies admin get-org-users output via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
-Invite second user to organization via CLI.
-Run 'apolo admin get-org-users' command via CLI.
Verify that:
    - Organization members are listed with valid data in command output.
"
"passed","Sat Aug 16 02:13:12 UTC 2025","Sat Aug 16 02:14:34 UTC 2025","81958","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove another Admin from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Admin role.
Verify that:
    - Admin can remove another Admin from project
"
"passed","Sat Aug 16 02:37:10 UTC 2025","Sat Aug 16 02:38:42 UTC 2025","91747","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Manager cannot remove Admin from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with Admin role via API.
Verify that:
    - Manager cannot remove another Admin from organization.
"
"passed","Sat Aug 16 01:50:35 UTC 2025","Sat Aug 16 01:51:19 UTC 2025","43644","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Writer to Admin in project via CLI",""
"passed","Sat Aug 16 02:47:40 UTC 2025","Sat Aug 16 02:48:31 UTC 2025","51266","UI Tests","UI Secrets","TestUISecrets","","","Create Second Secret via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create Secret.
Verify that:
    - User can create second Secret.
"
"passed","Sat Aug 16 02:51:06 UTC 2025","Sat Aug 16 02:51:26 UTC 2025","20382","CLI Tests","CLI Login","TestCLILogin","","","User with organization logs in with auth token via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create organization via API.
Verify that:
    - User can login with Bearer auth token via CLI.
    - Login output in CLI valid organization and no project info.
"
"passed","Sat Aug 16 01:57:47 UTC 2025","Sat Aug 16 01:59:05 UTC 2025","77785","UI Tests","UI Files","TestUIFiles","","","Verify Writer can create new folder","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Writer role.
Verify that:
    - Writer can create new folder
"
"passed","Sat Aug 16 01:38:34 UTC 2025","Sat Aug 16 01:39:08 UTC 2025","33415","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Manager to Reader in project via CLI",""
"passed","Sat Aug 16 02:08:03 UTC 2025","Sat Aug 16 02:08:35 UTC 2025","32453","UI Tests","UI Files","TestUIFiles","","","User download bin file","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Upload bin file.
Verify that:
    - user can download bin file via UI.
    - downloaded bin file md5 hash matches expected file.
"
"passed","Sat Aug 16 02:51:37 UTC 2025","Sat Aug 16 02:52:24 UTC 2025","46701","CLI Tests","CLI Login","TestCLILogin","","","User with organization and project logs in with auth token via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create organization via API.
-Create project via API.
Verify that:
    - User can login with Bearer auth token via CLI.
    - Login output in CLI contain valid organization and project.
"
"passed","Sat Aug 16 02:46:21 UTC 2025","Sat Aug 16 02:47:24 UTC 2025","62636","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Create second project via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
Verify that:
    User can create second project in organization.
"
"passed","Sat Aug 16 02:16:37 UTC 2025","Sat Aug 16 02:16:57 UTC 2025","20443","CLI Tests","CLI Storage","TestCLIStorage","","","Admin rename text file via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Upload text file via CLI.
Verify that:
    - User can rename txt file via CLI.
"
"passed","Sat Aug 16 02:06:07 UTC 2025","Sat Aug 16 02:07:02 UTC 2025","54533","UI Tests","UI Files","TestUIFiles","","","User upload txt file","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
Verify that:
    - User can upload txt file via UI.
"
"passed","Sat Aug 16 02:21:13 UTC 2025","Sat Aug 16 02:22:00 UTC 2025","46940","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User verifies config show output via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
-Run 'apolo config show' command via CLI.
Verify that:
    - 'apolo config show' command output is valid.
"
"passed","Sat Aug 16 01:59:12 UTC 2025","Sat Aug 16 02:00:22 UTC 2025","69366","UI Tests","UI Files","TestUIFiles","","","Verify Manager can create new folder","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
Verify that:
    - Manager can create new folder
"
"passed","Sat Aug 16 02:49:04 UTC 2025","Sat Aug 16 02:50:13 UTC 2025","69105","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Invite member of organization to project via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization.
Verify that:
    User can invite member of organization to project.
"
"passed","Sat Aug 16 01:59:43 UTC 2025","Sat Aug 16 02:00:20 UTC 2025","37503","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin removes Admin from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add second user to project with Admin role via CLI.
Verify that:
    - Admin can remove another Admin from project via CLI.
"
"passed","Sat Aug 16 01:44:05 UTC 2025","Sat Aug 16 01:45:39 UTC 2025","94572","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager can change User role to Manager","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with User role via API.
Verify that:
    - Manager can change user role from User to Manager
    - User after changing role from User to Manager:
        - Can access organization Settings
        - Can access organization Billing
"
"passed","Sat Aug 16 02:43:27 UTC 2025","Sat Aug 16 02:43:43 UTC 2025","15769","CLI Tests","CLI Disks","TestCLIDisks","","","Admin create disk with no project created via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
Verify that:
    - User cannot create disk via CLI if there is no project created yet.
"
"passed","Sat Aug 16 02:40:21 UTC 2025","Sat Aug 16 02:40:49 UTC 2025","27578","UI Tests","UI Disks","TestUIDisks","","","Create First Disk via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
Verify that:
    - User can create first Disk after project created
"
"passed","Sat Aug 16 02:35:16 UTC 2025","Sat Aug 16 02:36:52 UTC 2025","96000","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Manager can remove another Manager from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with Manager role via API.
Verify that:
    - Manager can remove another Manager from organization.
"
"passed","Sat Aug 16 02:18:18 UTC 2025","Sat Aug 16 02:20:20 UTC 2025","122661","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager can remove Reader from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Manager can remove Reader from project
"
"passed","Sat Aug 16 02:39:46 UTC 2025","Sat Aug 16 02:40:14 UTC 2025","28019","UI Tests","UI Disks","TestUIDisks","","","Create First Disk without project via UI","
-Login with valid credentials.
-Create new organization via API.
Verify that:
    - User cannot create first Disk if no project created yet.
"
"failed","Sat Aug 16 02:20:51 UTC 2025","Sat Aug 16 02:21:51 UTC 2025","60311","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Manager removes Manager from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with Manager role via CLI.
-Add third user to organization with Manager role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager can remove Manager from organization via CLI.
"
"passed","Sat Aug 16 01:47:31 UTC 2025","Sat Aug 16 01:48:27 UTC 2025","55735","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Reader to Admin in project via CLI",""
"passed","Sat Aug 16 02:16:47 UTC 2025","Sat Aug 16 02:17:15 UTC 2025","27637","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Admin removes himself from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with Admin role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Admin cannot remove himself from organization via CLI.
"
"passed","Sat Aug 16 02:26:43 UTC 2025","Sat Aug 16 02:27:34 UTC 2025","51155","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","Set default user credits via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
-Set default user credits via CLI.
-Invite second user to organization via CLI.
-Second user login with Bearer auth token via CLI.
-Run 'apolo config show' command via CLI.
Verify that:
    - Valid user credits amount is displayed in command output.
"
"passed","Sat Aug 16 02:52:36 UTC 2025","Sat Aug 16 02:53:36 UTC 2025","59192","E2E Tests","Apolo CLI Hello World Job Verification","TestHelloWorldJob","","","Run Hello World Job and Validate UI and CLI Results","
-Login with valid credentials.
-Create new organization via UI during onboarding.
-Create new project via CLI.
-Run Hello World Job via CLI.
Verify that:
    - Job executed successfully in CLI.
    - Job is displayed in successful jobs via UI.
"
"passed","Sat Aug 16 02:29:08 UTC 2025","Sat Aug 16 02:29:59 UTC 2025","50947","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Admin can remove another Admin from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that:
    - Admin can remove another Admin from organization.
"
"passed","Sat Aug 16 01:36:35 UTC 2025","Sat Aug 16 01:38:10 UTC 2025","94412","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Writer to Reader","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Writer role.
Verify that:
    - Admin can demote Writer to Reader
"
"passed","Sat Aug 16 02:48:47 UTC 2025","Sat Aug 16 02:49:08 UTC 2025","21123","CLI Tests","CLI Secrets","TestCLISecrets","","","Admin create secret with no project created via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
Verify that:
    - User cannot create secret if there is no project created via CLI.
"
"passed","Sat Aug 16 02:15:36 UTC 2025","Sat Aug 16 02:16:05 UTC 2025","28863","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Admin removes Manager from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with Manager role via CLI.
Verify that:
    - Admin can remove Manager from organization via CLI.
"
"passed","Sat Aug 16 02:04:25 UTC 2025","Sat Aug 16 02:05:15 UTC 2025","49882","UI Tests","UI Files","TestUIFiles","","","User delete Folder","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new folder.
Verify that:
    - User can delete a folder with Delete button from File action bar.
"
"passed","Sat Aug 16 01:43:01 UTC 2025","Sat Aug 16 01:44:06 UTC 2025","65044","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Manager to Writer","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
Verify that:
    - Admin can demote Manager to Writer
"
"passed","Sat Aug 16 01:36:30 UTC 2025","Sat Aug 16 01:37:34 UTC 2025","64867","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Writer to Manager in project via CLI",""
"passed","Sat Aug 16 02:23:00 UTC 2025","Sat Aug 16 02:24:51 UTC 2025","111133","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager can remove another Manager from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Manager role.
Verify that:
    - Manager can remove another Manager from project
"
"passed","Sat Aug 16 01:54:32 UTC 2025","Sat Aug 16 01:56:03 UTC 2025","90463","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager cannot change Admin role to Manager","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with Admin role via API.
Verify that:
    - Manager cannot change user role from Admin to Manager
"
"passed","Sat Aug 16 02:28:24 UTC 2025","Sat Aug 16 02:28:51 UTC 2025","26898","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Create Second Organization via UI","
-Login with valid credentials.
-Create new organization via API.
Verify that:
    User can create second organization.
"
"passed","Sat Aug 16 01:34:18 UTC 2025","Sat Aug 16 01:35:18 UTC 2025","60205","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change User role to Admin","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with User role via API.
Verify that:
    - Admin can change user role from User to Admin
    - User after changing role from User to Admin:
        - Can access organization Settings
        - Can access organization Billing
"
"passed","Sat Aug 16 01:45:56 UTC 2025","Sat Aug 16 01:47:22 UTC 2025","86819","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Reader to Manager in project via CLI",""
"passed","Sat Aug 16 02:08:23 UTC 2025","Sat Aug 16 02:10:24 UTC 2025","121928","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager cannot demote Admin","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Admin role.
Verify that:
    - Manager cannot demote Admin to Manager
"
"passed","Sat Aug 16 02:53:52 UTC 2025","Sat Aug 16 02:55:11 UTC 2025","78950","UI Tests","UI Credits Purchase","TestUICreditsPurchase","","","Verify Admin can purchase organization credits with custom amount","
-Login with valid credentials.
-Create new organization via API.
Verify that:
    - Admin can purchase credits by input custom amount.
"
"passed","Sat Aug 16 02:47:56 UTC 2025","Sat Aug 16 02:48:39 UTC 2025","42880","UI Tests","UI Organization Roles Access","TestUIOrganizationRolesAccess","","","Verify invited Admin can access organization billing","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that Admin:
    - Can access organization Billing.
"
"passed","Sat Aug 16 02:42:58 UTC 2025","Sat Aug 16 02:43:25 UTC 2025","26758","UI Tests","UI Disks","TestUIDisks","","","Open Disk info view by click on disk button","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new Disk.
Verify that:
    - After click on disk button Disk info view appears
"
"passed","Sat Aug 16 02:17:03 UTC 2025","Sat Aug 16 02:17:29 UTC 2025","26202","CLI Tests","CLI Storage","TestCLIStorage","","","Admin remove text file via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Upload text file via CLI.
Verify that:
    - User can remove txt file via CLI.
"
"passed","Sat Aug 16 02:12:20 UTC 2025","Sat Aug 16 02:13:07 UTC 2025","47181","CLI Tests","CLI Storage","TestCLIStorage","","","Admin rename folder via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Create new folder via CLI.
Verify that:
    - User can rename folder via CLI.
"
"passed","Sat Aug 16 01:56:20 UTC 2025","Sat Aug 16 01:57:29 UTC 2025","69618","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Reader change member role from Reader to Writer in project via CLI",""
"passed","Sat Aug 16 01:37:42 UTC 2025","Sat Aug 16 01:38:28 UTC 2025","45397","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Writer to Admin in project via CLI",""
"passed","Sat Aug 16 02:14:19 UTC 2025","Sat Aug 16 02:14:45 UTC 2025","25647","CLI Tests","CLI Storage","TestCLIStorage","","","Admin upload text file via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
Verify that:
    - User can upload txt file via CLI.
"
"passed","Sat Aug 16 02:45:31 UTC 2025","Sat Aug 16 02:46:01 UTC 2025","30470","UI Tests","UI Organization Roles Access","TestUIOrganizationRolesAccess","","","Verify invited Manager can access organization settings","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
Verify that Manager:
    - Can access organization Settings.
"
"passed","Sat Aug 16 02:34:00 UTC 2025","Sat Aug 16 02:34:58 UTC 2025","58203","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Invite registered user without organization to organization via UI","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
Verify that:
    User can invite to organization another user that is registered but doesn't have an organization.
"
"passed","Sat Aug 16 01:52:47 UTC 2025","Sat Aug 16 01:53:28 UTC 2025","41305","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Manager to Writer in project via CLI",""
"passed","Sat Aug 16 02:49:16 UTC 2025","Sat Aug 16 02:49:35 UTC 2025","19218","CLI Tests","CLI Secrets","TestCLISecrets","","","Admin create first secret via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
Verify that:
    - User can create first secret via CLI.
"
"passed","Sat Aug 16 02:11:45 UTC 2025","Sat Aug 16 02:12:06 UTC 2025","21088","CLI Tests","CLI Storage","TestCLIStorage","","","Admin create folder via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
Verify that:
    - User can create folder via CLI.
"
"passed","Sat Aug 16 02:02:40 UTC 2025","Sat Aug 16 02:03:23 UTC 2025","43210","UI Tests","UI Files","TestUIFiles","","","User make double click on Folder","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new folder.
Verify that:
    - User opens a folder with a double click on it.
"
"passed","Sat Aug 16 02:39:42 UTC 2025","Sat Aug 16 02:40:05 UTC 2025","22937","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","User verifies admin get-projects command output via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Run 'apolo admin get-projects' command via CLI.
Verify that:
    - Valid project info is displayed in command output.
"
"passed","Sat Aug 16 02:14:41 UTC 2025","Sat Aug 16 02:15:28 UTC 2025","46394","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin cannot remove himself from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
Verify that:
    - Admin cannot remove himself from project
"
"passed","Sat Aug 16 01:39:57 UTC 2025","Sat Aug 16 01:40:32 UTC 2025","35837","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Manager to Admin in project via CLI",""
"passed","Sat Aug 16 02:44:47 UTC 2025","Sat Aug 16 02:45:11 UTC 2025","23963","CLI Tests","CLI Disks","TestCLIDisks","","","Admin get disk by ID via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Create new project via API.
-Login with Bearer auth token via CLI.
-Create first disk via CLI.
Verify that:
    - User can get disk info by disk ID via CLI.
"
"passed","Sat Aug 16 02:10:32 UTC 2025","Sat Aug 16 02:12:34 UTC 2025","122003","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Writer cannot change member roles","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Writer role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Writer cannot change member roles
"
"passed","Sat Aug 16 01:44:51 UTC 2025","Sat Aug 16 01:45:47 UTC 2025","56003","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Reader to Writer in project via CLI",""
"passed","Sat Aug 16 02:11:23 UTC 2025","Sat Aug 16 02:11:39 UTC 2025","15330","CLI Tests","CLI Storage","TestCLIStorage","","","Admin create folder without project created via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
Verify that:
    - User cannot create folder if there is no project created yet via CLI.
"
"passed","Sat Aug 16 02:34:27 UTC 2025","Sat Aug 16 02:35:30 UTC 2025","62870","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Writer can modify files","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Writer role.
Verify that:
    - Writer has access to modify Files
"
"passed","Sat Aug 16 02:02:27 UTC 2025","Sat Aug 16 02:03:15 UTC 2025","48739","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager removes Writer from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add third user to organization via CLI.
-Add second user to project with Manager role via CLI.
-Add third user to project with Writer role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager can remove Writer from project via CLI.
"
"passed","Sat Aug 16 01:41:05 UTC 2025","Sat Aug 16 01:42:53 UTC 2025","107704","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Manager to Reader","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
Verify that:
    - Admin can demote Manager to Reader
"
"passed","Sat Aug 16 02:41:35 UTC 2025","Sat Aug 16 02:42:50 UTC 2025","74644","UI Tests","UI Disks","TestUIDisks","","","Search Disk via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new Disk.
-Create second Disk.
Verify that:
    - User can search for Disk via Ui with the Search field.
"
"passed","Sat Aug 16 02:05:20 UTC 2025","Sat Aug 16 02:06:00 UTC 2025","39848","UI Tests","UI Files","TestUIFiles","","","User upload bin file","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
Verify that:
    User can upload bin file via UI.
"
"passed","Sat Aug 16 02:48:39 UTC 2025","Sat Aug 16 02:49:48 UTC 2025","69239","UI Tests","UI Secrets","TestUISecrets","","","Search Secret via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create Secret.
Verify that:
    - User can Search for secret via UI.
"
"passed","Sat Aug 16 02:12:52 UTC 2025","Sat Aug 16 02:14:46 UTC 2025","113888","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Reader cannot change member roles","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Reader cannot change member roles
"
"passed","Sat Aug 16 01:42:31 UTC 2025","Sat Aug 16 01:43:08 UTC 2025","37539","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Admin to Writer in project via CLI",""
"passed","Sat Aug 16 01:40:01 UTC 2025","Sat Aug 16 01:40:57 UTC 2025","56251","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change Admin role to Manager","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that:
    - Admin can change user role from Admin to Manager
    - User after changing role from Admin to Manager:
        - Can access organization Settings
        - Can access organization Billing
"
"passed","Sat Aug 16 02:09:30 UTC 2025","Sat Aug 16 02:10:19 UTC 2025","49014","UI Tests","UI Files","TestUIFiles","","","User rename File","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Upload txt file.
Verify that:
    - User can rename a file with Rename button from File action bar.
"
"passed","Sat Aug 16 02:43:51 UTC 2025","Sat Aug 16 02:44:10 UTC 2025","19201","CLI Tests","CLI Disks","TestCLIDisks","","","Admin create first disk via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Create new project via API.
-Login with Bearer auth token via CLI.
Verify that:
    - User can create disk via CLI.
"
"passed","Sat Aug 16 01:32:31 UTC 2025","Sat Aug 16 01:34:08 UTC 2025","97382","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Reader to Writer","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
Verify that:
    - Admin can promote Reader to Writer
"
"passed","Sat Aug 16 02:39:04 UTC 2025","Sat Aug 16 02:40:31 UTC 2025","87016","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can invite Writer to a project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
Verify that:
    - Manager can invite third user as Writer to a project
"
"passed","Sat Aug 16 01:46:52 UTC 2025","Sat Aug 16 01:48:18 UTC 2025","86077","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Admin to Writer","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Admin role.
Verify that:
    - Admin can demote Admin to Writer
"
"passed","Sat Aug 16 02:31:15 UTC 2025","Sat Aug 16 02:33:17 UTC 2025","121923","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Manager can remove User from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with User role via API.
Verify that:
    - Manager can remove User from organization.
"
"passed","Sat Aug 16 01:34:14 UTC 2025","Sat Aug 16 01:35:26 UTC 2025","71739","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Reader to Manager","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
Verify that:
    - Admin can promote Reader to Manager
"
"passed","Sat Aug 16 01:48:35 UTC 2025","Sat Aug 16 01:49:22 UTC 2025","47100","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Writer to Reader in project via CLI",""
"passed","Sat Aug 16 01:52:36 UTC 2025","Sat Aug 16 01:54:32 UTC 2025","115315","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can promote Reader to Writer","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Manager can promote Reader to Writer
"
"passed","Sat Aug 16 02:49:56 UTC 2025","Sat Aug 16 02:50:48 UTC 2025","51862","UI Tests","UI Secrets","TestUISecrets","","","Delete Secret via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create Secret.
Verify that:
    - User can delete Secret.
"
"passed","Sat Aug 16 02:11:06 UTC 2025","Sat Aug 16 02:12:20 UTC 2025","73600","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove Manager from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
Verify that:
    - Admin can remove Manager from project
"
"passed","Sat Aug 16 01:43:16 UTC 2025","Sat Aug 16 01:44:06 UTC 2025","49657","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Admin to Manager in project via CLI",""
"passed","Sat Aug 16 02:28:58 UTC 2025","Sat Aug 16 02:29:40 UTC 2025","42148","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Switch between organization via UI","
-Login with valid credentials.
-Create new organization via API.
-Create second organization via UI.
Verify that:
    User can switch between organizations.
"
"passed","Sat Aug 16 01:34:59 UTC 2025","Sat Aug 16 01:35:37 UTC 2025","38120","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Reader to Admin in project via CLI",""
"passed","Sat Aug 16 02:09:50 UTC 2025","Sat Aug 16 02:10:58 UTC 2025","68745","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove Writer from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Writer role.
Verify that:
    - Admin can remove Writer from project
"
"passed","Sat Aug 16 02:37:05 UTC 2025","Sat Aug 16 02:38:57 UTC 2025","112251","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can invite Reader to a project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
Verify that:
    - Manager can invite third user as Reader to a project
"
"passed","Sat Aug 16 02:41:36 UTC 2025","Sat Aug 16 02:42:37 UTC 2025","61597","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","Add organization member to project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization via CLI.
-Create new project via CLI.
Verify that:
    - User can add organization member to project via CLI.
"
"passed","Sat Aug 16 02:08:25 UTC 2025","Sat Aug 16 02:09:43 UTC 2025","78025","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove Reader from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
Verify that:
    - Admin can remove Reader from project
"
"passed","Sat Aug 16 02:04:12 UTC 2025","Sat Aug 16 02:05:00 UTC 2025","48133","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager removes Admin from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add third user to organization via CLI.
-Add second user to project with Manager role via CLI.
-Add third user to project with Admin role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager cannot remove Admin from project via CLI.
"
