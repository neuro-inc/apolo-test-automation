"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Tue Sep 23 02:56:30 UTC 2025","Tue Sep 23 02:58:24 UTC 2025","113867","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can invite Manager to a project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.

### Verify that:

- Manager can invite `third user` as `Manager` to a project.
"
"passed","Tue Sep 23 02:54:23 UTC 2025","Tue Sep 23 02:55:27 UTC 2025","64083","UI Tests","UI Disks","TestUIDisks","","","Search Disk via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Create new Disk.
- Create second Disk.

### Verify that:

- User can search for Disk via UI with the `Search` field.
"
"passed","Tue Sep 23 02:42:43 UTC 2025","Tue Sep 23 02:43:57 UTC 2025","73845","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Admin cannot remove himself from organization","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Admin` role via **API**.

### Verify that:

- `Admin` **cannot** remove himself from organization.
"
"passed","Tue Sep 23 02:08:37 UTC 2025","Tue Sep 23 02:09:28 UTC 2025","50556","UI Tests","UI Files","TestUIFiles","","","User download bin file","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Upload `bin` file.

### Verify that:

- User can download `bin` file via UI.
- Downloaded `bin` file md5 hash matches expected file.
"
"passed","Tue Sep 23 02:19:27 UTC 2025","Tue Sep 23 02:19:59 UTC 2025","32502","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin cannot remove himself from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.

### Verify that:

- `Admin` **cannot** remove himself from project.
"
"passed","Tue Sep 23 01:44:48 UTC 2025","Tue Sep 23 01:45:56 UTC 2025","68559","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Reader to Writer in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.
- Add `third user` to project with `Reader` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` can change project role from `Reader` to `Writer` via **CLI**.
"
"passed","Tue Sep 23 03:01:46 UTC 2025","Tue Sep 23 03:02:37 UTC 2025","50964","UI Tests","UI Secrets","TestUISecrets","","","Create First Secret via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.

### Verify that:

- User can create first Secret after project created.
"
"passed","Tue Sep 23 02:12:41 UTC 2025","Tue Sep 23 02:14:22 UTC 2025","100792","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove Reader from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.

### Verify that:

- `Admin` can remove `Reader` from `project`.
"
"passed","Tue Sep 23 01:54:55 UTC 2025","Tue Sep 23 01:57:40 UTC 2025","165673","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can promote Reader to Writer","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Manager` can promote `Reader` to `Writer`.
"
"passed","Tue Sep 23 02:36:15 UTC 2025","Tue Sep 23 02:37:13 UTC 2025","58382","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Manager removes himself from org via **CLI**","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Add `second user` to organization with `Manager` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` **cannot** remove `himself` from organization via **CLI**.
"
"passed","Tue Sep 23 01:40:16 UTC 2025","Tue Sep 23 01:41:57 UTC 2025","100402","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Writer to Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Writer` role.

### Verify that:

- `Admin` can promote `Writer` to `Admin`.
"
"passed","Tue Sep 23 01:38:30 UTC 2025","Tue Sep 23 01:39:21 UTC 2025","50395","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Manager to Reader in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.

### Verify that:

- `Admin` can change project role from `Manager` to `Reader` via **CLI**.
"
"passed","Tue Sep 23 02:38:51 UTC 2025","Tue Sep 23 02:39:31 UTC 2025","40044","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User verifies admin get-org-users output via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create first organization via **CLI**.
- Invite `second user` to organization via **CLI**.
- Run `apolo admin get-org-users` command via **CLI**.

### Verify that:

- Organization members are listed with valid data in command output.
"
"passed","Tue Sep 23 02:44:50 UTC 2025","Tue Sep 23 02:47:18 UTC 2025","148039","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Search Member of organization via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Signup `third user`.
- Invite `third user` to organization via **API**.

### Verify that:

- User can search organization members using `Search` field.
"
"passed","Tue Sep 23 02:00:08 UTC 2025","Tue Sep 23 02:02:37 UTC 2025","148968","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager cannot promote Reader to Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Manager` **cannot** promote `Reader` to `Admins`.
"
"passed","Tue Sep 23 01:34:36 UTC 2025","Tue Sep 23 01:35:21 UTC 2025","45200","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Reader to Admin in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Reader` role via **CLI**.

### Verify that:

- `Admin` can change project role from `Reader` to `Admin` via **CLI**.
"
"passed","Tue Sep 23 02:27:44 UTC 2025","Tue Sep 23 02:30:05 UTC 2025","140662","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager cannot remove Admin from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Admin` role.

### Verify that:

- `Manager` **cannot** remove `Admin` from project.
"
"passed","Tue Sep 23 02:39:38 UTC 2025","Tue Sep 23 02:40:20 UTC 2025","41703","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","Set default user credits via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create first organization via **CLI**.
- Set default user credits via **CLI**.
- Invite `second user` to organization via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.
- Run `apolo config show` command via **CLI**.

### Verify that:

- Valid user credits amount is displayed in command output.
"
"passed","Tue Sep 23 03:04:52 UTC 2025","Tue Sep 23 03:05:39 UTC 2025","47130","UI Tests","UI Organization Roles Access","TestUIOrganizationRolesAccess","","","Verify invited Admin can access organization settings","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Admin` role via **API**.

### Verify that `Admin`:

- Can access organization Settings.
"
"skipped","Tue Sep 23 01:44:39 UTC 2025","Tue Sep 23 01:44:39 UTC 2025","0","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verfiy POST external Chat API /v1/chat/completions returns valid data","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- POST `external` OpenAI Compatible Chat API `{hostname}/v1/chat/completions`.

### Verify that:

- API response matching expected json schema.
"
"passed","Tue Sep 23 02:43:10 UTC 2025","Tue Sep 23 02:44:43 UTC 2025","93558","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Set default organization credits via UI","
- Login with valid credentials.
- Create new organization via **API**.

### Verify that:

- User can set default organization credits.
"
"passed","Tue Sep 23 02:53:39 UTC 2025","Tue Sep 23 02:54:22 UTC 2025","42381","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","Switch between projects via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create first project via **CLI**.
- Create second project via **CLI**.

### Verify that:

- User can switch between projects via **CLI**.
"
"passed","Tue Sep 23 02:49:04 UTC 2025","Tue Sep 23 02:50:32 UTC 2025","87783","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Writer can modify files","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Writer` role.

### Verify that:

- `Writer` has access to modify Files.
"
"passed","Tue Sep 23 02:15:07 UTC 2025","Tue Sep 23 02:16:09 UTC 2025","62398","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin removes Writer from project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Writer` role via **CLI**.

### Verify that:

- `Admin` can remove `Writer` from project via **CLI**.
"
"passed","Tue Sep 23 02:03:25 UTC 2025","Tue Sep 23 02:04:03 UTC 2025","38706","UI Tests","UI Files","TestUIFiles","","","User make double click on Folder","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Create new folder.

### Verify that:

- User opens a folder with a double click on it.
"
"passed","Tue Sep 23 02:27:50 UTC 2025","Tue Sep 23 02:28:33 UTC 2025","42448","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Admin removes User from org via **CLI**","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Add `second user` to organization with `User` role via **CLI**.

### Verify that:

- `Admin` can remove `User` from organization via **CLI**.
"
"passed","Tue Sep 23 01:45:32 UTC 2025","Tue Sep 23 01:46:54 UTC 2025","82076","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Manager to Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.

### Verify that:

- `Admin` can promote `Manager` to `Admin`.
"
"passed","Tue Sep 23 02:06:00 UTC 2025","Tue Sep 23 02:06:50 UTC 2025","50236","UI Tests","UI Files","TestUIFiles","","","User upload bin file","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.

### Verify that:

- User can upload `bin` file via UI.
"
"passed","Tue Sep 23 02:28:40 UTC 2025","Tue Sep 23 02:29:17 UTC 2025","37596","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Admin removes Manager from org via **CLI**","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Add `second user` to organization with `Manager` role via **CLI**.

### Verify that:

- `Admin` can remove `Manager` from organization via **CLI**.
"
"passed","Tue Sep 23 02:08:01 UTC 2025","Tue Sep 23 02:10:21 UTC 2025","140255","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager cannot promote Writer to Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Writer` role.

### Verify that:

- `Manager` **cannot** promote `Writer` to `Admin`.
"
"passed","Tue Sep 23 02:49:58 UTC 2025","Tue Sep 23 02:51:59 UTC 2025","121033","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Invite user with organization to organization via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Signup second user.
- Pass onboarding for second user and create organization via UI.

### Verify that:

- User can invite to organization another user that already has organization.'
"
"passed","Tue Sep 23 01:33:39 UTC 2025","Tue Sep 23 01:34:29 UTC 2025","50097","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Reader to Manager in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Reader` role via **CLI**.

### Verify that:

- `Admin` can change project role from `Reader` to `Manager` via **CLI**.
"
"passed","Tue Sep 23 02:54:12 UTC 2025","Tue Sep 23 02:56:22 UTC 2025","130744","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can invite Writer to a project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.

### Verify that:

- `Manager` can invite `third user` as `Writer` to a project.
"
"passed","Tue Sep 23 02:32:08 UTC 2025","Tue Sep 23 02:33:04 UTC 2025","56262","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Manager removes Manager from org via **CLI**","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Add `second user` to organization with `Manager` role via **CLI**.
- Add `third user` to organization with `Manager` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` can remove `Manager` from organization via **CLI**.
"
"passed","Tue Sep 23 02:23:55 UTC 2025","Tue Sep 23 02:24:26 UTC 2025","31509","CLI Tests","CLI Storage","TestCLIStorage","","","Admin download bin file via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Upload `bin` file via **CLI**.

### Verify that:

- User can download `bin` file via **CLI**.
- downloaded `bin` file md5 hash matches expected file.
"
"passed","Tue Sep 23 02:02:32 UTC 2025","Tue Sep 23 02:03:18 UTC 2025","45676","UI Tests","UI Files","TestUIFiles","","","User make single click on Folder","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Create new folder.
- Single click on folder.

### Verify that:

- Folder info section appears.
- Folder action bar appears.
"
"passed","Tue Sep 23 02:16:15 UTC 2025","Tue Sep 23 02:17:34 UTC 2025","78354","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove Manager from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.

### Verify that:

- `Admin` can remove `Manager` from project.
"
"failed","Tue Sep 23 03:11:16 UTC 2025","Tue Sep 23 03:12:10 UTC 2025","54221","UI Tests","UI Credits Purchase","TestUICreditsPurchase","","","Verify Admin can purchase organization credits with custom amount","
- Login with valid credentials.
- Create new organization via **API**.

### Verify that:

- Admin can purchase credits by input custom amount.
"
"passed","Tue Sep 23 01:52:00 UTC 2025","Tue Sep 23 01:52:57 UTC 2025","56509","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Manager to Reader in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.
- Add `third user` to project with `Manager` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` can change project role from `Manager` to `Reader` via **CLI**.
"
"passed","Tue Sep 23 01:37:33 UTC 2025","Tue Sep 23 01:38:23 UTC 2025","50237","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Writer to Admin in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Writer` role via **CLI**.

### Verify that:

- `Admin` can change project role from `Writer` to `Admin` via **CLI**.
"
"passed","Tue Sep 23 02:21:41 UTC 2025","Tue Sep 23 02:22:17 UTC 2025","35925","CLI Tests","CLI Storage","TestCLIStorage","","","Admin upload text file via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.

### Verify that:

- User can upload `txt` file via **CLI**.
"
"skipped","Tue Sep 23 01:44:34 UTC 2025","Tue Sep 23 01:44:34 UTC 2025","0","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verfiy GET external Chat API /docs returns Swagger page","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- GET `external` OpenAI Compatible Chat API `{hostname}/docs link`.

### Verify that:

- Swagger page is returned.
"
"passed","Tue Sep 23 02:32:43 UTC 2025","Tue Sep 23 02:33:12 UTC 2025","28815","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User creates a first organization via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Login with Bearer auth token via **CLI**.

### Verify that:

- User can create first organization via **CLI**.
"
"passed","Tue Sep 23 03:12:23 UTC 2025","Tue Sep 23 03:13:30 UTC 2025","66656","E2E Tests","Apolo CLI Hello World Job Verification","TestHelloWorldJob","","","Run Hello World Job and Validate UI and CLI Results","
- Login with valid credentials.
- Create new organization via **UI** during onboarding.
- Create new project via **CLI**.
- Run `Hello World` Job via **CLI**.

Verify that:

- Job executed successfully in **CLI**.
- Job is displayed in successful jobs via **UI**.
"
"passed","Tue Sep 23 02:25:28 UTC 2025","Tue Sep 23 02:26:14 UTC 2025","46607","CLI Tests","CLI Storage","TestCLIStorage","","","Admin rename text file via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Upload `text` file via **CLI**.

### Verify that:

- User can rename `txt` file via **CLI**.
"
"passed","Tue Sep 23 01:55:18 UTC 2025","Tue Sep 23 01:56:13 UTC 2025","54641","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Admin to Reader in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.
- Add `third user` to project with `Admin` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` **cannot** change project role from `Admin` to `Reader` via **CLI**.
"
"passed","Tue Sep 23 01:46:27 UTC 2025","Tue Sep 23 01:47:49 UTC 2025","81808","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change User role to Manager","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `User` role via **API**.

### Verify that:

- `Admin` can change user role from `User` to `Manager`
- User after changing role from `User` to `Manager`:

- Can access organization `Settings`
- Can access organization `Billing`
"
"passed","Tue Sep 23 02:26:41 UTC 2025","Tue Sep 23 02:27:48 UTC 2025","67300","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager removes Admin from project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.
- Add `third user` to project with `Admin` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` cannot remove `Admin` from project via **CLI**.
"
"passed","Tue Sep 23 02:12:29 UTC 2025","Tue Sep 23 02:13:51 UTC 2025","81989","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager cannot demote himself to User","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.

### Verify that:

- `Manager` **cannot** demote himself to `User`.
"
"passed","Tue Sep 23 03:02:57 UTC 2025","Tue Sep 23 03:03:23 UTC 2025","26044","CLI Tests","CLI Secrets","TestCLISecrets","","","Admin create secret with no project created via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.

### Verify that:

- User **cannot** create secret if there is no project created via **CLI**.
"
"passed","Tue Sep 23 02:15:23 UTC 2025","Tue Sep 23 02:17:29 UTC 2025","126469","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Reader cannot change member roles","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Reader` **cannot** change member roles.
"
"passed","Tue Sep 23 02:54:29 UTC 2025","Tue Sep 23 02:55:16 UTC 2025","46572","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","Add organization member to project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Add `second user` to organization via **CLI**.
- Create new project via **CLI**.

### Verify that:

- User can add organization member to project via **CLI**.
"
"passed","Tue Sep 23 01:40:21 UTC 2025","Tue Sep 23 01:41:11 UTC 2025","50017","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Manager to Admin in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.

### Verify that:

- `Admin` can change project role from `Manager` to `Admin` via **CLI**.
"
"passed","Tue Sep 23 01:58:34 UTC 2025","Tue Sep 23 01:59:52 UTC 2025","77654","UI Tests","UI Files","TestUIFiles","","","Verify Writer can create new folder","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Writer` role.

### Verify that:

- `Writer` can create new folder.
"
"passed","Tue Sep 23 03:07:32 UTC 2025","Tue Sep 23 03:08:14 UTC 2025","41919","CLI Tests","CLI Login","TestCLILogin","","","User with organization and project logs in with auth token via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create organization via API.
- Create project via API.

### Verify that:

- User can login with Bearer auth token via CLI.
- Login output in CLI contain valid organization and project.
"
"passed","Tue Sep 23 02:00:00 UTC 2025","Tue Sep 23 02:01:12 UTC 2025","72309","UI Tests","UI Files","TestUIFiles","","","Verify Manager can create new folder","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.

### Verify that:

- `Manager` can create new folder.
"
"passed","Tue Sep 23 02:14:29 UTC 2025","Tue Sep 23 02:16:05 UTC 2025","95514","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove Writer from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Writer` role.

### Verify that:

- `Admin` can remove `Writer` from project.
"
"passed","Tue Sep 23 01:42:03 UTC 2025","Tue Sep 23 01:43:41 UTC 2025","98332","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Manager to Reader","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.

### Verify that:

- `Admin` can demote `Manager` to `Reader`.
"
"passed","Tue Sep 23 02:03:10 UTC 2025","Tue Sep 23 02:05:35 UTC 2025","144320","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager can change Manager role to User","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.
- Signup `third user`.
- Invite `third user` to organization with `Manager` role via **API**.

### Verify that:

- `Manager` can change user role from `Manager` to `User`.
- User after changing role from `Manager` to `User`:

- **Cannot** access organization `Settings`.
- **Cannot** access organization `Billing`.
"
"passed","Tue Sep 23 02:51:23 UTC 2025","Tue Sep 23 02:52:06 UTC 2025","43090","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","User creates a first project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.

### Verify that:

- User can create first project via **CLI**.
"
"passed","Tue Sep 23 02:31:35 UTC 2025","Tue Sep 23 02:33:42 UTC 2025","126952","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Writer cannot remove members from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Writer` **cannot** remove members from project.
"
"passed","Tue Sep 23 02:31:07 UTC 2025","Tue Sep 23 02:32:00 UTC 2025","53106","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Manager removes User from org via **CLI**","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Add `second user` to organization with `Manager` role via **CLI**.
- Add `third user` to organization with `User` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` can remove `User` from organization via **CLI**.
"
"skipped","Tue Sep 23 01:44:32 UTC 2025","Tue Sep 23 01:44:32 UTC 2025","0","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verfiy GET external Chat API returns 404","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- GET `external` OpenAI Compatible Chat API `hostname` link.

### Verify that:

- API response status is 404.
"
"passed","Tue Sep 23 02:48:41 UTC 2025","Tue Sep 23 02:49:51 UTC 2025","70302","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Invite registered user without organization to organization with default project via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project with `default` option.
- Signup `second user`.

### Verify that:

- User can invite to organization another user that is registered but **doesn't have organization**.
- Newly invited user is member of the `default` project.
"
"skipped","Tue Sep 23 02:27:56 UTC 2025","Tue Sep 23 02:28:52 UTC 2025","56119","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager removes himself from project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` **cannot** remove himself from project via **CLI**.
"
"passed","Tue Sep 23 02:25:18 UTC 2025","Tue Sep 23 02:27:37 UTC 2025","139831","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager can remove another Manager from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Manager` role.

### Verify that:

- `Manager` can remove another `Manager` from project.
"
"passed","Tue Sep 23 02:18:19 UTC 2025","Tue Sep 23 02:18:56 UTC 2025","37049","CLI Tests","CLI Storage","TestCLIStorage","","","Admin create folder via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.

### Verify that:

- User can create folder via **CLI**.
"
"passed","Tue Sep 23 02:05:31 UTC 2025","Tue Sep 23 02:07:54 UTC 2025","142679","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can promote Writer to Manager","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Writer` role.

### Verify that:

- `Manager` can promote `Writer` to `Manager`.
"
"passed","Tue Sep 23 01:49:47 UTC 2025","Tue Sep 23 01:50:54 UTC 2025","67247","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Writer to Manager in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.
- Add `third user` to project with `Writer` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` can change project role from `Writer` to `Manager` via **CLI**.
"
"passed","Tue Sep 23 02:04:10 UTC 2025","Tue Sep 23 02:05:02 UTC 2025","51440","UI Tests","UI Files","TestUIFiles","","","User rename Folder","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Create new folder.

### Verify that:

- User can rename a folder with `Rename` button from File action bar.
"
"passed","Tue Sep 23 01:46:05 UTC 2025","Tue Sep 23 01:47:10 UTC 2025","65225","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Reader to Manager in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.
- Add `third user` to project with `Reader` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` can change project role from `Reader` to `Manager` via **CLI**.
"
"passed","Tue Sep 23 01:56:20 UTC 2025","Tue Sep 23 01:57:20 UTC 2025","60148","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Writer change member role from Reader to Writer in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Writer` role via **CLI**.
- Add `third user` to project with `Reader` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Writer` **cannot** change member project roles via **CLI**.
"
"passed","Tue Sep 23 02:20:21 UTC 2025","Tue Sep 23 02:20:45 UTC 2025","24492","CLI Tests","CLI Storage","TestCLIStorage","","","Admin upload file without project created via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.

### Verify that:

- User **cannot** upload file if there is **no project created** yet via **CLI**.
"
"skipped","Tue Sep 23 01:44:15 UTC 2025","Tue Sep 23 01:44:15 UTC 2025","0","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify installed DeepSeek app info displayed on the app container via UI","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.

### Verify that:

- Label `Installed` is displayed on the DeepSeek app container.
- `Show All` button displayed on the DeepSeek app container.
"
"passed","Tue Sep 23 02:10:24 UTC 2025","Tue Sep 23 02:12:22 UTC 2025","118353","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager cannot change Admin role to Manager","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.
- Signup `third user`.
- Invite `third user` to organization with `Admin` role via **API**.

### Verify that:

- `Manager` **cannot** change user role from `Admin` to `Manager`.
"
"passed","Tue Sep 23 02:53:35 UTC 2025","Tue Sep 23 02:54:16 UTC 2025","41326","UI Tests","UI Disks","TestUIDisks","","","Create Second Disk via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Create new Disk.

### Verify that:

- User can create second Disk.
"
"passed","Tue Sep 23 02:56:15 UTC 2025","Tue Sep 23 02:56:51 UTC 2025","36927","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Create First Project from main page via UI","
- Login with valid credentials.
- Create new organization via **API**.

### Verify that:

- User can create first project in organization from **the main page**.
"
"passed","Tue Sep 23 02:07:42 UTC 2025","Tue Sep 23 02:08:29 UTC 2025","46723","UI Tests","UI Files","TestUIFiles","","","User make single click on File","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Upload `txt` file.
- Single click on file.

### Verify that:
- File info section appears.
- File action bar appears.
"
"passed","Tue Sep 23 02:43:23 UTC 2025","Tue Sep 23 02:43:34 UTC 2025","11428","E2E Tests","Shell App","TestE2EShellApp","","","Verify Installed apps details info via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click `Installed Apps` button.
- Click `Details` button on installed app container.

### Verify that:

- Shell app Details info is valid.
"
"passed","Tue Sep 23 02:29:00 UTC 2025","Tue Sep 23 02:30:03 UTC 2025","63261","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Writer removes Reader from project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Writer` role via **CLI**.
- Add `third user` to project with `Reader` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Writer` **cannot** remove members from project via **CLI**.
"
"passed","Tue Sep 23 01:38:35 UTC 2025","Tue Sep 23 01:40:09 UTC 2025","93855","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Writer to Manager","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Writer` role.

### Verify that:

- `Admin` can promote `Writer` to `Manager`.
"
"passed","Tue Sep 23 01:51:06 UTC 2025","Tue Sep 23 01:52:08 UTC 2025","62618","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change Manager role to Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.

### Verify that:
- `Admin` can change user role from `Manager` to `Admin`
- User after changing role from `Manager` to `Admin`:

- Can access organization `Settings`.
- Can access organization `Billing`.
"
"passed","Tue Sep 23 02:36:05 UTC 2025","Tue Sep 23 02:41:11 UTC 2025","305132","E2E Tests","Shell App","TestE2EShellApp","","","Install Shell app via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.

### Verify that:

- User can install `Shell` app via **UI**.
"
"passed","Tue Sep 23 02:44:10 UTC 2025","Tue Sep 23 02:45:54 UTC 2025","103188","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Manager can remove User from organization","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.
- Signup `third user`.
- Invite `third user` to organization with `User` role via **API**.

### Verify that:

- `Manager` can remove `User` from organization.
"
"passed","Tue Sep 23 01:33:44 UTC 2025","Tue Sep 23 01:35:02 UTC 2025","78448","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Reader to Manager","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.

### Verify that:

- `Admin` can promote `Reader` to `Manager`.
"
"passed","Tue Sep 23 02:31:19 UTC 2025","Tue Sep 23 02:32:36 UTC 2025","76579","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Reader removes Reader from project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Reader` role via **CLI**.
- Add `third user` to project with `Reader` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Reader` **cannot** remove members from project via **CLI**.
"
"passed","Tue Sep 23 03:06:37 UTC 2025","Tue Sep 23 03:08:18 UTC 2025","101472","UI Tests","UI Credits Purchase","TestUICreditsPurchase","","","Verify Manager can purchase organization credits with predefined value","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role.

### Verify that:

- `Manager` can purchase credits using predefined value(10, 100, 1000).
"
"passed","Tue Sep 23 01:31:54 UTC 2025","Tue Sep 23 01:33:37 UTC 2025","103165","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Reader to Writer","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.

### Verify that:

- `Admin` can promote Reader to `Writer`.
"
"skipped","Tue Sep 23 01:44:21 UTC 2025","Tue Sep 23 01:44:21 UTC 2025","0","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify Installed apps details info via API","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Call `instances` API.

### Verify that:

- API response contains valid data.
"
"passed","Tue Sep 23 03:05:26 UTC 2025","Tue Sep 23 03:06:27 UTC 2025","61410","UI Tests","UI Secrets","TestUISecrets","","","Delete Secret via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Create Secret.

### Verify that:

- User can delete Secret.
"
"passed","Tue Sep 23 01:43:49 UTC 2025","Tue Sep 23 01:45:25 UTC 2025","96449","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Manager to Writer","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.

### Verify that:

- `Admin` can demote `Manager` to `Writer`.
"
"passed","Tue Sep 23 02:50:11 UTC 2025","Tue Sep 23 02:51:15 UTC 2025","63619","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Manager cannot remove himself from organization","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.

### Verify that:

- `Manager` **cannot** remove himself from organization.
"
"passed","Tue Sep 23 02:52:13 UTC 2025","Tue Sep 23 02:52:54 UTC 2025","41598","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","User verifies admin get-projects command output via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Run `apolo admin get-projects` command via **CLI**.

### Verify that:

- Valid project info is displayed in command output.
"
"passed","Tue Sep 23 01:42:14 UTC 2025","Tue Sep 23 01:42:59 UTC 2025","44505","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Admin to Writer in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Admin` role via **CLI**.

### Verify that:

- `Admin` can change project role from `Admin` to `Writer` via **CLI**.
"
"passed","Tue Sep 23 03:06:43 UTC 2025","Tue Sep 23 03:07:09 UTC 2025","25673","UI Tests","UI Signup","TestUISignup","","","New user successful signup","
### Verify that:

- New user can signup via UI.
"
"passed","Tue Sep 23 03:00:15 UTC 2025","Tue Sep 23 03:00:53 UTC 2025","37452","CLI Tests","CLI Disks","TestCLIDisks","","","Admin remove disk via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Create new project via **API**.
- Login with Bearer auth token via **CLI**.
- Create first disk via **CLI**.

### Verify that:

- User can delete disk via **CLI**.
"
"passed","Tue Sep 23 03:04:52 UTC 2025","Tue Sep 23 03:05:31 UTC 2025","38691","CLI Tests","CLI Secrets","TestCLISecrets","","","Admin remove secret via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Create first secret via **CLI**.
- Create second secret via **CLI**.

### Verify that:

- User can remove second secret via **CLI**.
"
"passed","Tue Sep 23 02:42:10 UTC 2025","Tue Sep 23 02:43:02 UTC 2025","52321","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Switch between organization via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create second organization via UI.

### Verify that:

- User can switch between organizations.
"
"passed","Tue Sep 23 02:52:52 UTC 2025","Tue Sep 23 02:53:27 UTC 2025","35123","UI Tests","UI Disks","TestUIDisks","","","Create First Disk via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.

### Verify that:

- User can create first Disk after project created.
"
"passed","Tue Sep 23 01:48:45 UTC 2025","Tue Sep 23 01:50:04 UTC 2025","79008","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Admin to Writer","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Admin` role.

### Verify that:

- `Admin` can demote `Admin` to `Writer`.
"
"passed","Tue Sep 23 01:52:15 UTC 2025","Tue Sep 23 01:53:50 UTC 2025","95360","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change Admin role to User","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Admin` role via **API**.

### Verify that:

- `Admin` can change user role from `Admin` to `User`
- User after changing role from `Admin` to `User`:

- **Cannot** access organization `Settings`.
- **Cannot** access organization `Billing`.
"
"passed","Tue Sep 23 03:07:15 UTC 2025","Tue Sep 23 03:08:50 UTC 2025","95172","UI Tests","UI Signup","TestUISignup","","","Invite not registered user as user to organization","
- Login with valid credentials.
- Create new organization.

### Verify that:

- User can invite **not registered** user to organization.
"
"passed","Tue Sep 23 01:53:05 UTC 2025","Tue Sep 23 01:54:05 UTC 2025","60040","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Manager to Writer in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.
- Add `third user` to project with `Manager` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` can change project role from `Manager` to `Writer` via **CLI**.
"
"skipped","Tue Sep 23 01:44:36 UTC 2025","Tue Sep 23 01:44:36 UTC 2025","0","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verfiy GET external Chat API /v1/models returns valid data","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- GET `external` OpenAI Compatible Chat API `{hostname}/v1/models`.

### Verify that:

- API response contains valid data.
"
"passed","Tue Sep 23 02:01:19 UTC 2025","Tue Sep 23 02:02:24 UTC 2025","65432","UI Tests","UI Files","TestUIFiles","","","Verify Admin can create new folder","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Admin` role.

### Verify that:

- `Admin` can create new folder
"
"passed","Tue Sep 23 02:35:13 UTC 2025","Tue Sep 23 02:35:38 UTC 2025","25411","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User verifies config show output via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Login with Bearer auth token via **CLI**.
- Create first organization via **CLI**.
- Run `apolo config show` command via **CLI**.

### Verify that:

- `apolo config show` command output is valid.
"
"passed","Tue Sep 23 03:02:34 UTC 2025","Tue Sep 23 03:03:37 UTC 2025","63730","UI Tests","UI Organization Roles Access","TestUIOrganizationRolesAccess","","","Verify invited Manager can access organization settings","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.

### Verify that `Manager`:

- Can access organization Settings.
"
"passed","Tue Sep 23 03:05:47 UTC 2025","Tue Sep 23 03:06:36 UTC 2025","49355","UI Tests","UI Organization Roles Access","TestUIOrganizationRolesAccess","","","Verify invited Admin can access organization billing","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Admin` role via **API**.

### Verify that `Admin`:

- Can access organization Billing.
"
"skipped","Tue Sep 23 01:44:30 UTC 2025","Tue Sep 23 01:44:30 UTC 2025","0","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify app output endpoints schema via API","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.

### Verify that:

- API endpoints data matching expected json schema.
"
"passed","Tue Sep 23 02:56:25 UTC 2025","Tue Sep 23 02:57:16 UTC 2025","51050","UI Tests","UI Disks","TestUIDisks","","","Delete Disk via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Create new Disk.

### Verify that:

- User can delete Disk.
"
"passed","Tue Sep 23 02:37:26 UTC 2025","Tue Sep 23 02:38:04 UTC 2025","38403","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","Invite user to org via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Signup `second` user via **UI**.
- Login with Bearer auth token via **CLI**.
- Create first organization via **CLI**.

### Verify that:

- User can invite registered user to organization via **CLI**.
"
"skipped","Tue Sep 23 01:44:28 UTC 2025","Tue Sep 23 01:44:28 UTC 2025","0","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify app output contains required endpoints via API","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.

### Verify that `output` API response contains required endpoints:

- Http OpenAI Compatible Chat API
- Https OpenAI Compatible Chat API
- Http OpenAI Compatible Embeddings API
- Https OpenAI Compatible Embeddings API
"
"passed","Tue Sep 23 02:52:06 UTC 2025","Tue Sep 23 02:52:46 UTC 2025","39884","UI Tests","UI Disks","TestUIDisks","","","Create First Disk without project via UI","
- Login with valid credentials.
- Create new organization via **API**.

### Verify that:

- User **cannot** create first Disk if **no project created** yet.
"
"passed","Tue Sep 23 02:22:44 UTC 2025","Tue Sep 23 02:23:44 UTC 2025","60272","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager removes Writer from project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.
- Add `third user` to project with `Writer` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` can remove `Writer` from project via **CLI**.
"
"passed","Tue Sep 23 02:57:24 UTC 2025","Tue Sep 23 02:57:50 UTC 2025","25537","CLI Tests","CLI Disks","TestCLIDisks","","","Admin create disk with no project created via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.

### Verify that:

- User **cannot** create disk via CLI if there is no project created yet.
"
"passed","Tue Sep 23 02:37:21 UTC 2025","Tue Sep 23 02:38:17 UTC 2025","56791","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","User removes User from org via **CLI**","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Add `second user` to organization with `User` role via **CLI**.
- Add `third user` to organization with `User` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `User` **cannot** remove members from organization via **CLI**.
"
"passed","Tue Sep 23 01:47:01 UTC 2025","Tue Sep 23 01:48:38 UTC 2025","97301","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Admin to Reader","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Admin` role.

### Verify that:

- `Admin` can demote `Admin` to `Reader`.
"
"passed","Tue Sep 23 02:34:23 UTC 2025","Tue Sep 23 02:35:19 UTC 2025","56123","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Manager removes Admin from org via **CLI**","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Add `second user` to organization with `Manager` role via **CLI**.
- Add `third user` to organization with `Admin` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` **cannot** remove `Admin` from organization via **CLI**.
"
"passed","Tue Sep 23 02:50:39 UTC 2025","Tue Sep 23 02:51:52 UTC 2025","73050","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can modify files","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.

### Verify that:

- `Manager` has access to modify Files.
"
"passed","Tue Sep 23 01:51:50 UTC 2025","Tue Sep 23 01:53:34 UTC 2025","103634","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Admin to Manager","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Admin` role.

### Verify that:

- `Admin` can demote `Admin` to `Manager`.
"
"passed","Tue Sep 23 02:38:12 UTC 2025","Tue Sep 23 02:38:43 UTC 2025","31273","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","Invite user to organization with default project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create first organization via **CLI**.
- Create first project with 'default' option via **CLI**.

### Verify that:

- User can invite registered user to organization via **CLI**.
- Newly invited user is member of default project.
"
"passed","Tue Sep 23 02:02:45 UTC 2025","Tue Sep 23 02:05:24 UTC 2025","158413","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can demote Writer to Reader","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Writer` role.

### Verify that:

- `Manager` can demote `Writer` to `Reader`.
"
"passed","Tue Sep 23 02:06:56 UTC 2025","Tue Sep 23 02:07:35 UTC 2025","38403","UI Tests","UI Files","TestUIFiles","","","User upload txt file","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.

### Verify that:

- User can upload `txt` file via UI.
"
"skipped","Tue Sep 23 01:44:24 UTC 2025","Tue Sep 23 01:44:24 UTC 2025","0","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify app output contains required endpoints via UI","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.
- Scroll to `Output` section.

### Verify that `Output` section contains:
- Http OpenAI Compatible Chat API
- Https OpenAI Compatible Chat API
- Http OpenAI Compatible Embeddings API
- Https OpenAI Compatible Embeddings API
"
"passed","Tue Sep 23 02:10:28 UTC 2025","Tue Sep 23 02:12:51 UTC 2025","142451","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager cannot demote Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Admin` role.

### Verify that:

- `Manager` **cannot** demote `Admin` to `Manager`.
"
"passed","Tue Sep 23 02:20:07 UTC 2025","Tue Sep 23 02:22:32 UTC 2025","145046","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager can remove Reader from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Manager` can remove `Reader` from project.
"
"passed","Tue Sep 23 02:46:02 UTC 2025","Tue Sep 23 02:47:55 UTC 2025","113261","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Manager can remove another Manager from organization","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.
- Signup `third user`.
- Invite `third user` to organization with `Manager` role via **API**.

### Verify that:

- `Manager` can remove another `Manager` from organization.
"
"passed","Tue Sep 23 02:57:41 UTC 2025","Tue Sep 23 02:58:24 UTC 2025","42498","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Create second project via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.

### Verify that:

- User can create second project in organization.
"
"passed","Tue Sep 23 02:57:58 UTC 2025","Tue Sep 23 02:58:30 UTC 2025","32844","CLI Tests","CLI Disks","TestCLIDisks","","","Admin create first disk via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Create new project via **API**.
- Login with Bearer auth token via **CLI**.

### Verify that:

- User can create disk via **CLI**.
"
"passed","Tue Sep 23 01:47:55 UTC 2025","Tue Sep 23 01:49:14 UTC 2025","78492","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change User role to Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `User` role via **API**.

### Verify that:

- `Admin` can change user role from `User` to `Admin`
- User after changing role from `User` to `Admin`:

- Can access organization `Settings`
- Can access organization `Billing`
"
"failed","Tue Sep 23 02:43:49 UTC 2025","Tue Sep 23 02:46:46 UTC 2025","177830","E2E Tests","Shell App","TestE2EShellApp","","","Verify User can uninstall app via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click `Installed Apps` button.
- Click `Details` button on installed app container.
- Click `Uninstall` button.

### Verify that:

- Shell app uninstalled.
"
"passed","Tue Sep 23 01:48:34 UTC 2025","Tue Sep 23 01:49:40 UTC 2025","66638","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Writer to Reader in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.
- Add `third user` to project with `Writer` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` can change project role from `Writer` to `Reader` via **CLI**.
"
"passed","Tue Sep 23 01:35:28 UTC 2025","Tue Sep 23 01:36:23 UTC 2025","54506","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Writer to Reader in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Writer` role via **CLI**.

### Verify that:

- `Admin` can change project role from `Writer` to `Reader` via **CLI**.
"
"passed","Tue Sep 23 01:54:12 UTC 2025","Tue Sep 23 01:55:10 UTC 2025","58571","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Manager to Admin in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.
- Add `third user` to project with `Manager` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` **cannot** change project role from `Manager` to `Admin` via **CLI**.
"
"skipped","Tue Sep 23 01:44:17 UTC 2025","Tue Sep 23 01:44:17 UTC 2025","0","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify User can reach Installed apps page from app container via UI","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Click `Show All` button on Shell App container.

### Verify that:

- DeepSeek app displayed in Installed Apps.
"
"passed","Tue Sep 23 03:02:05 UTC 2025","Tue Sep 23 03:02:49 UTC 2025","43942","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Invite not registered user to project via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.

### Verify that:

- User **cannot** invite to project another user which is **not registered**.
"
"passed","Tue Sep 23 02:38:24 UTC 2025","Tue Sep 23 02:39:47 UTC 2025","82627","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Admin can remove User from organization","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `User` role via **API**.

### Verify that:

- `Admin` can remove `User` from organization.
"
"passed","Tue Sep 23 02:08:09 UTC 2025","Tue Sep 23 02:10:17 UTC 2025","128200","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager cannot change Admin role to User","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.
- Signup `third user`.
- Invite `third user` to organization with `Admin` role via **API**.

### Verify that:

- `Manager` **cannot** change user role from `Admin` to `User`.
"
"passed","Tue Sep 23 02:26:22 UTC 2025","Tue Sep 23 02:26:54 UTC 2025","32429","CLI Tests","CLI Storage","TestCLIStorage","","","Admin remove text file via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Upload `text` file via **CLI**.

### Verify that:

- User can remove `txt` file via **CLI**.
"
"passed","Tue Sep 23 03:01:00 UTC 2025","Tue Sep 23 03:01:39 UTC 2025","39147","UI Tests","UI Secrets","TestUISecrets","","","Create First Secret without project via UI","
- Login with valid credentials.
- Create new organization via **API**.

### Verify that:

- User **cannot** create first Secret if **no project created** yet.
"
"passed","Tue Sep 23 02:41:13 UTC 2025","Tue Sep 23 02:41:23 UTC 2025","10554","E2E Tests","Shell App","TestE2EShellApp","","","Verify installed Shell app listed in Installed apps via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.

### Verify that:

- Shell app displayed in Installed Apps.
"
"passed","Tue Sep 23 02:41:18 UTC 2025","Tue Sep 23 02:42:03 UTC 2025","45020","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Create Second Organization via UI","
- Login with valid credentials.
- Create new organization via **API**.

### Verify that:

- User can create second organization.
"
"passed","Tue Sep 23 03:03:30 UTC 2025","Tue Sep 23 03:04:00 UTC 2025","30538","CLI Tests","CLI Secrets","TestCLISecrets","","","Admin create first secret via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.

### Verify that:

- User can create first secret via **CLI**.
"
"skipped","Tue Sep 23 01:44:11 UTC 2025","Tue Sep 23 01:44:11 UTC 2025","0","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify installed DeepSeek app listed in Installed apps via UI","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.

### Verify that:

- DeepSeek app displayed in Installed Apps.
"
"passed","Tue Sep 23 02:17:42 UTC 2025","Tue Sep 23 02:18:12 UTC 2025","29961","CLI Tests","CLI Storage","TestCLIStorage","","","Admin create folder without project created via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.

### Verify that:

- User **cannot** create folder if there is **no project created** yet via **CLI**.
"
"passed","Tue Sep 23 01:57:29 UTC 2025","Tue Sep 23 01:58:26 UTC 2025","57358","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Reader change member role from Reader to Writer in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Reader` role via **CLI**.
- Add `third user` to project with `Reader` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Reader` **cannot** change member project roles via **CLI**.
"
"passed","Tue Sep 23 02:11:38 UTC 2025","Tue Sep 23 02:12:34 UTC 2025","56540","UI Tests","UI Files","TestUIFiles","","","User delete File","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Upload `txt` file.

### Verify that:

- User can delete a file with Delete button from File action bar.
"
"passed","Tue Sep 23 02:42:27 UTC 2025","Tue Sep 23 02:43:20 UTC 2025","52943","E2E Tests","Shell App","TestE2EShellApp","","","Verify User can reach Installed apps page from app container via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click `Show All` button on Shell App container.

### Verify that:

- Shell app displayed in Installed Apps.
"
"passed","Tue Sep 23 02:58:32 UTC 2025","Tue Sep 23 02:59:58 UTC 2025","85325","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Invite member of organization to project via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization.

### Verify that:

- User can invite member of organization to project.
"
"passed","Tue Sep 23 02:43:36 UTC 2025","Tue Sep 23 02:43:46 UTC 2025","10145","E2E Tests","Shell App","TestE2EShellApp","","","Verify Installed apps details info via API","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Call `instances` API.

### Verify that:

- API response contains valid data.
"
"passed","Tue Sep 23 03:01:01 UTC 2025","Tue Sep 23 03:02:27 UTC 2025","85608","UI Tests","UI Organization Roles Access","TestUIOrganizationRolesAccess","","","Verify invited User access","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `User` role via **API**.

### Verify that `User`:

- **Cannot** access organization Settings.
- **Cannot** access organization Billing.
- **Cannot** invite member to organization.
- **Cannot** edit organization members.
- **Cannot** delete members from organization.
"
"passed","Tue Sep 23 02:41:23 UTC 2025","Tue Sep 23 02:42:36 UTC 2025","73696","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Admin can remove another Admin from organization","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Admin` role via **API**.

### Verify that:

- `Admin` can remove another `Admin` from organization.
"
"passed","Tue Sep 23 01:43:06 UTC 2025","Tue Sep 23 01:43:56 UTC 2025","49989","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Admin to Manager in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Admin` role via **CLI**.

### Verify that:

- `Admin` can change project role from `Admin` to `Manager` via **CLI**.
"
"passed","Tue Sep 23 02:22:39 UTC 2025","Tue Sep 23 02:25:09 UTC 2025","150193","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager can remove Writer from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Writer` role.

### Verify that:

- `Manager` can remove `Writer` from project.
"
"passed","Tue Sep 23 02:47:35 UTC 2025","Tue Sep 23 02:48:57 UTC 2025","82183","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Reader cannot modify files","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.

### Verify that:

- `Reader` **doesn't** have access to modify Files.
"
"passed","Tue Sep 23 03:05:39 UTC 2025","Tue Sep 23 03:06:30 UTC 2025","50962","UI Tests","UI Credits Purchase","TestUICreditsPurchase","","","Verify User cannot purchase credits via top pane","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `User` role.

### Verify that:

- `User` **cannot** purchase credits via top pane.
"
"passed","Tue Sep 23 02:30:13 UTC 2025","Tue Sep 23 02:31:28 UTC 2025","75438","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager cannot remove himself from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.

### Verify that:

- `Manager` **cannot** remove himself from project.
"
"passed","Tue Sep 23 02:58:31 UTC 2025","Tue Sep 23 03:00:53 UTC 2025","142401","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager cannot invite Admin to a project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.

### Verify that:

- `Manager` **cannot** invite `third user` as `Admin` to a project.
"
"passed","Tue Sep 23 01:36:30 UTC 2025","Tue Sep 23 01:37:24 UTC 2025","54270","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Writer to Manager in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Writer` role via **CLI**.

### Verify that:

- `Admin` can change project role from `Writer` to `Manager` via **CLI**.
"
"passed","Tue Sep 23 02:34:16 UTC 2025","Tue Sep 23 02:35:05 UTC 2025","49151","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User removes organization via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Login with Bearer auth token via **CLI**.
- Create first organization via **CLI**.
- Create second organization via **CLI**.

### Verify that:

- User can remove organization via **CLI**.
"
"passed","Tue Sep 23 03:08:56 UTC 2025","Tue Sep 23 03:10:11 UTC 2025","74900","UI Tests","UI Signup","TestUISignup","","","Invite not registered user to organization with default project via UI","
- Login with valid credentials.
- Create new organization.
- Create project with `default` option.
- Invite **not registered** user to organization.

### Verify that:

- Newly invited user automatically is member of default project.
"
"passed","Tue Sep 23 02:10:34 UTC 2025","Tue Sep 23 02:11:31 UTC 2025","57508","UI Tests","UI Files","TestUIFiles","","","User rename File","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Upload txt file.

### Verify that:

- User can rename a file with `Rename` button from File action bar.
"
"passed","Tue Sep 23 03:09:31 UTC 2025","Tue Sep 23 03:09:40 UTC 2025","8733","UI Tests","UI Login","TestUILogin","","","New user successful login","
### Verify that:

- User can login with valid credentials.
"
"passed","Tue Sep 23 02:19:03 UTC 2025","Tue Sep 23 02:19:35 UTC 2025","32393","CLI Tests","CLI Storage","TestCLIStorage","","","Admin rename folder via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Create new folder via **CLI**.

### Verify that:

- User can rename folder via **CLI**.
"
"passed","Tue Sep 23 02:33:20 UTC 2025","Tue Sep 23 02:34:09 UTC 2025","49834","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User creates a second organization via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Login with Bearer auth token via **CLI**.
- Create first organization via **CLI**.

### Verify that:

- User can create second organization via **CLI**.
"
"passed","Tue Sep 23 02:16:18 UTC 2025","Tue Sep 23 02:17:12 UTC 2025","54917","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin removes Manager from project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.

### Verify that:

- `Admin` can remove `Manager` from project via **CLI**.
"
"passed","Tue Sep 23 01:51:01 UTC 2025","Tue Sep 23 01:51:52 UTC 2025","50727","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Writer to Admin in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.
- Add `third user` to project with `Writer` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` **cannot** change project role from `Writer` to `Admin` via **CLI**.
"
"passed","Tue Sep 23 02:41:39 UTC 2025","Tue Sep 23 02:42:25 UTC 2025","46113","E2E Tests","Shell App","TestE2EShellApp","","","Verify installed Shell app info displayed on the app container via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.

### Verify that:

- Label `Installed` is displayed on the Shell app container.
- `Show All` button displayed on the Shell app container.
"
"passed","Tue Sep 23 02:35:46 UTC 2025","Tue Sep 23 02:36:35 UTC 2025","48888","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User switch organization via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Login with Bearer auth token via **CLI**.
- Create first organization via **CLI**.
- Create second organization via **CLI**.

### Verify that:

- User can switch between organizations via **CLI**.
"
"passed","Tue Sep 23 02:05:08 UTC 2025","Tue Sep 23 02:05:53 UTC 2025","44660","UI Tests","UI Files","TestUIFiles","","","User delete Folder","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Create new folder.

### Verify that:

- User can delete a folder with `Delete` button from File action bar.
"
"skipped","Tue Sep 23 01:44:19 UTC 2025","Tue Sep 23 01:44:19 UTC 2025","0","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify Installed apps details info via UI","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Click `Installed Apps` button.
- Click `Details` button on installed app container.

### Verify that:

- DeepSeek app Details info is valid.
"
"passed","Tue Sep 23 02:05:42 UTC 2025","Tue Sep 23 02:08:01 UTC 2025","139191","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager cannot change Manager role to Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.
- Signup `third user`.
- Invite `third user` to organization with `Manager` role via **API**.

### Verify that:

- `Manager` cannot change user role from `Manager` to `Admin`.
"
"passed","Tue Sep 23 01:39:29 UTC 2025","Tue Sep 23 01:40:14 UTC 2025","45438","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Manager to Writer in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.

### Verify that:

- `Admin` can change project role from `Manager` to `Writer` via **CLI**.
"
"passed","Tue Sep 23 03:00:06 UTC 2025","Tue Sep 23 03:01:57 UTC 2025","110957","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Invite member that NOT in organization to project via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- DO NOT invite `second user` to organization.

### Verify that:

- User **cannot** invite to project another user which is **not member of organization**.
"
"passed","Tue Sep 23 02:14:00 UTC 2025","Tue Sep 23 02:14:59 UTC 2025","59051","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin removes Reader from project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Reader` role via **CLI**.

### Verify that:

- `Admin` can remove `Reader` from project via **CLI**.
"
"passed","Tue Sep 23 02:52:00 UTC 2025","Tue Sep 23 02:54:04 UTC 2025","124114","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can invite Reader to a project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.

### Verify that:

- `Manager` can invite `third user` as `Reader` to a project.
"
"passed","Tue Sep 23 02:13:00 UTC 2025","Tue Sep 23 02:15:13 UTC 2025","133800","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Writer cannot change member roles","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Writer` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Writer` **cannot** change member roles.
"
"passed","Tue Sep 23 01:56:53 UTC 2025","Tue Sep 23 01:58:17 UTC 2025","83601","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin cannot demote himself to Manager","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Admin` role via **API**.

### Verify that:

- `Admin` cannot demote himself to `Manager`.
"
"passed","Tue Sep 23 02:17:21 UTC 2025","Tue Sep 23 02:18:22 UTC 2025","60308","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin removes Admin from project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Admin` role via **CLI**.

### Verify that:

- `Admin` can remove another `Admin` from project via **CLI**.
"
"passed","Tue Sep 23 02:55:25 UTC 2025","Tue Sep 23 02:56:08 UTC 2025","42826","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","Add user not in organization to project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.

### Verify that:

- User **cannot** add registered user **not from organization** to project via **CLI**.
"
"passed","Tue Sep 23 02:55:36 UTC 2025","Tue Sep 23 02:56:17 UTC 2025","40945","UI Tests","UI Disks","TestUIDisks","","","Open Disk info view by click on disk button","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Create new Disk.

### Verify that:

- After click on disk button Disk info view appears.
"
"failed","Tue Sep 23 01:32:06 UTC 2025","Tue Sep 23 01:44:11 UTC 2025","724818","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Install DeepSeek app via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.

### Verify that:

- User can install `DeepSeek` app via **UI**.
"
"passed","Tue Sep 23 02:40:27 UTC 2025","Tue Sep 23 02:41:11 UTC 2025","43662","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Create First Organization via UI","
- Login with valid credentials.

### Verify that:

- User can create first organization during onboarding.
"
"passed","Tue Sep 23 01:44:04 UTC 2025","Tue Sep 23 01:44:41 UTC 2025","37389","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin demote himself to Manager in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.

### Verify that:

- `Admin` **cannot** demote himself via **CLI**.
"
"passed","Tue Sep 23 01:41:19 UTC 2025","Tue Sep 23 01:42:07 UTC 2025","47968","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Admin to Reader in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Admin` role via **CLI**.

### Verify that:

- `Admin` can change project role from `Admin` to `Reader` via **CLI**.
"
"passed","Tue Sep 23 02:48:02 UTC 2025","Tue Sep 23 02:50:04 UTC 2025","121586","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Manager cannot remove Admin from organization","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.
- Signup `third user`.
- Invite `third user` to organization with `Admin` role via **API**.

### Verify that:

- `Manager` **cannot** remove another `Admin` from organization.
"
"passed","Tue Sep 23 02:41:25 UTC 2025","Tue Sep 23 02:41:37 UTC 2025","11595","E2E Tests","Shell App","TestE2EShellApp","","","Verify User can reach Shell app Details page from Installed Apps page","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.

### Verify that:

- `Shell app Details` page displayed.
"
"passed","Tue Sep 23 01:32:21 UTC 2025","Tue Sep 23 01:33:32 UTC 2025","70596","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Reader to Writer in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `second user` to project with `Reader` role via **CLI**.

### Verify that:

- `Admin` can change project role from `Reader` to `Writer` via **CLI**.
"
"passed","Tue Sep 23 02:23:53 UTC 2025","Tue Sep 23 02:25:18 UTC 2025","85338","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager removes Manager from project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.
- Add `third user` to project with `Manager` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` can remove another `Manager` from project via **CLI**.
"
"passed","Tue Sep 23 02:17:42 UTC 2025","Tue Sep 23 02:19:19 UTC 2025","97294","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove another Admin from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Admin` role.

### Verify that:

- `Admin` can remove another `Admin` from project.
"
"skipped","Tue Sep 23 01:44:13 UTC 2025","Tue Sep 23 01:44:13 UTC 2025","0","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify User can reach DeepSeek app Details page from Installed Apps page","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.

### Verify that:

- `DeepSeek app Details` page displayed.
"
"passed","Tue Sep 23 02:58:38 UTC 2025","Tue Sep 23 02:59:21 UTC 2025","42905","CLI Tests","CLI Disks","TestCLIDisks","","","Admin create second disk via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Create new project via **API**.
- Login with Bearer auth token via **CLI**.
- Create first disk via **CLI**.

### Verify that:

- User can create second disk via **CLI**.
"
"passed","Tue Sep 23 02:53:01 UTC 2025","Tue Sep 23 02:53:32 UTC 2025","30962","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","User creates a second project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create first project via **CLI**.

### Verify that:

- User can create second project via **CLI**.
"
"passed","Tue Sep 23 02:09:34 UTC 2025","Tue Sep 23 02:10:27 UTC 2025","52850","UI Tests","UI Files","TestUIFiles","","","User download txt file","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Upload `txt` file.

### Verify that:

- User can download `txt` file via UI.
- Downloaded `txt` file md5 hash matches expected file.
"
"passed","Tue Sep 23 01:49:20 UTC 2025","Tue Sep 23 01:50:59 UTC 2025","98512","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change Manager role to User","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.

### Verify that:
- `Admin` can change user role from `Manager` to `User`
- User after changing role from `Manager` to `User`:

- **Cannot** access organization `Settings`
- **Cannot** access organization `Billing`
"
"passed","Tue Sep 23 01:47:20 UTC 2025","Tue Sep 23 01:48:25 UTC 2025","65392","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Reader to Admin in project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.
- Add `third user` to project with `Reader` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` **cannot** change project role from `Reader` to `Admin` via **CLI**.
"
"passed","Tue Sep 23 03:02:43 UTC 2025","Tue Sep 23 03:03:51 UTC 2025","67419","UI Tests","UI Secrets","TestUISecrets","","","Create Second Secret via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Create Secret.

### Verify that:

- User can create second Secret.
"
"passed","Tue Sep 23 02:29:27 UTC 2025","Tue Sep 23 02:30:14 UTC 2025","46702","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Admin removes Admin from org via **CLI**","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Add `second user` to organization with `Admin` role via **CLI**.

### Verify that:

- `Admin` can remove `Admin` from organization via **CLI**.
"
"skipped","Tue Sep 23 01:44:41 UTC 2025","Tue Sep 23 01:44:41 UTC 2025","0","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify User can uninstall app via UI","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Click `Installed Apps` button.
- Click `Details` button on installed app container.
- Click `Uninstall` button.

### Verify that:

- DeepSeek app uninstalled.
"
"skipped","Tue Sep 23 01:44:26 UTC 2025","Tue Sep 23 01:44:26 UTC 2025","0","E2E Tests","DeepSeek App","TestE2EDeepSeekApp","","","Verify app output API schemas is valid via UI","
### Pre-conditions:
- DeepSeek app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.
- Scroll to `Output` section.

### Verify that:
- API sections data matching expected data format.
"
"passed","Tue Sep 23 03:03:58 UTC 2025","Tue Sep 23 03:05:18 UTC 2025","79899","UI Tests","UI Secrets","TestUISecrets","","","Search Secret via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Create Secret.

### Verify that:

- User can Search for secret via UI.
"
"passed","Tue Sep 23 02:47:26 UTC 2025","Tue Sep 23 02:48:34 UTC 2025","68210","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Invite registered user without organization to organization via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.

### Verify that:

- User can invite to organization another user that is registered but **doesn't have an organization**.
"
"passed","Tue Sep 23 02:23:11 UTC 2025","Tue Sep 23 02:23:44 UTC 2025","33417","CLI Tests","CLI Storage","TestCLIStorage","","","Admin download text file via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Upload `text` file via **CLI**.

### Verify that:

- User can download `txt` file via **CLI**.
- downloaded `txt` file md5 hash matches expected file.
"
"passed","Tue Sep 23 02:39:53 UTC 2025","Tue Sep 23 02:41:17 UTC 2025","83546","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Admin can remove Manager from organization","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.

### Verify that:

- `Admin` can remove `Manager` from organization.
"
"passed","Tue Sep 23 02:18:29 UTC 2025","Tue Sep 23 02:19:06 UTC 2025","36809","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin removes himself from project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.

### Verify that:

- `Admin` **cannot** remove himself from project via **CLI**.
"
"passed","Tue Sep 23 01:35:09 UTC 2025","Tue Sep 23 01:36:37 UTC 2025","87814","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Reader to Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.

### Verify that:

- `Admin` can promote `Reader` to `Admin`.
"
"passed","Tue Sep 23 02:59:34 UTC 2025","Tue Sep 23 03:00:07 UTC 2025","33053","CLI Tests","CLI Disks","TestCLIDisks","","","Admin get disk by ID via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Create new project via **API**.
- Login with Bearer auth token via **CLI**.
- Create first disk via **CLI**.

### Verify that:

- User can get disk info by disk ID via **CLI**.
"
"passed","Tue Sep 23 01:36:44 UTC 2025","Tue Sep 23 01:38:27 UTC 2025","103569","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Writer to Reader","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Writer` role.

### Verify that:

- `Admin` can demote `Writer` to `Reader`.
"
"passed","Tue Sep 23 01:57:49 UTC 2025","Tue Sep 23 02:00:00 UTC 2025","130800","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can promote Reader to Manager","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Manager` can promote `Reader` to `Manager`.
"
"passed","Tue Sep 23 03:06:55 UTC 2025","Tue Sep 23 03:07:26 UTC 2025","30275","CLI Tests","CLI Login","TestCLILogin","","","User with organization logs in with auth token via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create organization via **API**.

### Verify that:

- User can login with Bearer auth token via **CLI**.
- Login output in CLI valid `organization` and no `project` info.
"
"passed","Tue Sep 23 02:20:26 UTC 2025","Tue Sep 23 02:21:39 UTC 2025","73315","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager removes Reader from project via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Signup `third user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Add `second user` to organization via **CLI**.
- Add `third user` to organization via **CLI**.
- Add `second user` to project with `Manager` role via **CLI**.
- Add `third user` to project with `Reader` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Manager` can remove `Reader` from project via **CLI**.
"
"passed","Tue Sep 23 03:04:08 UTC 2025","Tue Sep 23 03:04:45 UTC 2025","36809","CLI Tests","CLI Secrets","TestCLISecrets","","","Admin create second secret via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Create first secret via **CLI**.

### Verify that:

- User can create second secret via **CLI**.
"
"passed","Tue Sep 23 02:00:40 UTC 2025","Tue Sep 23 02:03:04 UTC 2025","143870","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager cannot change User role to Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.
- Signup `third user`.
- Invite `third user` to organization with `User` role via **API**.

### Verify that:

- `Manager` **cannot** change user role from `User` to `Admin`.
"
"passed","Tue Sep 23 02:56:58 UTC 2025","Tue Sep 23 02:57:35 UTC 2025","36411","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Create First Project from top pane of main via UI","
- Login with valid credentials.
- Create new organization via **API**.

### Verify that:

- User can create first project in organization from project menu in the **top pane of the main page**.
"
"passed","Tue Sep 23 01:58:24 UTC 2025","Tue Sep 23 02:00:33 UTC 2025","129064","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager can change User role to Manager","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.
- Signup `third user`.
- Invite `third user` to organization with `User` role via **API**.

### Verify that:

- `Manager` can change user role from User to `Manager`.
- User after changing role from `User` to `Manager`:

- Can access organization `Settings`.
- Can access organization `Billing`.
"
"passed","Tue Sep 23 02:22:24 UTC 2025","Tue Sep 23 02:23:03 UTC 2025","39266","CLI Tests","CLI Storage","TestCLIStorage","","","Admin upload bin file via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.

### Verify that:

- User can upload `bin` file via **CLI**.
"
"passed","Tue Sep 23 02:33:51 UTC 2025","Tue Sep 23 02:35:56 UTC 2025","125021","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Reader cannot remove members from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Reader` **cannot** remove members from project.
"
"passed","Tue Sep 23 01:53:57 UTC 2025","Tue Sep 23 01:55:16 UTC 2025","79246","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change Admin role to Manager","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with Admin role via **API**.

### Verify that:

- `Admin` can change user role from `Admin` to `Manager`.
- User after changing role from `Admin` to `Manager`:

- Can access organization `Settings`.
- Can access organization `Billing`.
"
"passed","Tue Sep 23 03:03:44 UTC 2025","Tue Sep 23 03:04:43 UTC 2025","58396","UI Tests","UI Organization Roles Access","TestUIOrganizationRolesAccess","","","Verify invited Manager can access organization billing","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Manager` role via **API**.

### Verify that `Manager`:

- Can access organization Billing.
"
"passed","Tue Sep 23 03:06:37 UTC 2025","Tue Sep 23 03:06:48 UTC 2025","11681","CLI Tests","CLI Login","TestCLILogin","","","User without organization logs in with auth token via CLI","
- Login with valid credentials **via UI**.
- Get Bearer auth token from Playwright local storage.

### Verify that:

- User can login with Bearer auth token **via CLI**.
- Login output in CLI doesn't contain `organization` and `project`.
"
"passed","Tue Sep 23 01:55:23 UTC 2025","Tue Sep 23 01:56:45 UTC 2025","82373","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin cannot demote himself to User","
- Login with valid credentials.
- Create new organization via **API**.
- Signup `second user`.
- Invite `second user` to organization with `Admin` role via **API**.

### Verify that:

- `Admin` **cannot** demote himself to `User`.
"
"passed","Tue Sep 23 02:19:42 UTC 2025","Tue Sep 23 02:20:13 UTC 2025","31285","CLI Tests","CLI Storage","TestCLIStorage","","","Admin remove folder via CLI","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Login with Bearer auth token via **CLI**.
- Create new project via **CLI**.
- Create new folder via **CLI**.

### Verify that:

- User can remove folder via **CLI**.
"
"passed","Tue Sep 23 02:30:21 UTC 2025","Tue Sep 23 02:30:59 UTC 2025","37803","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Admin removes himself from org via **CLI**","
- Login with valid credentials via **UI**.
- Get Bearer auth token from Playwright local storage.
- Create new organization via **API**.
- Signup `second user` via **UI**.
- Login with Bearer auth token via **CLI**.
- Add `second user` to organization with `Admin` role via **CLI**.
- `Second user` login with Bearer auth token via **CLI**.

### Verify that:

- `Admin` **cannot** remove `himself` from organization via **CLI**.
"
