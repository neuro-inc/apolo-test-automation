"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Fri Aug 15 18:27:54 UTC 2025","Fri Aug 15 18:28:23 UTC 2025","29170","CLI Tests","CLI Storage","TestCLIStorage","","","Admin download bin file via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Upload bin file via CLI.
Verify that:
    - User can download bin file via CLI.
    - downloaded bin file md5 hash matches expected file.
"
"passed","Fri Aug 15 17:52:00 UTC 2025","Fri Aug 15 17:53:08 UTC 2025","67886","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change Admin role to Manager","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that:
    - Admin can change user role from Admin to Manager
    - User after changing role from Admin to Manager:
        - Can access organization Settings
        - Can access organization Billing
"
"passed","Fri Aug 15 18:29:58 UTC 2025","Fri Aug 15 18:30:46 UTC 2025","47159","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Manager removes User from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with Manager role via CLI.
-Add third user to organization with User role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager can remove User from organization via CLI.
"
"passed","Fri Aug 15 18:54:58 UTC 2025","Fri Aug 15 18:55:28 UTC 2025","30372","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Create First Project from top pane of main via UI","
-Login with valid credentials.
-Create new organization via API.
Verify that:
    User can create first project in organization from project menu in the top pane of the main page.
"
"passed","Fri Aug 15 18:38:24 UTC 2025","Fri Aug 15 18:38:59 UTC 2025","35459","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Create First Organization via UI","
-Login with valid credentials.
Verify that:
    User can create first organization during onboarding.
"
"passed","Fri Aug 15 18:41:35 UTC 2025","Fri Aug 15 18:44:10 UTC 2025","154481","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Search Member of organization via UI","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization via API.
-Signup third user.
-Invite third user to organization via API.
Verify that:
    User can search organization members using Search field.
"
"passed","Fri Aug 15 17:48:38 UTC 2025","Fri Aug 15 17:49:16 UTC 2025","37212","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Manager to Writer in project via CLI",""
"passed","Fri Aug 15 17:46:00 UTC 2025","Fri Aug 15 17:46:36 UTC 2025","35730","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Writer to Manager in project via CLI",""
"passed","Fri Aug 15 18:29:50 UTC 2025","Fri Aug 15 18:30:25 UTC 2025","34765","CLI Tests","CLI Storage","TestCLIStorage","","","Admin remove text file via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Upload text file via CLI.
Verify that:
    - User can remove txt file via CLI.
"
"passed","Fri Aug 15 18:54:27 UTC 2025","Fri Aug 15 18:54:50 UTC 2025","23053","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Create First Project from main page via UI","
-Login with valid credentials.
-Create new organization via API.
Verify that:
    User can create first project in organization from the main page.
"
"passed","Fri Aug 15 18:40:23 UTC 2025","Fri Aug 15 18:41:23 UTC 2025","59755","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Set default organization credits via UI","
-Login with valid credentials.
-Create new organization via API.
Verify that:
    User can set default organization credits.
"
"passed","Fri Aug 15 18:07:13 UTC 2025","Fri Aug 15 18:08:04 UTC 2025","51286","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Reader change member role from Reader to Writer in project via CLI",""
"passed","Fri Aug 15 18:19:54 UTC 2025","Fri Aug 15 18:21:17 UTC 2025","83324","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove Writer from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Writer role.
Verify that:
    - Admin can remove Writer from project
"
"passed","Fri Aug 15 18:32:16 UTC 2025","Fri Aug 15 18:33:02 UTC 2025","45530","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User creates a second organization via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
Verify that:
    - User can create second organization via CLI.
"
"passed","Fri Aug 15 17:55:20 UTC 2025","Fri Aug 15 17:57:30 UTC 2025","130200","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager can change User role to Manager","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with User role via API.
Verify that:
    - Manager can change user role from User to Manager
    - User after changing role from User to Manager:
        - Can access organization Settings
        - Can access organization Billing
"
"passed","Fri Aug 15 18:43:42 UTC 2025","Fri Aug 15 18:44:43 UTC 2025","61176","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Writer can modify files","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Writer role.
Verify that:
    - Writer has access to modify Files
"
"passed","Fri Aug 15 18:39:48 UTC 2025","Fri Aug 15 18:42:26 UTC 2025","157563","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Reader cannot remove members from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Reader cannot remove members from project
"
"passed","Fri Aug 15 18:23:16 UTC 2025","Fri Aug 15 18:24:33 UTC 2025","76885","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove another Admin from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Admin role.
Verify that:
    - Admin can remove another Admin from project
"
"passed","Fri Aug 15 18:25:44 UTC 2025","Fri Aug 15 18:26:08 UTC 2025","23802","CLI Tests","CLI Storage","TestCLIStorage","","","Admin upload text file via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
Verify that:
    - User can upload txt file via CLI.
"
"passed","Fri Aug 15 18:18:33 UTC 2025","Fri Aug 15 18:19:10 UTC 2025","36783","UI Tests","UI Files","TestUIFiles","","","User make single click on File","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Upload txt file.
Verify that after single click on file following elements appear:
    - File info section
    - File action bar
"
"passed","Fri Aug 15 19:04:16 UTC 2025","Fri Aug 15 19:05:18 UTC 2025","61896","UI Tests","UI Signup","TestUISignup","","","Invite not registered user to organization with default project via UI","
-Login with valid credentials.
-Create new organization.
-Create project with 'default' option.
-Invite not registered user to organization.
Verify that:
    Newly invited user automatically is member of default project.
"
"passed","Fri Aug 15 18:15:41 UTC 2025","Fri Aug 15 18:16:29 UTC 2025","47081","UI Tests","UI Files","TestUIFiles","","","User delete Folder","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new folder.
Verify that:
    - User can delete a folder with Delete button from File action bar.
"
"passed","Fri Aug 15 18:05:41 UTC 2025","Fri Aug 15 18:07:39 UTC 2025","118389","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager cannot change Admin role to Manager","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with Admin role via API.
Verify that:
    - Manager cannot change user role from Admin to Manager
"
"passed","Fri Aug 15 19:03:09 UTC 2025","Fri Aug 15 19:04:09 UTC 2025","60363","UI Tests","UI Signup","TestUISignup","","","Invite not registered user as user to organization","
-Login with valid credentials.
-Create new organization.
Verify that:
    User can invite not registered user to organization.
"
"passed","Fri Aug 15 19:01:24 UTC 2025","Fri Aug 15 19:02:22 UTC 2025","58072","CLI Tests","CLI Secrets","TestCLISecrets","","","Admin create second secret via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Create first secret via CLI.
Verify that:
    - User can create second secret via CLI.
"
"passed","Fri Aug 15 18:20:09 UTC 2025","Fri Aug 15 18:20:55 UTC 2025","45698","UI Tests","UI Files","TestUIFiles","","","User download txt file","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Upload txt file.
Verify that:
    - user can download txt file via UI.
    - downloaded bin file md5 hash matches expected file.
"
"passed","Fri Aug 15 18:41:59 UTC 2025","Fri Aug 15 18:43:57 UTC 2025","117565","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Manager can remove User from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with User role via API.
Verify that:
    - Manager can remove User from organization.
"
"passed","Fri Aug 15 18:33:56 UTC 2025","Fri Aug 15 18:34:21 UTC 2025","25095","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User verifies config show output via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
-Run 'apolo config show' command via CLI.
Verify that:
    - 'apolo config show' command output is valid.
"
"passed","Fri Aug 15 18:55:34 UTC 2025","Fri Aug 15 18:56:21 UTC 2025","47088","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Create second project via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
Verify that:
    User can create second project in organization.
"
"passed","Fri Aug 15 19:01:45 UTC 2025","Fri Aug 15 19:02:37 UTC 2025","52448","UI Tests","UI Credits Purchase","TestUICreditsPurchase","","","Verify User cannot purchase credits via top pane","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with User role.
Verify that:
    - User cannot purchase credits via top pane.
"
"passed","Fri Aug 15 18:54:12 UTC 2025","Fri Aug 15 18:54:36 UTC 2025","23694","CLI Tests","CLI Disks","TestCLIDisks","","","Admin create first disk via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Create new project via API.
-Login with Bearer auth token via CLI.
Verify that:
    - User can create disk via CLI.
"
"passed","Fri Aug 15 18:49:50 UTC 2025","Fri Aug 15 18:50:14 UTC 2025","24581","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","User creates a first project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
Verify that:
    - User can create first project via CLI.
"
"passed","Fri Aug 15 18:03:47 UTC 2025","Fri Aug 15 18:04:33 UTC 2025","46423","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Manager to Admin in project via CLI",""
"passed","Fri Aug 15 18:22:42 UTC 2025","Fri Aug 15 18:24:40 UTC 2025","118471","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Writer cannot change member roles","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Writer role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Writer cannot change member roles
"
"passed","Fri Aug 15 19:00:57 UTC 2025","Fri Aug 15 19:01:17 UTC 2025","19821","CLI Tests","CLI Secrets","TestCLISecrets","","","Admin create first secret via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
Verify that:
    - User can create first secret via CLI.
"
"passed","Fri Aug 15 18:01:20 UTC 2025","Fri Aug 15 18:02:19 UTC 2025","58764","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Manager to Reader in project via CLI",""
"passed","Fri Aug 15 18:51:33 UTC 2025","Fri Aug 15 18:52:30 UTC 2025","57696","UI Tests","UI Disks","TestUIDisks","","","Create First Disk via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
Verify that:
    - User can create first Disk after project created
"
"passed","Fri Aug 15 18:58:36 UTC 2025","Fri Aug 15 18:59:24 UTC 2025","48389","UI Tests","UI Secrets","TestUISecrets","","","Create Second Secret via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create Secret.
Verify that:
    - User can create second Secret.
"
"passed","Fri Aug 15 18:38:00 UTC 2025","Fri Aug 15 18:39:40 UTC 2025","99938","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Writer cannot remove members from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Writer cannot remove members from project
"
"passed","Fri Aug 15 17:54:12 UTC 2025","Fri Aug 15 17:54:39 UTC 2025","27192","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin demote himself to Manager in project via CLI",""
"passed","Fri Aug 15 18:57:53 UTC 2025","Fri Aug 15 18:58:30 UTC 2025","36892","UI Tests","UI Secrets","TestUISecrets","","","Create First Secret via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
Verify that:
    - User can create first Secret after project created
"
"passed","Fri Aug 15 18:12:56 UTC 2025","Fri Aug 15 18:13:45 UTC 2025","49095","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager removes Writer from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add third user to organization via CLI.
-Add second user to project with Manager role via CLI.
-Add third user to project with Writer role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager can remove Writer from project via CLI.
"
"passed","Fri Aug 15 18:13:11 UTC 2025","Fri Aug 15 18:13:48 UTC 2025","37424","UI Tests","UI Files","TestUIFiles","","","User make single click on Folder","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new folder.
Verify that after single click on folder following elements appear:
    - Folder info section
    - Folder action bar
"
"passed","Fri Aug 15 18:34:18 UTC 2025","Fri Aug 15 18:36:18 UTC 2025","119741","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager cannot remove Admin from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Admin role.
Verify that:
    - Manager cannot remove Admin from project
"
"passed","Fri Aug 15 18:19:16 UTC 2025","Fri Aug 15 18:20:02 UTC 2025","45534","UI Tests","UI Files","TestUIFiles","","","User download bin file","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Upload bin file.
Verify that:
    - user can download bin file via UI.
    - downloaded bin file md5 hash matches expected file.
"
"passed","Fri Aug 15 18:13:54 UTC 2025","Fri Aug 15 18:14:35 UTC 2025","41126","UI Tests","UI Files","TestUIFiles","","","User make double click on Folder","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new folder.
Verify that:
    - User opens a folder with a double click on it.
"
"passed","Fri Aug 15 19:04:43 UTC 2025","Fri Aug 15 19:04:55 UTC 2025","12680","UI Tests","UI Login","TestUILogin","","","New user successful login","
Verify that:
    User can login with valid credentials.
"
"passed","Fri Aug 15 18:58:55 UTC 2025","Fri Aug 15 18:59:33 UTC 2025","37986","UI Tests","UI Organization Roles Access","TestUIOrganizationRolesAccess","","","Verify invited Admin can access organization settings","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that Admin:
    - Can access organization Settings.
"
"passed","Fri Aug 15 18:36:38 UTC 2025","Fri Aug 15 18:37:31 UTC 2025","52473","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User verifies admin get-org-users output via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
-Invite second user to organization via CLI.
-Run 'apolo admin get-org-users' command via CLI.
Verify that:
    - Organization members are listed with valid data in command output.
"
"passed","Fri Aug 15 17:55:47 UTC 2025","Fri Aug 15 17:57:06 UTC 2025","78927","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Reader to Manager in project via CLI",""
"passed","Fri Aug 15 18:27:35 UTC 2025","Fri Aug 15 18:29:38 UTC 2025","122563","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager can remove Writer from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Writer role.
Verify that:
    - Manager can remove Writer from project
"
"passed","Fri Aug 15 19:04:34 UTC 2025","Fri Aug 15 19:05:51 UTC 2025","77639","UI Tests","UI Credits Purchase","TestUICreditsPurchase","","","Verify Admin can purchase organization credits with custom amount","
-Login with valid credentials.
-Create new organization via API.
Verify that:
    - Admin can purchase credits by input custom amount.
"
"passed","Fri Aug 15 18:23:44 UTC 2025","Fri Aug 15 18:24:10 UTC 2025","25869","CLI Tests","CLI Storage","TestCLIStorage","","","Admin create folder via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
Verify that:
    - User can create folder via CLI.
"
"passed","Fri Aug 15 18:59:49 UTC 2025","Fri Aug 15 19:00:28 UTC 2025","38701","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Invite not registered user to project via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
Verify that:
    User cannot invite to project another user which is not registered.
"
"passed","Fri Aug 15 18:11:05 UTC 2025","Fri Aug 15 18:13:26 UTC 2025","141532","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager cannot promote Reader to Admin","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Manager cannot promote Reader to Admin
"
"passed","Fri Aug 15 17:47:32 UTC 2025","Fri Aug 15 17:48:57 UTC 2025","85192","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change Manager role to User","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
Verify that:
    - Admin can change user role from Manager to User
    - User after changing role from Manager to User:
        - Cannot access organization Settings
        - Cannot access organization Billing
"
"passed","Fri Aug 15 18:40:33 UTC 2025","Fri Aug 15 18:41:45 UTC 2025","72092","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Admin cannot remove himself from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that:
    - Admin cannot remove himself from organization.
"
"passed","Fri Aug 15 18:59:39 UTC 2025","Fri Aug 15 19:00:15 UTC 2025","36079","UI Tests","UI Organization Roles Access","TestUIOrganizationRolesAccess","","","Verify invited Admin can access organization billing","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that Admin:
    - Can access organization Billing.
"
"passed","Fri Aug 15 17:44:36 UTC 2025","Fri Aug 15 17:45:40 UTC 2025","64430","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change User role to Admin","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with User role via API.
Verify that:
    - Admin can change user role from User to Admin
    - User after changing role from User to Admin:
        - Can access organization Settings
        - Can access organization Billing
"
"passed","Fri Aug 15 17:54:10 UTC 2025","Fri Aug 15 17:55:12 UTC 2025","62541","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin cannot demote himself to Manager","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that:
    - Admin cannot demote himself to Manager
"
"passed","Fri Aug 15 17:59:02 UTC 2025","Fri Aug 15 18:00:19 UTC 2025","76911","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Admin to Reader","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Admin role.
Verify that:
    - Admin can demote Admin to Reader
"
"passed","Fri Aug 15 18:25:18 UTC 2025","Fri Aug 15 18:25:37 UTC 2025","19647","CLI Tests","CLI Storage","TestCLIStorage","","","Admin upload file without project created via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
Verify that:
    - User cannot upload file if there is no project created yet via CLI.
"
"passed","Fri Aug 15 18:18:36 UTC 2025","Fri Aug 15 18:19:46 UTC 2025","70581","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove Reader from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
Verify that:
    - Admin can remove Reader from project
"
"passed","Fri Aug 15 17:54:38 UTC 2025","Fri Aug 15 17:55:51 UTC 2025","72732","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Manager to Reader","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
Verify that:
    - Admin can demote Manager to Reader
"
"passed","Fri Aug 15 18:01:56 UTC 2025","Fri Aug 15 18:03:46 UTC 2025","109792","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager cannot change Manager role to Admin","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with Manager role via API.
Verify that:
    - Manager cannot change user role from Manager to Admin.
"
"passed","Fri Aug 15 18:39:06 UTC 2025","Fri Aug 15 18:39:29 UTC 2025","23272","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Create Second Organization via UI","
-Login with valid credentials.
-Create new organization via API.
Verify that:
    User can create second organization.
"
"passed","Fri Aug 15 18:38:30 UTC 2025","Fri Aug 15 18:39:23 UTC 2025","52330","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Admin can remove Manager from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
Verify that:
    - Admin can remove Manager from organization.
"
"passed","Fri Aug 15 18:24:47 UTC 2025","Fri Aug 15 18:26:23 UTC 2025","96275","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Reader cannot change member roles","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Reader cannot change member roles
"
"passed","Fri Aug 15 18:10:09 UTC 2025","Fri Aug 15 18:10:51 UTC 2025","41769","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin removes Admin from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add second user to project with Admin role via CLI.
Verify that:
    - Admin can remove another Admin from project via CLI.
"
"passed","Fri Aug 15 18:24:41 UTC 2025","Fri Aug 15 18:25:16 UTC 2025","35396","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin cannot remove himself from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
Verify that:
    - Admin cannot remove himself from project
"
"passed","Fri Aug 15 17:49:23 UTC 2025","Fri Aug 15 17:50:13 UTC 2025","50275","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Manager to Admin in project via CLI",""
"passed","Fri Aug 15 18:55:45 UTC 2025","Fri Aug 15 18:56:48 UTC 2025","63252","UI Tests","UI Organization Roles Access","TestUIOrganizationRolesAccess","","","Verify invited User access","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with User role via API.
Verify that User:
    - Cannot access organization Settings
    - Cannot access organization Billing
    - Cannot invite member to organization
    - Cannot edit organization members
    - Cannot delete members from organization
"
"passed","Fri Aug 15 18:39:30 UTC 2025","Fri Aug 15 18:40:27 UTC 2025","57027","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Admin can remove another Admin from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that:
    - Admin can remove another Admin from organization.
"
"passed","Fri Aug 15 18:58:09 UTC 2025","Fri Aug 15 18:58:48 UTC 2025","38952","UI Tests","UI Organization Roles Access","TestUIOrganizationRolesAccess","","","Verify invited Manager can access organization billing","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
Verify that Manager:
    - Can access organization Billing.
"
"passed","Fri Aug 15 17:57:37 UTC 2025","Fri Aug 15 17:59:51 UTC 2025","134223","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager cannot change User role to Admin","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with User role via API.
Verify that:
    - Manager cannot change user role from User to Admin.
"
"passed","Fri Aug 15 18:28:24 UTC 2025","Fri Aug 15 18:29:02 UTC 2025","38212","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Admin removes Admin from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with Admin role via CLI.
Verify that:
    - Admin can remove Admin from organization via CLI.
"
"passed","Fri Aug 15 18:32:23 UTC 2025","Fri Aug 15 18:34:11 UTC 2025","108280","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager can remove another Manager from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Manager role.
Verify that:
    - Manager can remove another Manager from project
"
"passed","Fri Aug 15 17:52:21 UTC 2025","Fri Aug 15 17:53:16 UTC 2025","54856","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Admin to Writer in project via CLI",""
"passed","Fri Aug 15 19:03:07 UTC 2025","Fri Aug 15 19:04:10 UTC 2025","62360","E2E Tests","Apolo CLI Hello World Job Verification","TestHelloWorldJob","","","Run Hello World Job and Validate UI and CLI Results","
-Login with valid credentials.
-Create new organization via UI during onboarding.
-Create new project via CLI.
-Run Hello World Job via CLI.
Verify that:
    - Job executed successfully in CLI.
    - Job is displayed in successful jobs via UI.
"
"passed","Fri Aug 15 19:02:29 UTC 2025","Fri Aug 15 19:02:54 UTC 2025","24517","CLI Tests","CLI Secrets","TestCLISecrets","","","Admin remove secret via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Create first secret via CLI.
-Create second secret via CLI.
Verify that:
    - User can remove second secret via CLI.
"
"passed","Fri Aug 15 17:53:15 UTC 2025","Fri Aug 15 17:54:01 UTC 2025","46737","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin cannot demote himself to User","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that:
    - Admin cannot demote himself to User
"
"passed","Fri Aug 15 17:45:07 UTC 2025","Fri Aug 15 17:45:53 UTC 2025","45539","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Writer to Reader in project via CLI",""
"passed","Fri Aug 15 19:00:36 UTC 2025","Fri Aug 15 19:01:03 UTC 2025","27265","CLI Tests","CLI Login","TestCLILogin","","","User with organization logs in with auth token via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create organization via API.
Verify that:
    - User can login with Bearer auth token via CLI.
    - Login output in CLI valid organization and no project info.
"
"passed","Fri Aug 15 18:08:51 UTC 2025","Fri Aug 15 18:09:26 UTC 2025","34908","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin removes Writer from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add second user to project with Writer role via CLI.
Verify that:
    - Admin can remove Writer from project via CLI.
"
"passed","Fri Aug 15 17:58:28 UTC 2025","Fri Aug 15 17:59:18 UTC 2025","49740","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Writer to Reader in project via CLI",""
"passed","Fri Aug 15 17:43:11 UTC 2025","Fri Aug 15 17:44:29 UTC 2025","77655","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change User role to Manager","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with User role via API.
Verify that:
    - Admin can change user role from User to Manager
    - User after changing role from User to Manager:
        - Can access organization Settings
        - Can access organization Billing
"
"passed","Fri Aug 15 17:47:51 UTC 2025","Fri Aug 15 17:48:31 UTC 2025","39986","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Manager to Reader in project via CLI",""
"passed","Fri Aug 15 18:47:46 UTC 2025","Fri Aug 15 18:49:21 UTC 2025","95494","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Manager cannot remove Admin from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with Admin role via API.
Verify that:
    - Manager cannot remove another Admin from organization.
"
"passed","Fri Aug 15 18:52:33 UTC 2025","Fri Aug 15 18:53:08 UTC 2025","35571","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","Add organization member to project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization via CLI.
-Create new project via CLI.
Verify that:
    - User can add organization member to project via CLI.
"
"passed","Fri Aug 15 18:52:25 UTC 2025","Fri Aug 15 18:54:20 UTC 2025","114323","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager cannot invite Admin to a project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
Verify that:
    - Manager cannot invite third user as Admin to a project.
"
"passed","Fri Aug 15 18:42:34 UTC 2025","Fri Aug 15 18:43:35 UTC 2025","61543","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Reader cannot modify files","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
Verify that:
    - Reader doesn't have access to modify Files
"
"passed","Fri Aug 15 18:29:09 UTC 2025","Fri Aug 15 18:29:52 UTC 2025","42731","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Admin removes himself from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with Admin role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Admin cannot remove himself from organization via CLI.
"
"passed","Fri Aug 15 18:54:12 UTC 2025","Fri Aug 15 18:54:50 UTC 2025","37776","UI Tests","UI Disks","TestUIDisks","","","Open Disk info view by click on disk button","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new Disk.
Verify that:
    - After click on disk button Disk info view appears
"
"passed","Fri Aug 15 18:35:26 UTC 2025","Fri Aug 15 18:35:59 UTC 2025","32713","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Manager removes himself from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with Manager role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager cannot remove himself from organization via CLI.
"
"passed","Fri Aug 15 18:08:49 UTC 2025","Fri Aug 15 18:10:06 UTC 2025","76966","UI Tests","UI Files","TestUIFiles","","","Verify Writer can create new folder","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Writer role.
Verify that:
    - Writer can create new folder
"
"passed","Fri Aug 15 18:30:58 UTC 2025","Fri Aug 15 18:31:21 UTC 2025","23311","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User creates a first organization via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Login with Bearer auth token via CLI.
Verify that:
    - User can create first organization via CLI.
"
"passed","Fri Aug 15 18:22:16 UTC 2025","Fri Aug 15 18:23:08 UTC 2025","52564","UI Tests","UI Files","TestUIFiles","","","User delete File","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Upload txt file.
Verify that:
    - User can delete a file with Delete button from File action bar.
"
"passed","Fri Aug 15 18:56:27 UTC 2025","Fri Aug 15 18:58:05 UTC 2025","97882","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Invite member of organization to project via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization.
Verify that:
    User can invite member of organization to project.
"
"passed","Fri Aug 15 18:46:20 UTC 2025","Fri Aug 15 18:48:19 UTC 2025","119354","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can invite Reader to a project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
Verify that:
    - Manager can invite third user as Reader to a project
"
"passed","Fri Aug 15 18:24:51 UTC 2025","Fri Aug 15 18:25:11 UTC 2025","20749","CLI Tests","CLI Storage","TestCLIStorage","","","Admin remove folder via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Create new folder via CLI.
Verify that:
    - User can remove folder via CLI.
"
"passed","Fri Aug 15 17:52:06 UTC 2025","Fri Aug 15 17:53:26 UTC 2025","79424","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Writer to Manager","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Writer role.
Verify that:
    - Admin can promote Writer to Manager
"
"passed","Fri Aug 15 18:50:22 UTC 2025","Fri Aug 15 18:50:47 UTC 2025","25101","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","User verifies admin get-projects command output via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Run 'apolo admin get-projects' command via CLI.
Verify that:
    - Valid project info is displayed in command output.
"
"passed","Fri Aug 15 18:53:50 UTC 2025","Fri Aug 15 18:54:05 UTC 2025","15586","CLI Tests","CLI Disks","TestCLIDisks","","","Admin create disk with no project created via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
Verify that:
    - User cannot create disk via CLI if there is no project created yet.
"
"passed","Fri Aug 15 17:53:33 UTC 2025","Fri Aug 15 17:54:31 UTC 2025","57949","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Writer to Admin","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Writer role.
Verify that:
    - Admin can promote Writer to Admin
"
"passed","Fri Aug 15 18:20:07 UTC 2025","Fri Aug 15 18:22:35 UTC 2025","147948","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager cannot demote Admin","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Admin role.
Verify that:
    - Manager cannot demote Admin to Manager
"
"passed","Fri Aug 15 18:26:47 UTC 2025","Fri Aug 15 18:27:39 UTC 2025","51441","CLI Tests","CLI Storage","TestCLIStorage","","","Admin download text file via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Upload text file via CLI.
Verify that:
    - User can download txt file via CLI.
    - downloaded txt file md5 hash matches expected file.
"
"passed","Fri Aug 15 17:43:54 UTC 2025","Fri Aug 15 17:45:08 UTC 2025","73507","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Reader to Manager","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
Verify that:
    - Admin can promote Reader to Manager
"
"passed","Fri Aug 15 18:18:05 UTC 2025","Fri Aug 15 18:20:00 UTC 2025","115153","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager cannot promote Writer to Admin","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Writer role.
Verify that:
    - Manager cannot promote Writer to Admin
"
"passed","Fri Aug 15 18:39:36 UTC 2025","Fri Aug 15 18:40:15 UTC 2025","39808","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Switch between organization via UI","
-Login with valid credentials.
-Create new organization via API.
-Create second organization via UI.
Verify that:
    User can switch between organizations.
"
"passed","Fri Aug 15 18:26:14 UTC 2025","Fri Aug 15 18:26:40 UTC 2025","25561","CLI Tests","CLI Storage","TestCLIStorage","","","Admin upload bin file via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
Verify that:
    - User can upload bin file via CLI.
"
"passed","Fri Aug 15 19:00:34 UTC 2025","Fri Aug 15 19:00:50 UTC 2025","16393","CLI Tests","CLI Secrets","TestCLISecrets","","","Admin create secret with no project created via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
Verify that:
    - User cannot create secret if there is no project created via CLI.
"
"passed","Fri Aug 15 17:59:26 UTC 2025","Fri Aug 15 18:00:17 UTC 2025","50995","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Writer to Manager in project via CLI",""
"passed","Fri Aug 15 18:23:17 UTC 2025","Fri Aug 15 18:23:36 UTC 2025","19733","CLI Tests","CLI Storage","TestCLIStorage","","","Admin create folder without project created via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
Verify that:
    - User cannot create folder if there is no project created yet via CLI.
"
"passed","Fri Aug 15 18:26:31 UTC 2025","Fri Aug 15 18:27:08 UTC 2025","37342","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Admin removes User from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with User role via CLI.
Verify that:
    - Admin can remove User from organization via CLI.
"
"passed","Fri Aug 15 18:30:53 UTC 2025","Fri Aug 15 18:32:07 UTC 2025","74044","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Manager removes Manager from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with Manager role via CLI.
-Add third user to organization with Manager role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager can remove Manager from organization via CLI.
"
"passed","Fri Aug 15 19:01:10 UTC 2025","Fri Aug 15 19:01:44 UTC 2025","34058","CLI Tests","CLI Login","TestCLILogin","","","User with organization and project logs in with auth token via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create organization via API.
-Create project via API.
Verify that:
    - User can login with Bearer auth token via CLI.
    - Login output in CLI contain valid organization and project.
"
"passed","Fri Aug 15 17:48:55 UTC 2025","Fri Aug 15 17:50:04 UTC 2025","69064","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Writer to Reader","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Writer role.
Verify that:
    - Admin can demote Writer to Reader
"
"passed","Fri Aug 15 18:21:25 UTC 2025","Fri Aug 15 18:23:07 UTC 2025","101446","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove Manager from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
Verify that:
    - Admin can remove Manager from project
"
"passed","Fri Aug 15 18:53:15 UTC 2025","Fri Aug 15 18:53:43 UTC 2025","28111","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","Add user not in organization to project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
Verify that:
    - User cannot add registered user not from organization to project via CLI.
"
"passed","Fri Aug 15 18:24:18 UTC 2025","Fri Aug 15 18:24:43 UTC 2025","25129","CLI Tests","CLI Storage","TestCLIStorage","","","Admin rename folder via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Create new folder via CLI.
Verify that:
    - User can rename folder via CLI.
"
"passed","Fri Aug 15 18:17:51 UTC 2025","Fri Aug 15 18:18:27 UTC 2025","35937","UI Tests","UI Files","TestUIFiles","","","User upload txt file","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
Verify that:
    - User can upload txt file via UI.
"
"passed","Fri Aug 15 18:59:30 UTC 2025","Fri Aug 15 19:00:32 UTC 2025","62154","UI Tests","UI Secrets","TestUISecrets","","","Search Secret via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create Secret.
Verify that:
    - User can Search for secret via UI.
"
"passed","Fri Aug 15 18:50:50 UTC 2025","Fri Aug 15 18:51:24 UTC 2025","33699","UI Tests","UI Disks","TestUIDisks","","","Create First Disk without project via UI","
-Login with valid credentials.
-Create new organization via API.
Verify that:
    - User cannot create first Disk if no project created yet.
"
"passed","Fri Aug 15 18:16:14 UTC 2025","Fri Aug 15 18:17:28 UTC 2025","73737","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Writer removes Reader from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add third user to organization via CLI.
-Add second user to project with Writer role via CLI.
-Add third user to project with Reader role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Writer cannot remove members from project via CLI.
"
"passed","Fri Aug 15 17:54:46 UTC 2025","Fri Aug 15 17:55:39 UTC 2025","53394","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Reader to Writer in project via CLI",""
"passed","Fri Aug 15 18:27:22 UTC 2025","Fri Aug 15 18:28:17 UTC 2025","54844","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Admin removes Manager from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with Manager role via CLI.
Verify that:
    - Admin can remove Manager from organization via CLI.
"
"passed","Fri Aug 15 18:56:02 UTC 2025","Fri Aug 15 18:56:27 UTC 2025","25433","CLI Tests","CLI Disks","TestCLIDisks","","","Admin remove disk via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Create new project via API.
-Login with Bearer auth token via CLI.
-Create first disk via CLI.
Verify that:
    - User can delete disk via CLI.
"
"passed","Fri Aug 15 18:02:35 UTC 2025","Fri Aug 15 18:03:39 UTC 2025","63643","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Manager to Writer in project via CLI",""
"passed","Fri Aug 15 17:44:21 UTC 2025","Fri Aug 15 17:45:00 UTC 2025","38983","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Reader to Admin in project via CLI",""
"passed","Fri Aug 15 18:50:06 UTC 2025","Fri Aug 15 18:52:15 UTC 2025","128925","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can invite Manager to a project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
Verify that:
    - Manager can invite third user as Manager to a project
"
"passed","Fri Aug 15 18:09:13 UTC 2025","Fri Aug 15 18:10:57 UTC 2025","104319","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can promote Reader to Manager","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Manager can promote Reader to Manager
"
"passed","Fri Aug 15 17:55:59 UTC 2025","Fri Aug 15 17:57:41 UTC 2025","102361","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Manager to Writer","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
Verify that:
    - Admin can demote Manager to Writer
"
"passed","Fri Aug 15 18:29:13 UTC 2025","Fri Aug 15 18:29:41 UTC 2025","28028","CLI Tests","CLI Storage","TestCLIStorage","","","Admin rename text file via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Upload text file via CLI.
Verify that:
    - User can rename txt file via CLI.
"
"passed","Fri Aug 15 17:53:24 UTC 2025","Fri Aug 15 17:54:05 UTC 2025","41150","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Admin to Manager in project via CLI",""
"passed","Fri Aug 15 18:53:23 UTC 2025","Fri Aug 15 18:54:03 UTC 2025","39663","UI Tests","UI Disks","TestUIDisks","","","Search Disk via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new Disk.
-Create second Disk.
Verify that:
    - User can search for Disk via Ui with the Search field.
"
"passed","Fri Aug 15 18:25:22 UTC 2025","Fri Aug 15 18:27:19 UTC 2025","116760","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager can remove Reader from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Manager can remove Reader from project
"
"passed","Fri Aug 15 18:14:41 UTC 2025","Fri Aug 15 18:15:34 UTC 2025","52935","UI Tests","UI Files","TestUIFiles","","","User rename Folder","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new folder.
Verify that:
    - User can rename a folder with Rename button from File action bar.
"
"passed","Fri Aug 15 19:02:46 UTC 2025","Fri Aug 15 19:03:04 UTC 2025","17923","UI Tests","UI Signup","TestUISignup","","","New user successful signup","
Verify that:
    New user can signup via UI.
"
"passed","Fri Aug 15 18:44:16 UTC 2025","Fri Aug 15 18:45:09 UTC 2025","53371","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Invite registered user without organization to organization via UI","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
Verify that:
    User can invite to organization another user that is registered but doesn't have an organization.
"
"passed","Fri Aug 15 18:10:14 UTC 2025","Fri Aug 15 18:11:22 UTC 2025","67945","UI Tests","UI Files","TestUIFiles","","","Verify Manager can create new folder","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
Verify that:
    - Manager can create new folder
"
"passed","Fri Aug 15 18:57:04 UTC 2025","Fri Aug 15 18:58:03 UTC 2025","59155","UI Tests","UI Organization Roles Access","TestUIOrganizationRolesAccess","","","Verify invited Manager can access organization settings","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
Verify that Manager:
    - Can access organization Settings.
"
"passed","Fri Aug 15 18:37:38 UTC 2025","Fri Aug 15 18:38:17 UTC 2025","38844","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","Set default user credits via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
-Set default user credits via CLI.
-Invite second user to organization via CLI.
-Second user login with Bearer auth token via CLI.
-Run 'apolo config show' command via CLI.
Verify that:
    - Valid user credits amount is displayed in command output.
"
"passed","Fri Aug 15 18:00:25 UTC 2025","Fri Aug 15 18:01:29 UTC 2025","63652","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Admin to Writer","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Admin role.
Verify that:
    - Admin can demote Admin to Writer
"
"passed","Fri Aug 15 18:52:37 UTC 2025","Fri Aug 15 18:53:17 UTC 2025","40013","UI Tests","UI Disks","TestUIDisks","","","Create Second Disk via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new Disk.
Verify that:
    - User can create second Disk.
"
"passed","Fri Aug 15 18:48:27 UTC 2025","Fri Aug 15 18:49:59 UTC 2025","91690","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can invite Writer to a project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
Verify that:
    - Manager can invite third user as Writer to a project
"
"passed","Fri Aug 15 18:07:46 UTC 2025","Fri Aug 15 18:08:43 UTC 2025","57393","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager cannot demote himself to User","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
Verify that:
    - Manager cannot demote himself to User.
"
"passed","Fri Aug 15 18:11:37 UTC 2025","Fri Aug 15 18:13:05 UTC 2025","88096","UI Tests","UI Files","TestUIFiles","","","Verify Admin can create new folder","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Admin role.
Verify that:
    - Admin can create new folder
"
"passed","Fri Aug 15 18:35:12 UTC 2025","Fri Aug 15 18:35:37 UTC 2025","24484","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","Invite user to org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
Verify that:
    - User can invite registered user to organization via CLI.
"
"passed","Fri Aug 15 18:08:13 UTC 2025","Fri Aug 15 18:08:43 UTC 2025","29611","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin removes Reader from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add second user to project with Reader role via CLI.
Verify that:
    - Admin can remove Reader from project via CLI.
"
"passed","Fri Aug 15 18:09:33 UTC 2025","Fri Aug 15 18:10:02 UTC 2025","29047","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin removes Manager from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add second user to project with Manager role via CLI.
Verify that:
    - Admin can remove Manager from project via CLI.
"
"passed","Fri Aug 15 18:07:26 UTC 2025","Fri Aug 15 18:09:06 UTC 2025","100228","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can promote Reader to Writer","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Reader role.
Verify that:
    - Manager can promote Reader to Writer
"
"passed","Fri Aug 15 19:00:39 UTC 2025","Fri Aug 15 19:01:31 UTC 2025","51430","UI Tests","UI Secrets","TestUISecrets","","","Delete Secret via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create Secret.
Verify that:
    - User can delete Secret.
"
"passed","Fri Aug 15 18:14:38 UTC 2025","Fri Aug 15 18:15:19 UTC 2025","40420","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager removes Admin from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add third user to organization via CLI.
-Add second user to project with Manager role via CLI.
-Add third user to project with Admin role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager cannot remove Admin from project via CLI.
"
"passed","Fri Aug 15 18:15:46 UTC 2025","Fri Aug 15 18:17:58 UTC 2025","131715","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can promote Writer to Manager","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Writer role.
Verify that:
    - Manager can promote Writer to Manager
"
"passed","Fri Aug 15 18:54:55 UTC 2025","Fri Aug 15 18:55:39 UTC 2025","43825","UI Tests","UI Disks","TestUIDisks","","","Delete Disk via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Create new Disk.
Verify that:
    - User can delete Disk.
"
"passed","Fri Aug 15 17:46:51 UTC 2025","Fri Aug 15 17:47:45 UTC 2025","54310","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Writer to Admin in project via CLI",""
"passed","Fri Aug 15 17:59:58 UTC 2025","Fri Aug 15 18:01:49 UTC 2025","111193","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager can change Manager role to User","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with Manager role via API.
Verify that:
    - Manager can change user role from Manager to User
    - User after changing role from Manager to User:
        - Cannot access organization Settings
        - Cannot access organization Billing
"
"passed","Fri Aug 15 18:16:43 UTC 2025","Fri Aug 15 18:17:42 UTC 2025","59216","UI Tests","UI Files","TestUIFiles","","","User upload bin file","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
Verify that:
    User can upload bin file via UI.
"
"skipped","Fri Aug 15 18:15:26 UTC 2025","Fri Aug 15 18:16:07 UTC 2025","40252","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager removes himself from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add second user to project with Manager role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager cannot remove himself from project via CLI.
"
"passed","Fri Aug 15 18:13:34 UTC 2025","Fri Aug 15 18:15:41 UTC 2025","126414","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can demote Writer to Reader","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
-Signup third user.
-Invite third user to organization via API.
-Invite third user to project with Writer role.
Verify that:
    - Manager can demote Writer to Reader
"
"passed","Fri Aug 15 18:04:40 UTC 2025","Fri Aug 15 18:05:34 UTC 2025","53870","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Admin to Reader in project via CLI",""
"passed","Fri Aug 15 17:57:25 UTC 2025","Fri Aug 15 17:58:20 UTC 2025","55490","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Reader to Admin in project via CLI",""
"passed","Fri Aug 15 18:45:00 UTC 2025","Fri Aug 15 18:46:12 UTC 2025","71908","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can modify files","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
Verify that:
    - Manager has access to modify Files
"
"passed","Fri Aug 15 19:02:43 UTC 2025","Fri Aug 15 19:04:26 UTC 2025","102787","UI Tests","UI Credits Purchase","TestUICreditsPurchase","","","Verify Manager can purchase organization credits with predefined value","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role.
Verify that:
    - Manager can purchase credits using predefined value(10, 100, 1000).
"
"passed","Fri Aug 15 18:54:45 UTC 2025","Fri Aug 15 18:55:22 UTC 2025","37596","CLI Tests","CLI Disks","TestCLIDisks","","","Admin create second disk via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Create new project via API.
-Login with Bearer auth token via CLI.
-Create first disk via CLI.
Verify that:
    - User can create second disk via CLI.
"
"passed","Fri Aug 15 17:43:28 UTC 2025","Fri Aug 15 17:44:13 UTC 2025","45314","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Reader to Manager in project via CLI",""
"passed","Fri Aug 15 18:37:27 UTC 2025","Fri Aug 15 18:38:24 UTC 2025","56958","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Admin can remove User from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with User role via API.
Verify that:
    - Admin can remove User from organization.
"
"passed","Fri Aug 15 18:55:29 UTC 2025","Fri Aug 15 18:55:55 UTC 2025","26296","CLI Tests","CLI Disks","TestCLIDisks","","","Admin get disk by ID via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Create new project via API.
-Login with Bearer auth token via CLI.
-Create first disk via CLI.
Verify that:
    - User can get disk info by disk ID via CLI.
"
"passed","Fri Aug 15 18:49:35 UTC 2025","Fri Aug 15 18:50:43 UTC 2025","67606","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Manager cannot remove himself from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
Verify that:
    - Manager cannot remove himself from organization
"
"passed","Fri Aug 15 17:47:33 UTC 2025","Fri Aug 15 17:48:48 UTC 2025","75368","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Reader to Admin","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
Verify that:
    - Admin can promote Reader to Admin
"
"passed","Fri Aug 15 18:36:27 UTC 2025","Fri Aug 15 18:37:54 UTC 2025","87376","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager cannot remove himself from project","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
Verify that:
    - Manager cannot remove himself from project
"
"passed","Fri Aug 15 18:34:28 UTC 2025","Fri Aug 15 18:35:04 UTC 2025","35295","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User switch organization via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
-Create second organization via CLI.
Verify that:
    - User can switch between organizations via CLI.
"
"passed","Fri Aug 15 19:00:23 UTC 2025","Fri Aug 15 19:00:29 UTC 2025","6175","CLI Tests","CLI Login","TestCLILogin","","","User without organization logs in with auth token via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
Verify that:
    - User can login with Bearer auth token via CLI.
    - Login output in CLI doesn't contain organization and project.
"
"passed","Fri Aug 15 18:33:10 UTC 2025","Fri Aug 15 18:33:49 UTC 2025","38782","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","User removes organization via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
-Create second organization via CLI.
Verify that:
    - User can remove organization via CLI.
"
"passed","Fri Aug 15 18:10:58 UTC 2025","Fri Aug 15 18:11:20 UTC 2025","21425","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin removes himself from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
Verify that:
    - Admin cannot remove himself from project via CLI.
"
"passed","Fri Aug 15 17:41:52 UTC 2025","Fri Aug 15 17:43:47 UTC 2025","115131","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Reader to Writer","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Reader role.
Verify that:
    - Admin can promote Reader to Writer
"
"passed","Fri Aug 15 18:01:37 UTC 2025","Fri Aug 15 18:03:19 UTC 2025","102182","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Admin to Manager","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Admin role.
Verify that:
    - Admin can demote Admin to Manager.
"
"passed","Fri Aug 15 18:48:06 UTC 2025","Fri Aug 15 18:49:43 UTC 2025","96601","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Invite user with organization to organization via UI","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Pass onboarding for second user and create organization via UI.
Verify that:
    - User can invite to organization another user that already has organization.'
"
"passed","Fri Aug 15 17:50:17 UTC 2025","Fri Aug 15 17:51:48 UTC 2025","91067","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change Admin role to User","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Admin role via API.
Verify that:
    - Admin can change user role from Admin to User
    - User after changing role from Admin to User:
        - Cannot access organization Settings
        - Cannot access organization Billing
"
"passed","Fri Aug 15 18:35:44 UTC 2025","Fri Aug 15 18:36:25 UTC 2025","40894","CLI Tests","CLI Organization Structure Setup","TestCLIOrganizationStructureSetup","","","Invite user to organization with default project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Signup second user via UI.
-Login with Bearer auth token via CLI.
-Create first organization via CLI.
-Create first project with 'default' option via CLI.
Verify that:
    - User can invite registered user to organization via CLI.
    - Newly invited user is member of default project.
"
"passed","Fri Aug 15 18:13:52 UTC 2025","Fri Aug 15 18:14:31 UTC 2025","39202","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager removes Manager from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add third user to organization via CLI.
-Add second user to project with Manager role via CLI.
-Add third user to project with Manager role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager can remove another Manager from project via CLI.
"
"passed","Fri Aug 15 18:11:27 UTC 2025","Fri Aug 15 18:12:47 UTC 2025","80219","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager removes Reader from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add third user to organization via CLI.
-Add second user to project with Manager role via CLI.
-Add third user to project with Reader role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager can remove Reader from project via CLI.
"
"passed","Fri Aug 15 18:45:44 UTC 2025","Fri Aug 15 18:47:39 UTC 2025","115090","UI Tests","UI Organization Remove Members","TestUIOrganizationRemoveMembers","","","Verify Manager can remove another Manager from organization","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with Manager role via API.
Verify that:
    - Manager can remove another Manager from organization.
"
"passed","Fri Aug 15 18:50:54 UTC 2025","Fri Aug 15 18:51:19 UTC 2025","25664","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","User creates a second project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create first project via CLI.
Verify that:
    - User can create second project via CLI.
"
"passed","Fri Aug 15 18:46:52 UTC 2025","Fri Aug 15 18:47:59 UTC 2025","67329","UI Tests","UI Organization Structure Setup","TestUIOrganizationStructureSetup","","","Invite registered user without organization to organization with default project via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project with 'default' option.
-Signup second user.
Verify that:
    - User can invite to organization another user that is registered but doesn't have organization.
    - Newly invited user is member of the default project.
"
"passed","Fri Aug 15 18:36:07 UTC 2025","Fri Aug 15 18:37:21 UTC 2025","73687","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","User removes User from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with User role via CLI.
-Add third user to organization with User role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - User cannot remove members from organization via CLI.
"
"passed","Fri Aug 15 18:17:37 UTC 2025","Fri Aug 15 18:18:27 UTC 2025","50500","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Reader removes Reader from project via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Create new project via CLI.
-Add second user to organization via CLI.
-Add third user to organization via CLI.
-Add second user to project with Reader role via CLI.
-Add third user to project with Reader role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Reader cannot remove members from project via CLI.
"
"passed","Fri Aug 15 18:05:42 UTC 2025","Fri Aug 15 18:06:50 UTC 2025","67923","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Writer change member role from Reader to Writer in project via CLI",""
"passed","Fri Aug 15 17:50:21 UTC 2025","Fri Aug 15 17:51:06 UTC 2025","45154","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Admin to Reader in project via CLI",""
"passed","Fri Aug 15 18:03:54 UTC 2025","Fri Aug 15 18:05:34 UTC 2025","100795","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Manager cannot change Admin role to User","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
-Signup third user.
-Invite third user to organization with Admin role via API.
Verify that:
    - Manager cannot change user role from Admin to User
"
"passed","Fri Aug 15 18:34:35 UTC 2025","Fri Aug 15 18:35:17 UTC 2025","42104","CLI Tests","CLI Organization Remove Members","TestCLIOrganizationRemoveMembers","","","Manager removes Admin from org via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Signup second user via UI.
-Signup third user via UI.
-Login with Bearer auth token via CLI.
-Add second user to organization with Manager role via CLI.
-Add third user to organization with Admin role via CLI.
-Second user login with Bearer auth token via CLI.
Verify that:
    - Manager cannot remove Admin from organization via CLI.
"
"passed","Fri Aug 15 17:57:47 UTC 2025","Fri Aug 15 17:58:55 UTC 2025","67863","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Manager to Admin","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup second user.
-Invite second user to organization via API.
-Invite second user to project with Manager role.
Verify that:
    - Admin can promote Manager to Admin
"
"passed","Fri Aug 15 18:00:25 UTC 2025","Fri Aug 15 18:01:13 UTC 2025","47453","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Manager change member role from Writer to Admin in project via CLI",""
"passed","Fri Aug 15 18:51:26 UTC 2025","Fri Aug 15 18:52:26 UTC 2025","59940","CLI Tests","CLI Project Structure Setup","TestCLIProjectStructureSetup","","","Switch between projects via CLI","
-Login with valid credentials via UI.
-Get Bearer auth token from Playwright local storage.
-Create new organization via API.
-Login with Bearer auth token via CLI.
-Create first project via CLI.
-Create second project via CLI.
Verify that:
    - User can switch between projects via CLI.
"
"passed","Fri Aug 15 17:42:25 UTC 2025","Fri Aug 15 17:43:21 UTC 2025","55269","CLI Tests","CLI Project Remove Members","TestCLIProjectStructureSetup","","","Admin change member role from Reader to Writer in project via CLI",""
"passed","Fri Aug 15 18:21:03 UTC 2025","Fri Aug 15 18:22:03 UTC 2025","59748","UI Tests","UI Files","TestUIFiles","","","User rename File","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Upload txt file.
Verify that:
    - User can rename a file with Rename button from File action bar.
"
"passed","Fri Aug 15 18:58:13 UTC 2025","Fri Aug 15 18:59:43 UTC 2025","90246","UI Tests","UI Project Structure Setup","TestUIProjectStructureSetup","","","Invite member that NOT in organization to project via UI","
-Login with valid credentials.
-Create new organization via API.
-Create new project.
-Signup new user.
-DO NOT invite second user to organization.
Verify that:
    User cannot invite to project another user which is not member of organization.
"
"passed","Fri Aug 15 18:57:14 UTC 2025","Fri Aug 15 18:57:47 UTC 2025","33033","UI Tests","UI Secrets","TestUISecrets","","","Create First Secret without project via UI","
-Login with valid credentials.
-Create new organization via API.
Verify that:
    - User cannot create first Secret if no project created yet
"
"passed","Fri Aug 15 17:49:03 UTC 2025","Fri Aug 15 17:50:11 UTC 2025","68493","UI Tests","UI Organization Change Member Roles","TestUIOrganizationChangeMemberRoles","","","Verify Admin can change Manager role to Admin","
-Login with valid credentials.
-Create new organization via API.
-Signup second user.
-Invite second user to organization with Manager role via API.
Verify that:
    - Admin can change user role from Manager to Admin
    - User after changing role from Manager to Admin:
        - Can access organization Settings
        - Can access organization Billing
"
