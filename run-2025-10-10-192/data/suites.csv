"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"failed","Fri Oct 10 19:25:37 UTC 2025","Fri Oct 10 19:26:31 UTC 2025","53772","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Import PostgreSQL app config via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Import PostgreSQL app config via UI.

### Verify that:

- Install required data is the same as in imported config.
"
"passed","Fri Oct 10 20:16:32 UTC 2025","Fri Oct 10 20:18:29 UTC 2025","117068","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Writer to Reader","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Writer` role.

### Verify that:

- `Admin` can demote `Writer` to `Reader`.
"
"passed","Fri Oct 10 22:04:24 UTC 2025","Fri Oct 10 22:06:22 UTC 2025","118516","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can invite Writer to a project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.

### Verify that:

- `Manager` can invite `third user` as `Writer` to a project.
"
"passed","Fri Oct 10 21:16:23 UTC 2025","Fri Oct 10 21:17:49 UTC 2025","86010","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove Manager from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.

### Verify that:

- `Admin` can remove `Manager` from project.
"
"passed","Fri Oct 10 21:18:27 UTC 2025","Fri Oct 10 21:20:08 UTC 2025","101265","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove another Admin from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Admin` role.

### Verify that:

- `Admin` can remove another `Admin` from project.
"
"passed","Fri Oct 10 19:31:39 UTC 2025","Fri Oct 10 19:31:45 UTC 2025","6728","E2E Tests","Shell App","TestE2EShellApp","","","Verify User can reach Shell app Details page from Installed Apps page","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.

### Verify that:

- `Shell app Details` page displayed.
"
"passed","Fri Oct 10 21:53:47 UTC 2025","Fri Oct 10 21:55:55 UTC 2025","128186","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Reader cannot remove members from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Reader` **cannot** remove members from project.
"
"passed","Fri Oct 10 20:12:59 UTC 2025","Fri Oct 10 20:14:23 UTC 2025","83476","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Reader to Manager","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.

### Verify that:

- `Admin` can promote `Reader` to `Manager`.
"
"passed","Fri Oct 10 19:40:38 UTC 2025","Fri Oct 10 19:41:15 UTC 2025","37245","UI Tests","UI Disks","TestUIDisks","","","Create First Disk without project via UI","
- Login with valid credentials.
- Create new organization via **API**.

### Verify that:

- User **cannot** create first Disk if **no project created** yet.
"
"passed","Fri Oct 10 20:05:35 UTC 2025","Fri Oct 10 20:06:21 UTC 2025","46169","UI Tests","UI Files","TestUIFiles","","","User download bin file","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Upload `bin` file.

### Verify that:

- User can download `bin` file via UI.
- Downloaded `bin` file md5 hash matches expected file.
"
"passed","Fri Oct 10 20:20:39 UTC 2025","Fri Oct 10 20:22:28 UTC 2025","108881","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Writer to Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Writer` role.

### Verify that:

- `Admin` can promote `Writer` to `Admin`.
"
"passed","Fri Oct 10 20:09:37 UTC 2025","Fri Oct 10 20:10:40 UTC 2025","63146","UI Tests","UI Files","TestUIFiles","","","User delete File","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Upload `txt` file.

### Verify that:

- User can delete a file with Delete button from File action bar.
"
"passed","Fri Oct 10 20:03:14 UTC 2025","Fri Oct 10 20:04:05 UTC 2025","50411","UI Tests","UI Files","TestUIFiles","","","User upload txt file","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.

### Verify that:

- User can upload `txt` file via UI.
"
"passed","Fri Oct 10 19:18:12 UTC 2025","Fri Oct 10 19:18:21 UTC 2025","9335","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify app output user data schemas is valid via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.
- Scroll to `Output` section.

### Verify that:
- User data sections data matching expected data format.
"
"passed","Fri Oct 10 20:31:00 UTC 2025","Fri Oct 10 20:32:28 UTC 2025","87925","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Admin to Reader","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Admin` role.

### Verify that:

- `Admin` can demote `Admin` to `Reader`.
"
"passed","Fri Oct 10 21:32:42 UTC 2025","Fri Oct 10 21:35:13 UTC 2025","151512","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager can remove Writer from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Writer` role.

### Verify that:

- `Manager` can remove `Writer` from project.
"
"passed","Fri Oct 10 19:35:29 UTC 2025","Fri Oct 10 19:36:25 UTC 2025","56454","E2E Tests","Shell App","TestE2EShellApp","","","Export Shell app config via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Select `cpu-medium` Resource Preset.
- Set app Display name.
- Click `Export config` button.

### Verify that:

- Config downloaded as `yaml` file matches expected schema.
- Exported config contains valid data.
"
"passed","Fri Oct 10 22:06:31 UTC 2025","Fri Oct 10 22:08:59 UTC 2025","147806","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can invite Manager to a project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.

### Verify that:

- Manager can invite `third user` as `Manager` to a project.
"
"passed","Fri Oct 10 19:24:30 UTC 2025","Fri Oct 10 19:25:34 UTC 2025","64475","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Export PostgreSQL app config via UI","
 Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Select the Preset `cpu-medium`
- Set PGbouncer.replicas to `1`
- Set Postgres Configuration.Instance replicas to `1`
- Click on Database Users `Add Entry`
- Enter Database `user name`
- Enter Database `name`
- Select PG Bouncer.Resource Preset `cpu-medium`
- Click `Export config` button.

### Verify that:

- Config downloaded as `yaml` file matches expected schema.
- Exported config contains valid data.
"
"passed","Fri Oct 10 19:34:39 UTC 2025","Fri Oct 10 19:34:53 UTC 2025","13994","E2E Tests","Shell App","TestE2EShellApp","","","Enter command in Shell app via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.
- Get `external https` endpoint.
- Launch Shell app.
- Execute `apolo config show` command.

### Verify that Shell app output contains:

- executed command `apolo config show`.
- `User configuration` section.
- `Resource Preset` section.
"
"passed","Fri Oct 10 20:45:54 UTC 2025","Fri Oct 10 20:48:16 UTC 2025","141375","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager cannot promote Reader to Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Manager` **cannot** promote `Reader` to `Admins`.
"
"passed","Fri Oct 10 19:31:48 UTC 2025","Fri Oct 10 19:32:34 UTC 2025","45928","E2E Tests","Shell App","TestE2EShellApp","","","Verify installed Shell app info displayed on the app container via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.

### Verify that:

- Label `Installed` is displayed on the Shell app container.
- `Show All` button displayed on the Shell app container.
"
"passed","Fri Oct 10 19:23:26 UTC 2025","Fri Oct 10 19:24:27 UTC 2025","61249","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify User can uninstall app via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Click `Installed Apps` button.
- Click `Details` button on installed app container.
- Click `Uninstall` button.

### Verify that:

- PostgreSQL app uninstalled.
"
"passed","Fri Oct 10 19:32:37 UTC 2025","Fri Oct 10 19:33:29 UTC 2025","52631","E2E Tests","Shell App","TestE2EShellApp","","","Verify User can reach Installed apps page from app container via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click `Show All` button on Shell App container.

### Verify that:

- Shell app displayed in Installed Apps.
"
"passed","Fri Oct 10 19:31:21 UTC 2025","Fri Oct 10 19:31:27 UTC 2025","5411","E2E Tests","Shell App","TestE2EShellApp","","","Verify event list of installed Shell app via API","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- GET '/events' endpoint.

### Verify that:

- App events list contains states queued, progressing and healthy.
"
"passed","Fri Oct 10 21:56:04 UTC 2025","Fri Oct 10 21:57:52 UTC 2025","107429","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Reader cannot modify files","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.

### Verify that:

- `Reader` **doesn't** have access to modify Files.
"
"passed","Fri Oct 10 19:41:22 UTC 2025","Fri Oct 10 19:42:37 UTC 2025","75684","UI Tests","UI Disks","TestUIDisks","","","Create First Disk via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.

### Verify that:

- User can create first Disk after project created.
"
"passed","Fri Oct 10 19:46:04 UTC 2025","Fri Oct 10 19:47:03 UTC 2025","58480","UI Tests","UI Disks","TestUIDisks","","","Delete Disk via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Create new Disk.

### Verify that:

- User can delete Disk.
"
"passed","Fri Oct 10 20:27:29 UTC 2025","Fri Oct 10 20:29:21 UTC 2025","112030","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Manager to Writer","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.

### Verify that:

- `Admin` can demote `Manager` to `Writer`.
"
"passed","Fri Oct 10 19:15:58 UTC 2025","Fri Oct 10 19:16:45 UTC 2025","47068","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify installed PostgreSQL app info displayed on the app container via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.

### Verify that:

- Label `Installed` is displayed on the PostgreSQL app container.
- `Show All` button displayed on the PostgreSQL app container.
"
"passed","Fri Oct 10 20:06:59 UTC 2025","Fri Oct 10 20:07:53 UTC 2025","53870","UI Tests","UI Files","TestUIFiles","","","User download txt file","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Upload `txt` file.

### Verify that:

- User can download `txt` file via UI.
- Downloaded `txt` file md5 hash matches expected file.
"
"passed","Fri Oct 10 19:15:49 UTC 2025","Fri Oct 10 19:15:55 UTC 2025","6497","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify User can reach PostgreSQL app Details page from Installed Apps page","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.

### Verify that:

- `PostgreSQL app Details` page displayed.
"
"passed","Fri Oct 10 21:07:30 UTC 2025","Fri Oct 10 21:09:34 UTC 2025","123401","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Writer cannot change member roles","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Writer` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Writer` **cannot** change member roles.
"
"passed","Fri Oct 10 20:02:22 UTC 2025","Fri Oct 10 20:03:07 UTC 2025","44439","UI Tests","UI Files","TestUIFiles","","","User upload bin file","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.

### Verify that:

- User can upload `bin` file via UI.
"
"passed","Fri Oct 10 21:12:01 UTC 2025","Fri Oct 10 21:14:06 UTC 2025","124783","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove Reader from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.

### Verify that:

- `Admin` can remove `Reader` from `project`.
"
"passed","Fri Oct 10 19:42:44 UTC 2025","Fri Oct 10 19:43:35 UTC 2025","50880","UI Tests","UI Disks","TestUIDisks","","","Create Second Disk via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Create new Disk.

### Verify that:

- User can create second Disk.
"
"passed","Fri Oct 10 21:26:24 UTC 2025","Fri Oct 10 21:28:47 UTC 2025","143066","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager can remove Reader from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Manager` can remove `Reader` from project.
"
"passed","Fri Oct 10 19:56:32 UTC 2025","Fri Oct 10 19:57:13 UTC 2025","40710","UI Tests","UI Files","TestUIFiles","","","User make single click on Folder","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Create new folder.
- Single click on folder.

### Verify that:

- Folder info section appears.
- Folder action bar appears.
"
"passed","Fri Oct 10 20:15:01 UTC 2025","Fri Oct 10 20:16:25 UTC 2025","84216","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Reader to Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.

### Verify that:

- `Admin` can promote `Reader` to `Admin`.
"
"passed","Fri Oct 10 19:58:43 UTC 2025","Fri Oct 10 20:00:06 UTC 2025","82449","UI Tests","UI Files","TestUIFiles","","","User rename Folder","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Create new folder.

### Verify that:

- User can rename a folder with `Rename` button from File action bar.
"
"passed","Fri Oct 10 22:17:31 UTC 2025","Fri Oct 10 22:18:24 UTC 2025","52993","UI Tests","UI Secrets","TestUISecrets","","","Delete Secret via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Create Secret.

### Verify that:

- User can delete Secret.
"
"failed","Fri Oct 10 19:15:32 UTC 2025","Fri Oct 10 19:15:37 UTC 2025","5003","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify event list of installed PostgreSQL app via API","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- GET '/events' endpoint.

### Verify that:

- App events list contains states queued, progressing and healthy.
"
"passed","Fri Oct 10 19:34:13 UTC 2025","Fri Oct 10 19:34:18 UTC 2025","4913","E2E Tests","Shell App","TestE2EShellApp","","","Verify app output contains required endpoints via API","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.

### Verify that `output` API response contains required endpoints:

- Http internal API
- Https external API
"
"passed","Fri Oct 10 21:58:29 UTC 2025","Fri Oct 10 22:00:11 UTC 2025","102624","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Writer can modify files","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Writer` role.

### Verify that:

- `Writer` has access to modify Files.
"
"passed","Fri Oct 10 21:46:12 UTC 2025","Fri Oct 10 21:48:37 UTC 2025","145435","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager cannot remove Admin from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Admin` role.

### Verify that:

- `Manager` **cannot** remove `Admin` from project.
"
"passed","Fri Oct 10 20:08:31 UTC 2025","Fri Oct 10 20:09:30 UTC 2025","58813","UI Tests","UI Files","TestUIFiles","","","User rename File","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Upload txt file.

### Verify that:

- User can rename a file with `Rename` button from File action bar.
"
"passed","Fri Oct 10 20:29:34 UTC 2025","Fri Oct 10 20:30:52 UTC 2025","77941","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Manager to Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.

### Verify that:

- `Admin` can promote `Manager` to `Admin`.
"
"passed","Fri Oct 10 20:55:41 UTC 2025","Fri Oct 10 20:58:24 UTC 2025","163674","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can promote Writer to Manager","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Writer` role.

### Verify that:

- `Manager` can promote `Writer` to `Manager`.
"
"passed","Fri Oct 10 19:53:57 UTC 2025","Fri Oct 10 19:55:54 UTC 2025","116575","UI Tests","UI Files","TestUIFiles","","","Verify Admin can create new folder","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Admin` role.

### Verify that:

- `Admin` can create new folder
"
"passed","Fri Oct 10 19:12:36 UTC 2025","Fri Oct 10 19:15:29 UTC 2025","172618","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Install PostgreSQL app via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Select the Preset `cpu-medium`
- Set PGbouncer.replicas to `1`
- Set Postgres Configuration.Instance replicas to `1`
- Click on Database Users `Add Entry`
- Enter Database `user name`
- Enter Database `name`
- Select PG Bouncer.Resource Preset `cpu-medium`

### Verify that:

- User can install `PostgreSQL` app via **UI**.
"
"passed","Fri Oct 10 19:18:01 UTC 2025","Fri Oct 10 19:18:09 UTC 2025","8213","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify app output contains required users data via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.
- Scroll to `Output` section.

### Verify that `Output` section contains:
- Postgres User data
- Postgres Admin data
"
"passed","Fri Oct 10 19:43:42 UTC 2025","Fri Oct 10 19:44:38 UTC 2025","55853","UI Tests","UI Disks","TestUIDisks","","","Search Disk via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Create new Disk.
- Create second Disk.

### Verify that:

- User can search for Disk via UI with the `Search` field.
"
"passed","Fri Oct 10 19:34:28 UTC 2025","Fri Oct 10 19:34:37 UTC 2025","8327","E2E Tests","Shell App","TestE2EShellApp","","","Open Shell application via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.
- Get `external https` endpoint.

### Verify that:

- Shell app can be launched via UI.
"
"passed","Fri Oct 10 19:34:20 UTC 2025","Fri Oct 10 19:34:26 UTC 2025","5274","E2E Tests","Shell App","TestE2EShellApp","","","Verify app output endpoints schema via API","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.

### Verify that:

- API endpoints data matching expected json schema.
"
"passed","Fri Oct 10 19:57:20 UTC 2025","Fri Oct 10 19:58:06 UTC 2025","45683","UI Tests","UI Files","TestUIFiles","","","User make double click on Folder","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Create new folder.

### Verify that:

- User opens a folder with a double click on it.
"
"passed","Fri Oct 10 21:49:15 UTC 2025","Fri Oct 10 21:50:27 UTC 2025","72297","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager cannot remove himself from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.

### Verify that:

- `Manager` **cannot** remove himself from project.
"
"passed","Fri Oct 10 19:34:56 UTC 2025","Fri Oct 10 19:35:26 UTC 2025","29786","E2E Tests","Shell App","TestE2EShellApp","","","Verify User can uninstall app via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click `Installed Apps` button.
- Click `Details` button on installed app container.
- Click `Uninstall` button.

### Verify that:

- Shell app uninstalled.
"
"passed","Fri Oct 10 19:15:40 UTC 2025","Fri Oct 10 19:15:46 UTC 2025","6358","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify installed PostgreSQL app listed in Installed apps via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.

### Verify that:

- PostgreSQL app displayed in Installed Apps.
"
"passed","Fri Oct 10 22:12:24 UTC 2025","Fri Oct 10 22:13:45 UTC 2025","80788","UI Tests","UI Secrets","TestUISecrets","","","Create First Secret via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.

### Verify that:

- User can create first Secret after project created.
"
"broken","Fri Oct 10 20:41:06 UTC 2025","Fri Oct 10 20:41:06 UTC 2025","0","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can promote Reader to Writer","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Manager` can promote `Reader` to `Writer`.
"
"passed","Fri Oct 10 22:00:19 UTC 2025","Fri Oct 10 22:01:40 UTC 2025","81786","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can modify files","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.

### Verify that:

- `Manager` has access to modify Files.
"
"passed","Fri Oct 10 22:14:23 UTC 2025","Fri Oct 10 22:15:27 UTC 2025","64567","UI Tests","UI Secrets","TestUISecrets","","","Create Second Secret via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Create Secret.

### Verify that:

- User can create second Secret.
"
"passed","Fri Oct 10 20:35:01 UTC 2025","Fri Oct 10 20:37:04 UTC 2025","123122","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Admin to Manager","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Admin` role.

### Verify that:

- `Admin` can demote `Admin` to `Manager`.
"
"passed","Fri Oct 10 19:33:52 UTC 2025","Fri Oct 10 19:33:59 UTC 2025","7793","E2E Tests","Shell App","TestE2EShellApp","","","Verify app output contains required endpoints via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.
- Scroll to `Output` section.

### Verify that `Output` section contains:
- Http internal API
- Https external API
"
"passed","Fri Oct 10 20:00:44 UTC 2025","Fri Oct 10 20:01:45 UTC 2025","61381","UI Tests","UI Files","TestUIFiles","","","User delete Folder","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Create new folder.

### Verify that:

- User can delete a folder with `Delete` button from File action bar.
"
"passed","Fri Oct 10 22:09:06 UTC 2025","Fri Oct 10 22:11:23 UTC 2025","137166","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager cannot invite Admin to a project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.

### Verify that:

- `Manager` **cannot** invite `third user` as `Admin` to a project.
"
"passed","Fri Oct 10 19:33:32 UTC 2025","Fri Oct 10 19:33:41 UTC 2025","8564","E2E Tests","Shell App","TestE2EShellApp","","","Verify Installed apps details info via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click `Installed Apps` button.
- Click `Details` button on installed app container.

### Verify that:

- Shell app Details info is valid.
"
"passed","Fri Oct 10 20:10:47 UTC 2025","Fri Oct 10 20:12:21 UTC 2025","93995","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Reader to Writer","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.

### Verify that:

- `Admin` can promote Reader to `Writer`.
"
"passed","Fri Oct 10 22:15:36 UTC 2025","Fri Oct 10 22:17:23 UTC 2025","107039","UI Tests","UI Secrets","TestUISecrets","","","Search Secret via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Create Secret.

### Verify that:

- User can Search for secret via UI.
"
"passed","Fri Oct 10 21:09:42 UTC 2025","Fri Oct 10 21:11:52 UTC 2025","130670","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Reader cannot change member roles","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Reader` **cannot** change member roles.
"
"passed","Fri Oct 10 21:20:46 UTC 2025","Fri Oct 10 21:21:51 UTC 2025","65140","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin cannot remove himself from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.

### Verify that:

- `Admin` **cannot** remove himself from project.
"
"passed","Fri Oct 10 19:44:45 UTC 2025","Fri Oct 10 19:45:27 UTC 2025","41340","UI Tests","UI Disks","TestUIDisks","","","Open Disk info view by click on disk button","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Create new Disk.

### Verify that:

- After click on disk button Disk info view appears.
"
"passed","Fri Oct 10 21:04:23 UTC 2025","Fri Oct 10 21:07:21 UTC 2025","178422","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager cannot demote Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Admin` role.

### Verify that:

- `Manager` **cannot** demote `Admin` to `Manager`.
"
"passed","Fri Oct 10 21:51:05 UTC 2025","Fri Oct 10 21:53:09 UTC 2025","124358","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Writer cannot remove members from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Reader` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Writer` **cannot** remove members from project.
"
"passed","Fri Oct 10 21:14:13 UTC 2025","Fri Oct 10 21:16:14 UTC 2025","120576","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Admin can remove Writer from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Writer` role.

### Verify that:

- `Admin` can remove `Writer` from project.
"
"passed","Fri Oct 10 20:52:39 UTC 2025","Fri Oct 10 20:55:32 UTC 2025","173439","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can demote Writer to Reader","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Writer` role.

### Verify that:

- `Manager` can demote `Writer` to `Reader`.
"
"passed","Fri Oct 10 19:49:52 UTC 2025","Fri Oct 10 19:51:54 UTC 2025","122589","UI Tests","UI Files","TestUIFiles","","","Verify Manager can create new folder","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.

### Verify that:

- `Manager` can create new folder.
"
"passed","Fri Oct 10 19:16:47 UTC 2025","Fri Oct 10 19:17:40 UTC 2025","52534","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify User can reach Installed apps page from app container via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Click `Show All` button on PostgreSQL App container.

### Verify that:

- PostgreSQL app displayed in Installed Apps.
"
"passed","Fri Oct 10 19:18:39 UTC 2025","Fri Oct 10 19:23:01 UTC 2025","261860","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify PostgreSQL client installation in Shell app via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Install Shell app.
- Open Shell app.
- Install `postgresql-client` in Shell app.

### Verify that:

- `postgresql-client` packet is installed successfully.
"
"passed","Fri Oct 10 20:23:06 UTC 2025","Fri Oct 10 20:25:12 UTC 2025","125635","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Manager to Reader","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.

### Verify that:

- `Admin` can demote `Manager` to `Reader`.
"
"passed","Fri Oct 10 19:17:52 UTC 2025","Fri Oct 10 19:17:58 UTC 2025","5471","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify Installed apps details info via API","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Call `instances` API.

### Verify that:

- API response contains valid data.
"
"passed","Fri Oct 10 20:42:41 UTC 2025","Fri Oct 10 20:44:58 UTC 2025","136717","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager can promote Reader to Manager","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Reader` role.

### Verify that:

- `Manager` can promote `Reader` to `Manager`.
"
"passed","Fri Oct 10 20:58:33 UTC 2025","Fri Oct 10 21:00:56 UTC 2025","142632","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Manager cannot promote Writer to Admin","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Writer` role.

### Verify that:

- `Manager` **cannot** promote `Writer` to `Admin`.
"
"passed","Fri Oct 10 19:34:02 UTC 2025","Fri Oct 10 19:34:10 UTC 2025","8113","E2E Tests","Shell App","TestE2EShellApp","","","Verify app output API schemas is valid via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.
- Click `Details` button on installed app container.
- Scroll to `Output` section.

### Verify that:
- API sections data matching expected data format.
"
"passed","Fri Oct 10 20:33:06 UTC 2025","Fri Oct 10 20:34:24 UTC 2025","78034","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can demote Admin to Writer","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Admin` role.

### Verify that:

- `Admin` can demote `Admin` to `Writer`.
"
"passed","Fri Oct 10 22:11:34 UTC 2025","Fri Oct 10 22:12:16 UTC 2025","42572","UI Tests","UI Secrets","TestUISecrets","","","Create First Secret without project via UI","
- Login with valid credentials.
- Create new organization via **API**.

### Verify that:

- User **cannot** create first Secret if **no project created** yet.
"
"passed","Fri Oct 10 19:18:31 UTC 2025","Fri Oct 10 19:18:36 UTC 2025","4969","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify app output endpoints schema via API","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.

### Verify that:

- API endpoints data matching expected json schema.
"
"passed","Fri Oct 10 19:28:37 UTC 2025","Fri Oct 10 19:31:19 UTC 2025","161601","E2E Tests","Shell App","TestE2EShellApp","","","Install Shell app via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.

### Verify that:

- User can install `Shell` app via **UI**.
"
"passed","Fri Oct 10 22:01:47 UTC 2025","Fri Oct 10 22:04:16 UTC 2025","148717","UI Tests","UI Project Roles Access","TestUIProjectRolesAccess","","","Verify Manager can invite Reader to a project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.

### Verify that:

- `Manager` can invite `third user` as `Reader` to a project.
"
"passed","Fri Oct 10 19:31:30 UTC 2025","Fri Oct 10 19:31:36 UTC 2025","6246","E2E Tests","Shell App","TestE2EShellApp","","","Verify installed Shell app listed in Installed apps via UI","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Click Installed Apps.

### Verify that:

- Shell app displayed in Installed Apps.
"
"passed","Fri Oct 10 19:17:43 UTC 2025","Fri Oct 10 19:17:50 UTC 2025","6881","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify PostgreSQL app details info via UI","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Click `Installed Apps` button.
- Click `Details` button on installed app container.

### Verify that:

- PostgreSQL app Details info is valid.
"
"passed","Fri Oct 10 19:47:39 UTC 2025","Fri Oct 10 19:49:15 UTC 2025","95458","UI Tests","UI Files","TestUIFiles","","","Verify Writer can create new folder","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Writer` role.

### Verify that:

- `Writer` can create new folder.
"
"passed","Fri Oct 10 20:19:07 UTC 2025","Fri Oct 10 20:20:32 UTC 2025","84975","UI Tests","UI Project Change Member Roles","TestUIProjectChangeMemberRoles","","","Verify Admin can promote Writer to Manager","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Writer` role.

### Verify that:

- `Admin` can promote `Writer` to `Manager`.
"
"passed","Fri Oct 10 19:23:04 UTC 2025","Fri Oct 10 19:23:23 UTC 2025","19469","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify PostgreSQL client connection in Shell app via UI","
### Pre-conditions:
- PostgreSQL app installed.
- Shell app installed.

### Steps:
- Login with valid credentials.
- Get Postgres Users.Postgres User Credentials[0].Uri from `output` API.
- Open Shell app.
- Run `psql {URI}` command in Shell app.

### Verify that:

- psql connection is successful.
"
"passed","Fri Oct 10 19:18:24 UTC 2025","Fri Oct 10 19:18:29 UTC 2025","4995","E2E Tests","PostgreSQL App","TestE2EPostgresApp","","","Verify app output contains required endpoints via API","
### Pre-conditions:
- PostgreSQL app installed.

### Steps:
- Login with valid credentials.
- Call `output` API.

### Verify that `output` API response contains required endpoints:

- Postgres User data
- Postgres Admin data
"
"failed","Fri Oct 10 19:36:28 UTC 2025","Fri Oct 10 19:37:21 UTC 2025","52916","E2E Tests","Shell App","TestE2EShellApp","","","Import Shell app config via UI","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Import Shell app config via UI.

### Verify that:

- Install required data is the same as in imported config.
"
"passed","Fri Oct 10 19:33:43 UTC 2025","Fri Oct 10 19:33:49 UTC 2025","5790","E2E Tests","Shell App","TestE2EShellApp","","","Verify Installed apps details info via API","
### Pre-conditions:
- Shell app installed.

### Steps:
- Login with valid credentials.
- Call `instances` API.

### Verify that:

- API response contains valid data.
"
"passed","Fri Oct 10 20:04:13 UTC 2025","Fri Oct 10 20:05:29 UTC 2025","75940","UI Tests","UI Files","TestUIFiles","","","User make single click on File","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Upload `txt` file.
- Single click on file.

### Verify that:
- File info section appears.
- File action bar appears.
"
"passed","Fri Oct 10 21:39:52 UTC 2025","Fri Oct 10 21:42:17 UTC 2025","145481","UI Tests","UI Project Remove Members","TestUIProjectRemoveMembers","","","Verify Manager can remove another Manager from project","
- Login with valid credentials.
- Create new organization via **API**.
- Create new project via **API**.
- Signup `second user`.
- Invite `second user` to organization via **API**.
- Invite `second user` to project with `Manager` role.
- Signup `third user`.
- Invite `third user` to organization via **API**.
- Invite `third user` to project with `Manager` role.

### Verify that:

- `Manager` can remove another `Manager` from project.
"
