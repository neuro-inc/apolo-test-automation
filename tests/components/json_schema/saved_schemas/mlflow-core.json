{
  "name": "mlflow-core",
  "title": "MLFlow Core",
  "pub_date": "2025-04-15T00:00:00Z",
  "description": "MLflow Tracking is a component of MLflow that logs and queries experiments. It provides a simple API and UI for logging parameters, code versions, metrics, and artifacts when running your machine learning code, and for later visualizing the results.",
  "short_description": "Use MLFlow platform for managing the ML projects lifecycle.",
  "schema_version": 1,
  "version": "master",
  "input": {
    "$defs": {
      "ApoloFilesPath": {
        "properties": {
          "path": {
            "title": "Path",
            "type": "string",
            "x-description": "Provide the Apolo Storage path starting with `storage:` to locate your files.",
            "x-is-advanced-field": false,
            "x-meta-type": "inline",
            "x-title": "Storage Path"
          }
        },
        "required": [
          "path"
        ],
        "title": "ApoloFilesPath",
        "type": "object",
        "x-description": "Specify the path within the Apolo Files application to read from or write to.",
        "x-is-advanced-field": false,
        "x-meta-type": "inline",
        "x-title": "Apolo Files Path"
      },
      "IngressHttp": {
        "properties": {
          "auth": {
            "default": true,
            "title": "Auth",
            "type": "boolean",
            "x-description": "Require authenticated user credentials with appropriate permissions for all incoming HTTPS requests to the application.",
            "x-is-advanced-field": false,
            "x-meta-type": "inline",
            "x-title": "Enable Authentication and Authorization"
          }
        },
        "title": "IngressHttp",
        "type": "object",
        "x-description": "Enable access to your application over the internet using HTTPS.",
        "x-is-advanced-field": false,
        "x-meta-type": "inline",
        "x-title": "Enable HTTP Ingress"
      },
      "MLFlowMetadataPostgres": {
        "properties": {
          "postgres_uri": {
            "$ref": "#/$defs/PostgresURI"
          }
        },
        "required": [
          "postgres_uri"
        ],
        "title": "MLFlowMetadataPostgres",
        "type": "object",
        "x-description": "Use PostgreSQL server as metadata storage for MLFlow.",
        "x-is-advanced-field": false,
        "x-meta-type": "inline",
        "x-title": "Postgres"
      },
      "MLFlowMetadataSQLite": {
        "properties": {
          "pvc_name": {
            "default": "mlflow-sqlite-storage",
            "title": "Pvc Name",
            "type": "string",
            "x-description": "Specify the name of the PVC claim to store local DB.",
            "x-is-advanced-field": false,
            "x-meta-type": "inline",
            "x-title": "PVC Name"
          }
        },
        "title": "MLFlowMetadataSQLite",
        "type": "object",
        "x-description": "Use SQLite on a dedicated block device as metadata store for MLFlow.",
        "x-is-advanced-field": false,
        "x-meta-type": "inline",
        "x-title": "SQLite"
      },
      "PostgresURI": {
        "description": "Configuration for the Postgres connection URI.",
        "properties": {
          "uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Uri",
            "x-description": "Specify full Postgres connection URI. E.g. 'postgresql://user:pass@host:5432/db'",
            "x-is-advanced-field": false,
            "x-meta-type": "inline",
            "x-title": "URI"
          }
        },
        "title": "PostgresURI",
        "type": "object",
        "x-description": "Full Postgres connection URI configuration.",
        "x-is-advanced-field": false,
        "x-meta-type": "inline",
        "x-title": "Postgres URI"
      },
      "Preset": {
        "properties": {
          "name": {
            "description": "The name of the preset.",
            "title": "Preset name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "Preset",
        "type": "object",
        "x-description": "Select the resource preset used per service replica.",
        "x-is-advanced-field": false,
        "x-meta-type": "integration",
        "x-title": "Resource Preset"
      }
    },
    "description": "The overall MLFlow app config, referencing:\n  - 'preset' for CPU/GPU resources\n  - 'ingress' for external URL\n  - 'mlflow_specific' for MLFlow settings",
    "properties": {
      "preset": {
        "$ref": "#/$defs/Preset"
      },
      "ingress_http": {
        "$ref": "#/$defs/IngressHttp"
      },
      "metadata_storage": {
        "anyOf": [
          {
            "$ref": "#/$defs/MLFlowMetadataSQLite"
          },
          {
            "$ref": "#/$defs/MLFlowMetadataPostgres"
          }
        ],
        "title": "Metadata Storage"
      },
      "artifact_store": {
        "$ref": "#/$defs/ApoloFilesPath",
        "default": {
          "path": "storage:mlflow-artifacts"
        },
        "x-description": "Use Apolo Files to store your MLFlow artifacts (model binaries, dependency files, etc). E.g. 'storage://cluster/myorg/proj/mlflow-artifacts'or relative path E.g. 'storage:mlflow-artifacts'",
        "x-title": "Artifact Store"
      }
    },
    "required": [
      "preset",
      "ingress_http",
      "metadata_storage"
    ],
    "title": "MLFlowAppInputs",
    "type": "object"
  },
  "output": {
    "$defs": {
      "RestAPI": {
        "properties": {
          "host": {
            "title": "Host",
            "type": "string",
            "x-description": "The hostname of the HTTP endpoint.",
            "x-is-advanced-field": false,
            "x-meta-type": "inline",
            "x-title": "Hostname"
          },
          "port": {
            "default": 80,
            "title": "Port",
            "type": "integer",
            "x-description": "The port of the HTTP endpoint.",
            "x-is-advanced-field": false,
            "x-meta-type": "inline",
            "x-title": "Port"
          },
          "protocol": {
            "default": "http",
            "title": "Protocol",
            "type": "string",
            "x-description": "The protocol to use, e.g., http or https.",
            "x-is-advanced-field": false,
            "x-meta-type": "inline",
            "x-title": "Protocol"
          },
          "timeout": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "default": 30.0,
            "title": "Timeout",
            "x-description": "Connection timeout in seconds.",
            "x-is-advanced-field": false,
            "x-meta-type": "inline",
            "x-title": "Connection Timeout"
          },
          "base_path": {
            "default": "/",
            "title": "Base Path",
            "type": "string"
          },
          "api_type": {
            "const": "rest",
            "default": "rest",
            "title": "Api Type",
            "type": "string"
          }
        },
        "required": [
          "host"
        ],
        "title": "RestAPI",
        "type": "object",
        "x-description": "HTTP API Configuration.",
        "x-is-advanced-field": false,
        "x-meta-type": "integration",
        "x-title": "HTTP API"
      }
    },
    "properties": {
      "internal_web_app_url": {
        "anyOf": [
          {
            "$ref": "#/$defs/RestAPI"
          },
          {
            "type": "null"
          }
        ],
        "default": null,
        "x-description": "Use this endpoint to reach out to your app via internal network within the cluster. Platform authorization is not applied here but only the workloads from the same project can access it.",
        "x-is-advanced-field": false,
        "x-meta-type": "inline",
        "x-title": "Web App inter-cluster URL"
      },
      "external_web_app_url": {
        "anyOf": [
          {
            "$ref": "#/$defs/RestAPI"
          },
          {
            "type": "null"
          }
        ],
        "default": null,
        "x-description": "Use this endpoint to reach out to your app via public network from outside the cluster. Platform authorization is applied here if you enabled it during the deployment.",
        "x-is-advanced-field": false,
        "x-meta-type": "inline",
        "x-title": "External Web App URL"
      }
    },
    "title": "CustomDeploymentOutputs",
    "type": "object"
  },
  "tags": [
    "mlflow",
    "mlops",
    "tracking",
    "artifacts"
  ],
  "git_url": "https://github.com/neuro-inc/mlops-custom-deployment-app",
  "helm_path": "charts/custom-deployment",
  "type": "mlops",
  "logo": "https://mlflow.org/docs/latest/images/logo-light.svg",
  "assets": [
    {
      "type": "image",
      "url": "https://mlflow.org/docs/latest/images/logo-light.svg"
    }
  ],
  "documentation_urls": [
    {
      "text": "MLFlow GitHub",
      "url": "https://github.com/mlflow/mlflow"
    },
    {
      "text": "MLFlow Official Docs",
      "url": "https://mlflow.org/docs/latest"
    }
  ],
  "external_urls": [
    {
      "text": "MLFlow Official Docs",
      "url": "https://mlflow.org/docs/latest/index.html"
    }
  ],
  "mlops_app_type": "mlflow",
  "preprocessor_image": null,
  "postprocessor_image": null
}