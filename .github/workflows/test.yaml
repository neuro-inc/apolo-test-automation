on:
  workflow_call: {}

jobs:

  pre-commit:
    name: Pre-commit checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Checkout commit
      uses: actions/checkout@v4
    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version-file: .python-version
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
    - name: Sync
      run: uv sync
    - name: Run pre-commit
      run: |
        echo "::add-matcher::.github/actionlint-matcher.json"
        uv run pre-commit run --all-files

  mypy:
    name: Mypy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Checkout commit
      uses: actions/checkout@v4
    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version-file: .python-version
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
    - name: Sync
      run: uv sync
    - name: Mypy
      run: |
        uv run mypy

  run-tests:
    name: Run auto tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install Playwright browsers
        run: |
              uv run python -m playwright install --with-deps

      - name: Install Allure
        run: |
              mkdir -p allure-bin
              curl -sSL -o allure.zip https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.zip
              unzip -q allure.zip -d allure-bin
              export PATH="$PWD/allure-bin/allure-2.27.0/bin:$PATH"
              echo "$PWD/allure-bin/allure-2.27.0/bin" >> $GITHUB_PATH
              allure --version

      - name: Run tests
        run: uv run pytest tests

      - name: Read test summary
        if: always()
        id: summary
        run: |
              echo "summary_text<<EOF" >> $GITHUB_OUTPUT
              cat reports/logs/summary.log >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./reports/allure-report

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./reports/allure-report
          publish_branch: gh-pages
          destination_dir: run-${{ github.run_number }}

      - name: Comment with Allure Report URL
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
                  const pr = context.payload.pull_request;
                  const jobName = context.job;
                  const runNumber = context.runNumber;
                  const summary = process.env.SUMMARY_TEXT;
                  const url = `https://${context.repo.owner}.github.io/${context.repo.repo}/run-${runNumber}/index.html`;

                  const comment = [
                    `**${jobName}** run #${runNumber}`,
                    `**Summary:** ${summary}`,
                    `**Allure report:** [View Report](${url})`
                  ].join('\n');

                  github.rest.issues.createComment({
                  issue_number: pr.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                  });
        env:
            SUMMARY_TEXT: ${{ steps.summary.outputs.summary_text }}


  check:
    name: Check
    needs:
    - pre-commit
    - mypy
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
