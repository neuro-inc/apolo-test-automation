name: Nightly Tests Run Workflow

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'
permissions:
  contents: write
  pages: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Set destination directory
        id: set-destination
        run: |
            echo "DEST=run-test-latest" >> "$GITHUB_ENV"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install Playwright browsers
        run: uv run python -m playwright install --with-deps

      - name: Install Allure
        run: |
          mkdir -p allure-bin
          curl -sSL -o allure.zip https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.zip
          unzip -q allure.zip -d allure-bin
          echo "$PWD/allure-bin/allure-2.27.0/bin" >> $GITHUB_PATH
          export PATH="$PWD/allure-bin/allure-2.27.0/bin:$PATH"
          allure --version

      - name: Copy Allure history from qa-regression-history branch
        run: |
            git fetch origin qa-regression-history
            mkdir -p reports/allure-results/history
            git clone --depth 1 --branch qa-regression-history https://github.com/${{ github.repository }} history-temp
            cp -r history-temp/history/* reports/allure-results/history/ || echo "No history found"
            ls -l reports/allure-results/history
            rm -rf history-temp

      - name: Run tests
        id: run_tests
        run: |
          uv run pytest tests -n 3 --dist loadfile --testmon
          echo "Disk space after running tests:"
          df -h

      - name: Save .testmondata to branch
        if: always()
        run: |
          git config user.name "github-actions"
          git config user.email "ci@github.com"

          git fetch
          git checkout -B testmon-cache origin/testmon-cache || git checkout --orphan testmon-cache

          cp .testmondata . || echo "No testmondata found"
          git add .testmondata
          git commit -m "Update testmondata from nightly run" || echo "No changes"
          git push origin testmon-cache --force

      - name: Read test summary
        if: always()
        id: summary
        run: |
          echo "summary_text<<EOF" >> $GITHUB_OUTPUT
          cat reports/logs/summary.log >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./reports/allure-report
          publish_branch: gh-pages
          destination_dir: ${{ env.DEST }}

      - name: Wait for GitHub Pages to become available
        if: always()
        run: |
            REPORT_URL="https://neuro-inc.github.io/${{ github.event.repository.name }}/run-test-latest/index.html"

            echo "Waiting for GitHub Pages to become available at: $REPORT_URL"

            for i in {1..20}; do
              status=$(curl -o /dev/null -s -w "%{http_code}" "$REPORT_URL")
              if [[ "$status" == "200" ]]; then
                echo "‚úÖ GitHub Pages is available!"
                break
              else
                echo "Waiting... (attempt $i/20), status: $status"
                sleep 30
              fi
            done

      - name: Notify Slack
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          REPORT_URL="https://neuro-inc.github.io/${{ github.event.repository.name }}/run-test-latest/index.html"

          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            TRIGGER="üïí Scheduled run (by GitHub Actions)"
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TRIGGER="üë§ Manually triggered by ${{ github.actor }}"
          else
            TRIGGER="üîÅ Triggered by event: ${{ github.event_name }} (actor: ${{ github.actor }})"
          fi

          {
            echo "*üìä Regression Test Report* :: $TRIGGER"
            echo '```'
            cat reports/logs/summary.log || echo "No summary found"
            echo '```'
            echo "<$REPORT_URL|View Report>"
          } > slack_message.txt

          jq -Rs '{text: .}' < slack_message.txt > slack_payload.json
          curl -X POST -H 'Content-type: application/json' --data @slack_payload.json "$SLACK_WEBHOOK_URL"


      - name: Push Allure history to qa-regression-history branch
        if: always()
        run: |
          git config user.name "github-actions"
          git config user.email "ci@github.com"

          git fetch
          git checkout -B qa-regression-history origin/qa-regression-history || git checkout --orphan qa-regression-history

          mkdir -p history
          cp -r reports/allure-results/history/* history/ || echo "No history to copy"

          git add history
          git commit -m "Update Allure history from nightly run" || echo "No changes to commit"
          git push origin qa-regression-history --force

      - name: Clean test artifacts to save space
        if: always()
        run: rm -rf reports/logs reports/screenshots reports/allure-results
